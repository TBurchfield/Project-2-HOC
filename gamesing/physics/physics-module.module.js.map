{"version":3,"file":"physics-module.module.js.map","sources":["../src/api.js","../src/eventable.js","../src/constraints/ConeTwistConstraint.js","../src/constraints/HingeConstraint.js","../src/constraints/PointConstraint.js","../src/constraints/SliderConstraint.js","../src/constraints/DOFConstraint.js","../src/vehicle/vehicle.js","../src/modules/core/WorldModuleBase.js","../bundle-worker/workerhelper.js","../src/worker.js","../src/modules/WorldModule.js","../src/modules/core/PhysicsModule.js","../src/modules/BoxModule.js","../src/modules/CompoundModule.js","../src/modules/CapsuleModule.js","../src/modules/ConcaveModule.js","../src/modules/ConeModule.js","../src/modules/ConvexModule.js","../src/modules/CylinderModule.js","../src/modules/HeightfieldModule.js","../src/modules/PlaneModule.js","../src/modules/SphereModule.js","../src/modules/SoftbodyModule.js","../src/modules/ClothModule.js","../src/modules/RopeModule.js","../src/modules/controls/FirstPersonModule.js"],"sourcesContent":["import {\n  Vector3,\n  Matrix4,\n  Quaternion\n} from 'three';\n\nconst MESSAGE_TYPES = {\n  WORLDREPORT: 0,\n  COLLISIONREPORT: 1,\n  VEHICLEREPORT: 2,\n  CONSTRAINTREPORT: 3,\n  SOFTREPORT: 4\n};\n\nconst REPORT_ITEMSIZE = 14,\n  COLLISIONREPORT_ITEMSIZE = 5,\n  VEHICLEREPORT_ITEMSIZE = 9,\n  CONSTRAINTREPORT_ITEMSIZE = 6;\n\nconst temp1Vector3 = new Vector3(),\n  temp2Vector3 = new Vector3(),\n  temp1Matrix4 = new Matrix4(),\n  temp1Quat = new Quaternion();\n\nconst getEulerXYZFromQuaternion = (x, y, z, w) => {\n  return new Vector3(\n    Math.atan2(2 * (x * w - y * z), (w * w - x * x - y * y + z * z)),\n    Math.asin(2 * (x * z + y * w)),\n    Math.atan2(2 * (z * w - x * y), (w * w + x * x - y * y - z * z))\n  );\n};\n\nconst getQuatertionFromEuler = (x, y, z) => {\n  const c1 = Math.cos(y);\n  const s1 = Math.sin(y);\n  const c2 = Math.cos(-z);\n  const s2 = Math.sin(-z);\n  const c3 = Math.cos(x);\n  const s3 = Math.sin(x);\n  const c1c2 = c1 * c2;\n  const s1s2 = s1 * s2;\n\n  return {\n    w: c1c2 * c3 - s1s2 * s3,\n    x: c1c2 * s3 + s1s2 * c3,\n    y: s1 * c2 * c3 + c1 * s2 * s3,\n    z: c1 * s2 * c3 - s1 * c2 * s3\n  };\n};\n\nconst convertWorldPositionToObject = (position, object) => {\n  temp1Matrix4.identity(); // reset temp matrix\n\n  // Set the temp matrix's rotation to the object's rotation\n  temp1Matrix4.identity().makeRotationFromQuaternion(object.quaternion);\n\n  // Invert rotation matrix in order to \"unrotate\" a point back to object space\n  temp1Matrix4.getInverse(temp1Matrix4);\n\n  // Yay! Temp vars!\n  temp1Vector3.copy(position);\n  temp2Vector3.copy(object.position);\n\n  // Apply the rotation\n  return temp1Vector3.sub(temp2Vector3).applyMatrix4(temp1Matrix4);\n};\n\nconst addObjectChildren = function (parent, object) {\n  for (let i = 0; i < object.children.length; i++) {\n    const child = object.children[i];\n    const physics = child.component ? child.component.use('physics') : false;\n\n    if (physics) {\n      const data = physics.data;\n\n      child.updateMatrix();\n      child.updateMatrixWorld();\n\n      temp1Vector3.setFromMatrixPosition(child.matrixWorld);\n      temp1Quat.setFromRotationMatrix(child.matrixWorld);\n\n      data.position_offset = {\n        x: temp1Vector3.x,\n        y: temp1Vector3.y,\n        z: temp1Vector3.z\n      };\n\n      data.rotation = {\n        x: temp1Quat.x,\n        y: temp1Quat.y,\n        z: temp1Quat.z,\n        w: temp1Quat.w\n      };\n\n      parent.component.use('physics').data.children.push(data);\n    }\n\n    addObjectChildren(parent, child);\n  }\n};\n\nexport {\n  getEulerXYZFromQuaternion,\n  getQuatertionFromEuler,\n  convertWorldPositionToObject,\n  addObjectChildren,\n\n  MESSAGE_TYPES,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE,\n\n  temp1Vector3,\n  temp2Vector3,\n  temp1Matrix4,\n  temp1Quat\n};\n","export class Eventable {\n  constructor() {\n    this._eventListeners = {};\n  }\n\n  addEventListener(event_name, callback) {\n    if (!this._eventListeners.hasOwnProperty(event_name))\n      this._eventListeners[event_name] = [];\n\n    this._eventListeners[event_name].push(callback);\n  }\n\n  removeEventListener(event_name, callback) {\n    let index;\n\n    if (!this._eventListeners.hasOwnProperty(event_name)) return false;\n\n    if ((index = this._eventListeners[event_name].indexOf(callback)) >= 0) {\n      this._eventListeners[event_name].splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  dispatchEvent(event_name) {\n    let i;\n    const parameters = Array.prototype.splice.call(arguments, 1);\n\n    if (this._eventListeners.hasOwnProperty(event_name)) {\n      for (i = 0; i < this._eventListeners[event_name].length; i++)\n        this._eventListeners[event_name][i].apply(this, parameters);\n    }\n  }\n\n  static make(obj) {\n    obj.prototype.addEventListener = Eventable.prototype.addEventListener;\n    obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\n    obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\n  }\n}\n","import { convertWorldPositionToObject } from '../api';\nimport { Euler, Matrix4, Quaternion, Vector3 } from 'three';\n\nexport class ConeTwistConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    const objectb = obja;\n\n    if (position === undefined) console.error('Both objects must be defined in a ConeTwistConstraint.');\n\n    this.type = 'conetwist';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.objectb = objectb.use('physics').data.id;\n    this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    this.axisa = {x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z};\n    this.axisb = {x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z};\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  }\n\n  setLimit(x, y, z) {\n    if(this.worldModule) this.worldModule.execute('conetwist_setLimit', {constraint: this.id, x, y, z});\n  }\n\n  enableMotor() {\n    if(this.worldModule) this.worldModule.execute('conetwist_enableMotor', {constraint: this.id});\n  }\n\n  setMaxMotorImpulse(max_impulse) {\n    if(this.worldModule) this.worldModule.execute('conetwist_setMaxMotorImpulse', {constraint: this.id, max_impulse});\n  }\n\n  setMotorTarget(target) {\n    if (target instanceof Vector3)\n      target = new Quaternion().setFromEuler(new Euler(target.x, target.y, target.z));\n    else if (target instanceof Euler)\n      target = new Quaternion().setFromEuler(target);\n    else if (target instanceof Matrix4)\n      target = new Quaternion().setFromRotationMatrix(target);\n\n    if(this.worldModule) this.worldModule.execute('conetwist_setMotorTarget', {\n      constraint: this.id,\n      x: target.x,\n      y: target.y,\n      z: target.z,\n      w: target.w\n    });\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class HingeConstraint {\n  constructor(obja, objb, position, axis) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'hinge';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.position = position.clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  }\n\n  setLimits(low, high, bias_factor, relaxation_factor) {\n    if (this.worldModule) this.worldModule.execute('hinge_setLimits', {\n      constraint: this.id,\n      low,\n      high,\n      bias_factor,\n      relaxation_factor\n    });\n  }\n\n  enableAngularMotor(velocity, acceleration) {\n    if (this.worldModule) this.worldModule.execute('hinge_enableAngularMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableMotor() {\n    if (this.worldModule) this.worldModule.execute('hinge_disableMotor', {constraint: this.id});\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class PointConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'point';\n    this.appliedImpulse = 0;\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n\n    if (objectb) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb\n    };\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class SliderConstraint {\n  constructor(obja, objb, position, axis) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'slider';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  }\n\n  setLimits(lin_lower, lin_upper, ang_lower, ang_upper) {\n    if (this.worldModule) this.worldModule.execute('slider_setLimits', {\n      constraint: this.id,\n      lin_lower,\n      lin_upper,\n      ang_lower,\n      ang_upper\n    });\n  }\n\n  setRestitution(linear, angular) {\n    if (this.worldModule) this.worldModule.execute(\n      'slider_setRestitution',\n      {\n        constraint: this.id,\n        linear,\n        angular\n      }\n    );\n  }\n\n  enableLinearMotor(velocity, acceleration) {\n    if (this.worldModule) this.worldModule.execute('slider_enableLinearMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableLinearMotor() {\n    if (this.worldModule) this.worldModule.execute('slider_disableLinearMotor', {constraint: this.id});\n  }\n\n  enableAngularMotor(velocity, acceleration) {\n    this.scene.execute('slider_enableAngularMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableAngularMotor() {\n    if (this.worldModule) this.worldModule.execute('slider_disableAngularMotor', {constraint: this.id});\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class DOFConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if ( position === undefined ) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'dof';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject( position, objecta ).clone();\n    this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\n\n    if ( objectb ) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject( position, objectb ).clone();\n      this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  }\n\n  setLinearLowerLimit(limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setLinearUpperLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setAngularLowerLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setAngularUpperLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  enableAngularMotor (which) {\n    if (this.worldModule) this.worldModule.execute( 'dof_enableAngularMotor', { constraint: this.id, which: which } );\n  }\n\n  configureAngularMotor (which, low_angle, high_angle, velocity, max_force ) {\n    if (this.worldModule) this.worldModule.execute( 'dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force } );\n  }\n\n  disableAngularMotor (which) {\n    if (this.worldModule) this.worldModule.execute( 'dof_disableAngularMotor', { constraint: this.id, which: which } );\n  }\n}\n","import {Mesh} from 'three';\nimport {VehicleTunning} from './tunning';\n\nexport class Vehicle {\n  constructor(mesh, tuning = new VehicleTuning()) {\n    this.mesh = mesh;\n    this.wheels = [];\n\n    this._physijs = {\n      id: getObjectId(),\n      rigidBody: mesh._physijs.id,\n      suspension_stiffness: tuning.suspension_stiffness,\n      suspension_compression: tuning.suspension_compression,\n      suspension_damping: tuning.suspension_damping,\n      max_suspension_travel: tuning.max_suspension_travel,\n      friction_slip: tuning.friction_slip,\n      max_suspension_force: tuning.max_suspension_force\n    };\n  }\n\n  addWheel(wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning) {\n    const wheel = new Mesh(wheel_geometry, wheel_material);\n\n    wheel.castShadow = wheel.receiveShadow = true;\n    wheel.position.copy(wheel_direction).multiplyScalar(suspension_rest_length / 100).add(connection_point);\n\n    this.world.add(wheel);\n    this.wheels.push(wheel);\n\n    this.world.execute('addWheel', {\n      id: this._physijs.id,\n      connection_point: {x: connection_point.x, y: connection_point.y, z: connection_point.z},\n      wheel_direction: {x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z},\n      wheel_axle: {x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z},\n      suspension_rest_length,\n      wheel_radius,\n      is_front_wheel,\n      tuning\n    });\n  }\n\n  setSteering(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('setSteering', {id: this._physijs.id, wheel, steering: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('setSteering', {id: this._physijs.id, wheel: i, steering: amount});\n    }\n  }\n\n  setBrake(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('setBrake', {id: this._physijs.id, wheel, brake: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('setBrake', {id: this._physijs.id, wheel: i, brake: amount});\n    }\n  }\n\n  applyEngineForce(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('applyEngineForce', {id: this._physijs.id, wheel, force: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('applyEngineForce', {id: this._physijs.id, wheel: i, force: amount});\n    }\n  }\n}\n","import {\n  Scene as SceneNative,\n  Mesh,\n  SphereGeometry,\n  MeshNormalMaterial,\n  BoxGeometry,\n  Vector3\n} from 'three';\n\nimport {Loop} from 'whs';\n\nimport {Vehicle} from '../../vehicle/vehicle';\nimport {Eventable} from '../../eventable';\n\nimport {\n  addObjectChildren,\n  MESSAGE_TYPES,\n  temp1Vector3,\n  temp1Matrix4,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE\n} from '../../api';\n\nexport default class WorldModuleBase extends Eventable {\n  static defaults = {\n    fixedTimeStep: 1/60,\n    rateLimit: true,\n    ammo: \"\",\n    softbody: false,\n    gravity: new Vector3(0, 100, 0)\n  };\n\n  constructor(options) {\n    super();\n\n    this.options = Object.assign(WorldModuleBase.defaults, options);\n\n    this.objects = {};\n    this.vehicles = {};\n    this.constraints = {};\n    this.isSimulating = false;\n\n    this.getObjectId = (() => {\n      let id = 1;\n      return () => {\n        return id++;\n      };\n    })();\n  }\n\n  setup() {\n    this.receive(event => {\n      let _temp,\n        data = event.data;\n\n      if (data instanceof ArrayBuffer && data.byteLength !== 1)// byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\n        data = new Float32Array(data);\n\n      if (data instanceof Float32Array) {\n        // transferable object\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            this.updateScene(data);\n            break;\n\n          case MESSAGE_TYPES.SOFTREPORT:\n            this.updateSoftbodies(data);\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            this.updateCollisions(data);\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            this.updateVehicles(data);\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            this.updateConstraints(data);\n            break;\n          default:\n        }\n      } else if (data.cmd) {\n        // non-transferable object\n        switch (data.cmd) {\n          case 'objectReady':\n            _temp = data.params;\n            if (this.objects[_temp]) this.objects[_temp].dispatchEvent('ready');\n            break;\n\n          case 'worldReady':\n            this.dispatchEvent('ready');\n            break;\n\n          case 'ammoLoaded':\n            this.dispatchEvent('loaded');\n            // console.log(\"Physics loading time: \" + (performance.now() - start) + \"ms\");\n            break;\n\n          case 'vehicle':\n            window.test = data;\n            break;\n\n          default:\n            // Do nothing, just show the message\n            console.debug(`Received: ${data.cmd}`);\n            console.dir(data.params);\n            break;\n        }\n      } else {\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            this.updateScene(data);\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            this.updateCollisions(data);\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            this.updateVehicles(data);\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            this.updateConstraints(data);\n            break;\n          default:\n        }\n      }\n    });\n  }\n\n  updateScene(info) {\n    let index = info[1];\n\n    while (index--) {\n      const offset = 2 + index * REPORT_ITEMSIZE;\n      const object = this.objects[info[offset]];\n      const component = object.component;\n      const data = component.use('physics').data;\n\n      if (object === null) continue;\n\n      if (component.__dirtyPosition === false) {\n        object.position.set(\n          info[offset + 1],\n          info[offset + 2],\n          info[offset + 3]\n        );\n\n        component.__dirtyPosition = false;\n      }\n\n      if (component.__dirtyRotation === false) {\n        object.quaternion.set(\n          info[offset + 4],\n          info[offset + 5],\n          info[offset + 6],\n          info[offset + 7]\n        );\n\n        component.__dirtyRotation = false;\n      }\n\n      data.linearVelocity.set(\n        info[offset + 8],\n        info[offset + 9],\n        info[offset + 10]\n      );\n\n      data.angularVelocity.set(\n        info[offset + 11],\n        info[offset + 12],\n        info[offset + 13]\n      );\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(info.buffer, [info.buffer]); // Give the typed array back to the worker\n\n    this.isSimulating = false;\n    this.dispatchEvent('update');\n  }\n\n  updateSoftbodies(info) {\n    let index = info[1],\n      offset = 2;\n\n    while (index--) {\n      const size = info[offset + 1];\n      const object = this.objects[info[offset]];\n\n      if (object === null) continue;\n\n      const data = object.component.use('physics').data;\n\n      const attributes = object.geometry.attributes;\n      const volumePositions = attributes.position.array;\n\n      const offsetVert = offset + 2;\n\n      // console.log(data.id);\n      if (!data.isSoftBodyReset) {\n        object.position.set(0, 0, 0);\n        object.quaternion.set(0, 0, 0, 0);\n\n        data.isSoftBodyReset = true;\n      }\n\n      if (data.type === \"softTrimesh\") {\n        const volumeNormals = attributes.normal.array;\n\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 18;\n\n          const x1 = info[offs];\n          const y1 = info[offs + 1];\n          const z1 = info[offs + 2];\n\n          const nx1 = info[offs + 3];\n          const ny1 = info[offs + 4];\n          const nz1 = info[offs + 5];\n\n          const x2 = info[offs + 6];\n          const y2 = info[offs + 7];\n          const z2 = info[offs + 8];\n\n          const nx2 = info[offs + 9];\n          const ny2 = info[offs + 10];\n          const nz2 = info[offs + 11];\n\n          const x3 = info[offs + 12];\n          const y3 = info[offs + 13];\n          const z3 = info[offs + 14];\n\n          const nx3 = info[offs + 15];\n          const ny3 = info[offs + 16];\n          const nz3 = info[offs + 17];\n\n          const i9 = i * 9;\n\n          volumePositions[i9] = x1;\n          volumePositions[i9 + 1] = y1;\n          volumePositions[i9 + 2] = z1;\n\n          volumePositions[i9 + 3] = x2;\n          volumePositions[i9 + 4] = y2;\n          volumePositions[i9 + 5] = z2;\n\n          volumePositions[i9 + 6] = x3;\n          volumePositions[i9 + 7] = y3;\n          volumePositions[i9 + 8] = z3;\n\n          volumeNormals[i9] = nx1;\n          volumeNormals[i9 + 1] = ny1;\n          volumeNormals[i9 + 2] = nz1;\n\n          volumeNormals[i9 + 3] = nx2;\n          volumeNormals[i9 + 4] = ny2;\n          volumeNormals[i9 + 5] = nz2;\n\n          volumeNormals[i9 + 6] = nx3;\n          volumeNormals[i9 + 7] = ny3;\n          volumeNormals[i9 + 8] = nz3;\n        }\n\n        attributes.normal.needsUpdate = true;\n        offset += 2 + size * 18;\n      }\n      else if (data.type === \"softRopeMesh\") {\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 3;\n\n          const x = info[offs];\n          const y = info[offs + 1];\n          const z = info[offs + 2];\n\n          volumePositions[i * 3] = x;\n          volumePositions[i * 3 + 1] = y;\n          volumePositions[i * 3 + 2] = z;\n        }\n\n        offset += 2 + size * 3;\n      } else {\n        const volumeNormals = attributes.normal.array;\n\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 6;\n\n          const x = info[offs];\n          const y = info[offs + 1];\n          const z = info[offs + 2];\n\n          const nx = info[offs + 3];\n          const ny = info[offs + 4];\n          const nz = info[offs + 5];\n\n          volumePositions[i * 3] = x;\n          volumePositions[i * 3 + 1] = y;\n          volumePositions[i * 3 + 2] = z;\n\n          // FIXME: Normals are pointed to look inside;\n          volumeNormals[i * 3] = nx;\n          volumeNormals[i * 3 + 1] = ny;\n          volumeNormals[i * 3 + 2] = nz;\n        }\n\n        attributes.normal.needsUpdate = true;\n        offset += 2 + size * 6;\n      }\n\n      attributes.position.needsUpdate = true;\n    }\n\n    // if (this.SUPPORT_TRANSFERABLE)\n    //   this.send(info.buffer, [info.buffer]); // Give the typed array back to the worker\n\n    this.isSimulating = false;\n  }\n\n  updateVehicles(data) {\n    let vehicle, wheel;\n\n    for (let i = 0; i < (data.length - 1) / VEHICLEREPORT_ITEMSIZE; i++) {\n      const offset = 1 + i * VEHICLEREPORT_ITEMSIZE;\n      vehicle = this.vehicles[data[offset]];\n\n      if (vehicle === null) continue;\n\n      wheel = vehicle.wheels[data[offset + 1]];\n\n      wheel.position.set(\n        data[offset + 2],\n        data[offset + 3],\n        data[offset + 4]\n      );\n\n      wheel.quaternion.set(\n        data[offset + 5],\n        data[offset + 6],\n        data[offset + 7],\n        data[offset + 8]\n      );\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  updateConstraints(data) {\n    let constraint, object;\n\n    for (let i = 0; i < (data.length - 1) / CONSTRAINTREPORT_ITEMSIZE; i++) {\n      const offset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\n      constraint = this.constraints[data[offset]];\n      object = this.objects[data[offset + 1]];\n\n      if (constraint === undefined || object === undefined) continue;\n\n      temp1Vector3.set(\n        data[offset + 2],\n        data[offset + 3],\n        data[offset + 4]\n      );\n\n      temp1Matrix4.extractRotation(object.matrix);\n      temp1Vector3.applyMatrix4(temp1Matrix4);\n\n      constraint.positiona.addVectors(object.position, temp1Vector3);\n      constraint.appliedImpulse = data[offset + 5];\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  updateCollisions(info) {\n    /**\n     * #TODO\n     * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\n     * effect from the previous version's evilness which mutated when switching to transferable objects.\n     *\n     * If you feel inclined to make this better, please do so.\n     */\n\n    const collisions = {},\n      normal_offsets = {};\n\n    // Build collision manifest\n    for (let i = 0; i < info[1]; i++) {\n      const offset = 2 + i * COLLISIONREPORT_ITEMSIZE;\n      const object = info[offset];\n      const object2 = info[offset + 1];\n\n      normal_offsets[`${object}-${object2}`] = offset + 2;\n      normal_offsets[`${object2}-${object}`] = -1 * (offset + 2);\n\n      // Register collisions for both the object colliding and the object being collided with\n      if (!collisions[object]) collisions[object] = [];\n      collisions[object].push(object2);\n\n      if (!collisions[object2]) collisions[object2] = [];\n      collisions[object2].push(object);\n    }\n\n    // Deal with collisions\n    for (const id1 in this.objects) {\n      if (!this.objects.hasOwnProperty(id1)) continue;\n      const object = this.objects[id1];\n      const component = object.component;\n      const data = component.use('physics').data;\n\n      if (object === null) continue;\n\n      // If object touches anything, ...\n      if (collisions[id1]) {\n        // Clean up touches array\n        for (let j = 0; j < data.touches.length; j++) {\n          if (collisions[id1].indexOf(data.touches[j]) === -1)\n            data.touches.splice(j--, 1);\n        }\n\n        // Handle each colliding object\n        for (let j = 0; j < collisions[id1].length; j++) {\n          const id2 = collisions[id1][j];\n          const object2 = this.objects[id2];\n\n          if (object2) {\n            const component2 = object2.component;\n            const data2 = component2.use('physics').data;\n            // If object was not already touching object2, notify object\n            if (data.touches.indexOf(id2) === -1) {\n              data.touches.push(id2);\n\n              const vel = component.use('physics').getLinearVelocity();\n              const vel2 = component2.use('physics').getLinearVelocity();\n\n              temp1Vector3.subVectors(vel, vel2);\n              const temp1 = temp1Vector3.clone();\n\n              temp1Vector3.subVectors(vel, vel2);\n              const temp2 = temp1Vector3.clone();\n\n              let normal_offset = normal_offsets[`${data.id}-${data2.id}`];\n\n              if (normal_offset > 0) {\n                temp1Vector3.set(\n                  -info[normal_offset],\n                  -info[normal_offset + 1],\n                  -info[normal_offset + 2]\n                );\n              } else {\n                normal_offset *= -1;\n\n                temp1Vector3.set(\n                  info[normal_offset],\n                  info[normal_offset + 1],\n                  info[normal_offset + 2]\n                );\n              }\n\n              component.emit('collision', object2, temp1, temp2, temp1Vector3);\n            }\n          }\n        }\n      } else data.touches.length = 0; // not touching other objects\n    }\n\n    this.collisions = collisions;\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(info.buffer, [info.buffer]); // Give the typed array back to the worker\n  }\n\n  addConstraint(constraint, show_marker) {\n    constraint.id = this.getObjectId();\n    this.constraints[constraint.id] = constraint;\n    constraint.worldModule = this;\n    this.execute('addConstraint', constraint.getDefinition());\n\n    if (show_marker) {\n      let marker;\n\n      switch (constraint.type) {\n        case 'point':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'hinge':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'slider':\n          marker = new Mesh(\n            new BoxGeometry(10, 1, 1),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n\n          // This rotation isn't right if all three axis are non-0 values\n          // TODO: change marker's rotation order to ZYX\n          marker.rotation.set(\n            constraint.axis.y, // yes, y and\n            constraint.axis.x, // x axis are swapped\n            constraint.axis.z\n          );\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'conetwist':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'dof':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n        default:\n      }\n    }\n\n    return constraint;\n  }\n\n  onSimulationResume() {\n    this.execute('onSimulationResume', {});\n  }\n\n  removeConstraint(constraint) {\n    if (this.constraints[constraint.id] !== undefined) {\n      this.execute('removeConstraint', {id: constraint.id});\n      delete this.constraints[constraint.id];\n    }\n  }\n\n  execute(cmd, params) {\n    this.send({cmd, params});\n  }\n\n  onAddCallback(component) {\n    const object = component.native;\n    const data = object.component.use('physics').data;\n\n    if (data) {\n      component.manager.set('module:world', this);\n      data.id = this.getObjectId();\n      object.component.use('physics').data = data;\n\n      if (object instanceof Vehicle) {\n        this.onAddCallback(object.mesh);\n        this.vehicles[data.id] = object;\n        this.execute('addVehicle', data);\n      } else {\n        component.__dirtyPosition = false;\n        component.__dirtyRotation = false;\n        this.objects[data.id] = object;\n\n        if (object.children.length) {\n          data.children = [];\n          addObjectChildren(object, object);\n        }\n\n        // object.quaternion.setFromEuler(object.rotation);\n        //\n        // console.log(object.component);\n        // console.log(object.rotation);\n\n        // Object starting position + rotation\n        data.position = {\n          x: object.position.x,\n          y: object.position.y,\n          z: object.position.z\n        };\n\n        data.rotation = {\n          x: object.quaternion.x,\n          y: object.quaternion.y,\n          z: object.quaternion.z,\n          w: object.quaternion.w\n        };\n\n        if (data.width) data.width *= object.scale.x;\n        if (data.height) data.height *= object.scale.y;\n        if (data.depth) data.depth *= object.scale.z;\n\n        this.execute('addObject', data);\n      }\n\n      component.emit('physics:added');\n    }\n  }\n\n  onRemoveCallback(component) {\n    const object = component.native;\n\n    if (object instanceof Vehicle) {\n      this.execute('removeVehicle', {id: object._physijs.id});\n      while (object.wheels.length) this.remove(object.wheels.pop());\n\n      this.remove(object.mesh);\n      this.vehicles[object._physijs.id] = null;\n    } else {\n      // Mesh.prototype.remove.call(this, object);\n\n      if (object._physijs) {\n        component.manager.remove('module:world');\n        this.objects[object._physijs.id] = null;\n        this.execute('removeObject', {id: object._physijs.id});\n      }\n    }\n  }\n\n  defer(func, args) {\n    return new Promise((resolve) => {\n      if (this.isLoaded) {\n        func(...args);\n        resolve();\n      } else this.loader.then(() => {\n        func(...args);\n        resolve();\n      });\n    });\n  }\n\n  manager(manager) {\n    manager.define('physics');\n    manager.set('physicsWorker', this.worker);\n  }\n\n  bridge = {\n    onAdd(component, self) {\n      if (component.use('physics')) return self.defer(self.onAddCallback.bind(self), [component]);\n      return;\n    },\n\n    onRemove(component, self) {\n      if (component.use('physics')) return self.defer(self.onRemoveCallback.bind(self), [component]);\n      return;\n    }\n  };\n\n  integrate(self) {\n    // ...\n\n    this.setFixedTimeStep = function(fixedTimeStep) {\n      if (fixedTimeStep) self.execute('setFixedTimeStep', fixedTimeStep);\n    }\n\n    this.setGravity = function(gravity) {\n      if (gravity) self.execute('setGravity', gravity);\n    }\n\n    this.addConstraint = self.addConstraint.bind(self);\n\n    this.simulate = function(timeStep, maxSubSteps) {\n      if (self._stats) self._stats.begin();\n\n      if (self.isSimulating) return false;\n      self.isSimulating = true;\n\n      for (const object_id in self.objects) {\n        if (!self.objects.hasOwnProperty(object_id)) continue;\n\n        const object = self.objects[object_id];\n        const component = object.component;\n        const data = component.use('physics').data;\n\n        if (object !== null && (component.__dirtyPosition || component.__dirtyRotation)) {\n          const update = {id: data.id};\n\n          if (component.__dirtyPosition) {\n            update.pos = {\n              x: object.position.x,\n              y: object.position.y,\n              z: object.position.z\n            };\n\n            if (data.isSoftbody) object.position.set(0, 0, 0);\n\n            component.__dirtyPosition = false;\n          }\n\n          if (component.__dirtyRotation) {\n            update.quat = {\n              x: object.quaternion.x,\n              y: object.quaternion.y,\n              z: object.quaternion.z,\n              w: object.quaternion.w\n            };\n\n            if (data.isSoftbody) object.rotation.set(0, 0, 0);\n\n            component.__dirtyRotation = false;\n          }\n\n          self.execute('updateTransform', update);\n        }\n      }\n\n      self.execute('simulate', {timeStep, maxSubSteps});\n\n      if (self._stats) self._stats.end();\n      return true;\n    }\n\n    // const simulateProcess = (t) => {\n    //   window.requestAnimationFrame(simulateProcess);\n\n    //   this.simulate(1/60, 1); // delta, 1\n    // }\n\n    // simulateProcess();\n\n    self.loader.then(() => {\n      self.simulateLoop = new Loop((clock) => {\n        this.simulate(clock.getDelta(), 1); // delta, 1\n      });\n\n      self.simulateLoop.start(this);\n\n      console.log(self.options.gravity);\n      this.setGravity(self.options.gravity);\n    });\n  }\n}\n","var TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder,\n    URL = window.URL || window.webkitURL,\n    Worker = window.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nexport default function shimWorker (filename, fn) {\n    return function ShimWorker (forceFallback) {\n        var o = this;\n\n        if (!fn) {\n            return new Worker(filename);\n        }\n        else if (Worker && !forceFallback) {\n            // Convert the function's inner code to a string to construct the worker\n            var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n                objURL = createSourceObject(source);\n\n            this[TARGET] = new Worker(objURL);\n            URL.revokeObjectURL(objURL);\n            return this[TARGET];\n        }\n        else {\n            var selfShim = {\n                    postMessage: function(m) {\n                        if (o.onmessage) {\n                            setTimeout(function(){ o.onmessage({ data: m, target: selfShim }) });\n                        }\n                    }\n                };\n\n            fn.call(selfShim);\n            this.postMessage = function(m) {\n                setTimeout(function(){ selfShim.onmessage({ data: m, target: o }) });\n            };\n            this.isThisThread = true;\n        }\n    };\n};\n\n// Test Worker capabilities\nif (Worker) {\n    var testWorker,\n        objURL = createSourceObject('self.onmessage = function () {}'),\n        testArray = new Uint8Array(1);\n\n    try {\n        // No workers via blobs in Edge 12 and IE 11 and lower :(\n        if (/(?:Trident|Edge)\\/(?:[567]|12)/i.test(navigator.userAgent)) {\n            throw new Error('Not available');\n        }\n        testWorker = new Worker(objURL);\n\n        // Native browser on some Samsung devices throws for transferables, let's detect it\n        testWorker.postMessage(testArray, [testArray.buffer]);\n    }\n    catch (e) {\n        Worker = null;\n    }\n    finally {\n        URL.revokeObjectURL(objURL);\n        if (testWorker) {\n            testWorker.terminate();\n        }\n    }\n}\n\nfunction createSourceObject(str) {\n    try {\n        return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n    }\n    catch (e) {\n        var blob = new BlobBuilder();\n        blob.append(str);\n        return URL.createObjectURL(blob.getBlob(type));\n    }\n}\n","import shimWorker from 'rollup-plugin-bundle-worker';\nexport default new shimWorker(\"../worker.js\", function (window, document) {\nvar self = this;\nfunction Events(target) {\n  var events = {},\n    empty = [];\n  target = target || this\n  /**\n   *  On: listen to events\n   */\n  target.on = function (type, func, ctx) {\n    (events[type] = events[type] || []).push([func, ctx])\n    return target\n  }\n  /**\n   *  Off: stop listening to event / specific callback\n   */\n  target.off = function (type, func) {\n    type || (events = {})\n    var list = events[type] || empty,\n      i = list.length = func ? list.length : 0;\n    while (i--) func == list[i][0] && list.splice(i, 1)\n    return target\n  }\n  /**\n   * Emit: send event, callbacks will be triggered\n   */\n  target.emit = function (type) {\n    var e = events[type] || empty,\n      list = e.length > 0 ? e.slice(0, e.length) : e,\n      i = 0,\n      j;\n    while (j = list[i++]) j[0].apply(j[1], empty.slice.call(arguments, 1))\n    return target\n  };\n};\n\nconst insideWorker = !self.document;\nif (!insideWorker) self = new Events();\n\nlet send = insideWorker ? (self.webkitPostMessage || self.postMessage) : function (data) {\n  self.emit('message', { data });\n};\n\nself.send = send;\n\nlet SUPPORT_TRANSFERABLE;\n\nif (insideWorker) {\n  const ab = new ArrayBuffer(1);\n\n  send(ab, [ab]);\n  SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n}\n\nconst MESSAGE_TYPES = {\n  WORLDREPORT: 0,\n  COLLISIONREPORT: 1,\n  VEHICLEREPORT: 2,\n  CONSTRAINTREPORT: 3,\n  SOFTREPORT: 4\n};\n\n// temp variables\nlet _object,\n  _vector,\n  _transform,\n  _transform_pos,\n  _softbody_enabled = false,\n  last_simulation_duration = 0,\n\n  _num_objects = 0,\n  _num_rigidbody_objects = 0,\n  _num_softbody_objects = 0,\n  _num_wheels = 0,\n  _num_constraints = 0,\n  _softbody_report_size = 0,\n\n  // world variables\n  fixedTimeStep, // used when calling stepSimulation\n  last_simulation_time,\n\n  world,\n  _vec3_1,\n  _vec3_2,\n  _vec3_3,\n  _quat;\n\n// private cache\nconst public_functions = {},\n  _objects = [],\n  _vehicles = [],\n  _constraints = [],\n  _objects_ammo = {},\n  _object_shapes = {},\n\n  // The following objects are to track objects that ammo.js doesn't clean\n  // up. All are cleaned up when they're corresponding body is destroyed.\n  // Unfortunately, it's very difficult to get at these objects from the\n  // body, so we have to track them ourselves.\n  _motion_states = {},\n  // Don't need to worry about it for cached shapes.\n  _noncached_shapes = {},\n  // A body with a compound shape always has a regular shape as well, so we\n  // have track them separately.\n  _compound_shapes = {};\n\n// object reporting\nlet REPORT_CHUNKSIZE, // report array is increased in increments of this chunk size\n  worldreport,\n  softreport,\n  collisionreport,\n  vehiclereport,\n  constraintreport;\n\nconst WORLDREPORT_ITEMSIZE = 14, // how many float values each reported item needs\n  COLLISIONREPORT_ITEMSIZE = 5, // one float for each object id, and a Vec3 contact normal\n  VEHICLEREPORT_ITEMSIZE = 9, // vehicle id, wheel index, 3 for position, 4 for rotation\n  CONSTRAINTREPORT_ITEMSIZE = 6; // constraint id, offset object, offset, applied impulse\n\nconst getShapeFromCache = (cache_key) => {\n  if (_object_shapes[cache_key] !== undefined)\n    return _object_shapes[cache_key];\n\n  return null;\n};\n\nconst setShapeCache = (cache_key, shape) => {\n  _object_shapes[cache_key] = shape;\n};\n\nconst createShape = (description) => {\n  let shape;\n\n  _transform.setIdentity();\n  switch (description.type) {\n  case 'compound':\n    {\n      shape = new Ammo.btCompoundShape();\n\n      break;\n    }\n  case 'plane':\n    {\n      const cache_key = `plane_${description.normal.x}_${description.normal.y}_${description.normal.z}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.normal.x);\n        _vec3_1.setY(description.normal.y);\n        _vec3_1.setZ(description.normal.z);\n        shape = new Ammo.btStaticPlaneShape(_vec3_1, 0);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'box':\n    {\n      const cache_key = `box_${description.width}_${description.height}_${description.depth}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.width / 2);\n        _vec3_1.setY(description.height / 2);\n        _vec3_1.setZ(description.depth / 2);\n        shape = new Ammo.btBoxShape(_vec3_1);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'sphere':\n    {\n      const cache_key = `sphere_${description.radius}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        shape = new Ammo.btSphereShape(description.radius);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'cylinder':\n    {\n      const cache_key = `cylinder_${description.width}_${description.height}_${description.depth}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.width / 2);\n        _vec3_1.setY(description.height / 2);\n        _vec3_1.setZ(description.depth / 2);\n        shape = new Ammo.btCylinderShape(_vec3_1);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'capsule':\n    {\n      const cache_key = `capsule_${description.radius}_${description.height}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        // In Bullet, capsule height excludes the end spheres\n        shape = new Ammo.btCapsuleShape(description.radius, description.height - 2 * description.radius);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'cone':\n    {\n      const cache_key = `cone_${description.radius}_${description.height}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        shape = new Ammo.btConeShape(description.radius, description.height);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'concave':\n    {\n      const triangle_mesh = new Ammo.btTriangleMesh();\n      if (!description.data.length) return false;\n      const data = description.data;\n\n      for (let i = 0; i < data.length / 9; i++) {\n        _vec3_1.setX(data[i * 9]);\n        _vec3_1.setY(data[i * 9 + 1]);\n        _vec3_1.setZ(data[i * 9 + 2]);\n\n        _vec3_2.setX(data[i * 9 + 3]);\n        _vec3_2.setY(data[i * 9 + 4]);\n        _vec3_2.setZ(data[i * 9 + 5]);\n\n        _vec3_3.setX(data[i * 9 + 6]);\n        _vec3_3.setY(data[i * 9 + 7]);\n        _vec3_3.setZ(data[i * 9 + 8]);\n\n        triangle_mesh.addTriangle(\n          _vec3_1,\n          _vec3_2,\n          _vec3_3,\n          false\n        );\n      }\n\n      shape = new Ammo.btBvhTriangleMeshShape(\n        triangle_mesh,\n        true,\n        true\n      );\n\n      _noncached_shapes[description.id] = shape;\n\n      break;\n    }\n  case 'convex':\n    {\n      shape = new Ammo.btConvexHullShape();\n      const data = description.data;\n\n      for (let i = 0; i < data.length / 3; i++) {\n        _vec3_1.setX(data[i * 3]);\n        _vec3_1.setY(data[i * 3 + 1]);\n        _vec3_1.setZ(data[i * 3 + 2]);\n\n        shape.addPoint(_vec3_1);\n      }\n\n      _noncached_shapes[description.id] = shape;\n\n      break;\n    }\n  case 'heightfield':\n    {\n      const xpts = description.xpts,\n        ypts = description.ypts,\n        points = description.points,\n        ptr = Ammo._malloc(4 * xpts * ypts);\n\n      for (let i = 0, p = 0, p2 = 0; i < xpts; i++) {\n        for (let j = 0; j < ypts; j++) {\n          Ammo.HEAPF32[ptr + p2 >> 2] = points[p];\n\n          p++;\n          p2 += 4;\n        }\n      }\n\n      shape = new Ammo.btHeightfieldTerrainShape(\n        description.xpts,\n        description.ypts,\n        ptr,\n        1, -description.absMaxHeight,\n        description.absMaxHeight,\n        1,\n        'PHY_FLOAT',\n        false\n      );\n\n      _noncached_shapes[description.id] = shape;\n      break;\n    }\n  default:\n    // Not recognized\n    return;\n  }\n\n  return shape;\n};\n\nconst createSoftBody = (description) => {\n  let body;\n\n  const softBodyHelpers = new Ammo.btSoftBodyHelpers();\n\n  switch (description.type) {\n  case 'softTrimesh':\n    {\n      if (!description.aVertices.length) return false;\n\n      body = softBodyHelpers.CreateFromTriMesh(\n        world.getWorldInfo(),\n        description.aVertices,\n        description.aIndices,\n        description.aIndices.length / 3,\n        false\n      );\n\n      break;\n    }\n  case 'softClothMesh':\n    {\n      const cr = description.corners;\n\n      body = softBodyHelpers.CreatePatch(\n        world.getWorldInfo(),\n        new Ammo.btVector3(cr[0], cr[1], cr[2]),\n        new Ammo.btVector3(cr[3], cr[4], cr[5]),\n        new Ammo.btVector3(cr[6], cr[7], cr[8]),\n        new Ammo.btVector3(cr[9], cr[10], cr[11]),\n        description.segments[0],\n        description.segments[1],\n        0,\n        true\n      );\n\n      break;\n    }\n  case 'softRopeMesh':\n    {\n      const data = description.data;\n\n      body = softBodyHelpers.CreateRope(\n        world.getWorldInfo(),\n        new Ammo.btVector3(data[0], data[1], data[2]),\n        new Ammo.btVector3(data[3], data[4], data[5]),\n        data[6] - 1,\n        0\n      );\n\n      break;\n    }\n  default:\n    // Not recognized\n    return;\n  }\n\n  return body;\n};\n\npublic_functions.init = (params = {}) => {\n  if (params.noWorker) {\n    window.Ammo = new params.ammo();\n    public_functions.makeWorld(params);\n    return;\n  }\n\n  if (params.wasmBuffer) {\n    importScripts(params.ammo);\n\n    self.Ammo = new loadAmmoFromBinary(params.wasmBuffer)();\n    send({ cmd: 'ammoLoaded' });\n    public_functions.makeWorld(params);\n  }\n  else {\n    importScripts(params.ammo);\n    send({ cmd: 'ammoLoaded' });\n\n    self.Ammo = new Ammo();\n    public_functions.makeWorld(params);\n  }\n}\n\npublic_functions.makeWorld = (params = {}) => {\n  _transform = new Ammo.btTransform();\n  _transform_pos = new Ammo.btTransform();\n  _vec3_1 = new Ammo.btVector3(0, 0, 0);\n  _vec3_2 = new Ammo.btVector3(0, 0, 0);\n  _vec3_3 = new Ammo.btVector3(0, 0, 0);\n  _quat = new Ammo.btQuaternion(0, 0, 0, 0);\n\n  REPORT_CHUNKSIZE = params.reportsize || 50;\n\n  if (SUPPORT_TRANSFERABLE) {\n    // Transferable messages are supported, take advantage of them with TypedArrays\n    worldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object\n    collisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object\n    vehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object\n    constraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object\n  }\n  else {\n    // Transferable messages are not supported, send data as normal arrays\n    worldreport = [];\n    collisionreport = [];\n    vehiclereport = [];\n    constraintreport = [];\n  }\n\n  worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n  collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n  vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n  constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\n  const collisionConfiguration = params.softbody ?\n    new Ammo.btSoftBodyRigidBodyCollisionConfiguration() :\n    new Ammo.btDefaultCollisionConfiguration(),\n    dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n    solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n  let broadphase;\n\n  if (!params.broadphase) params.broadphase = { type: 'dynamic' };\n  // TODO!!!\n  /* if (params.broadphase.type === 'sweepprune') {\n    extend(params.broadphase, {\n      aabbmin: {\n        x: -50,\n        y: -50,\n        z: -50\n      },\n\n      aabbmax: {\n        x: 50,\n        y: 50,\n        z: 50\n      },\n    });\n  }*/\n\n  switch (params.broadphase.type) {\n  case 'sweepprune':\n    _vec3_1.setX(params.broadphase.aabbmin.x);\n    _vec3_1.setY(params.broadphase.aabbmin.y);\n    _vec3_1.setZ(params.broadphase.aabbmin.z);\n\n    _vec3_2.setX(params.broadphase.aabbmax.x);\n    _vec3_2.setY(params.broadphase.aabbmax.y);\n    _vec3_2.setZ(params.broadphase.aabbmax.z);\n\n    broadphase = new Ammo.btAxisSweep3(\n      _vec3_1,\n      _vec3_2\n    );\n\n    break;\n  case 'dynamic':\n  default:\n    broadphase = new Ammo.btDbvtBroadphase();\n    break;\n  }\n\n  world = params.softbody ?\n    new Ammo.btSoftRigidDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration, new Ammo.btDefaultSoftBodySolver()) :\n    new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);\n  fixedTimeStep = params.fixedTimeStep;\n\n  if (params.softbody) _softbody_enabled = true;\n\n  send({ cmd: 'worldReady' });\n};\n\npublic_functions.setFixedTimeStep = (description) => {\n  fixedTimeStep = description;\n};\n\npublic_functions.setGravity = (description) => {\n  _vec3_1.setX(description.x);\n  _vec3_1.setY(description.y);\n  _vec3_1.setZ(description.z);\n  world.setGravity(_vec3_1);\n};\n\npublic_functions.appendAnchor = (description) => {\n  _objects[description.obj]\n    .appendAnchor(\n      description.node,\n      _objects[description.obj2],\n      description.collisionBetweenLinkedBodies,\n      description.influence\n    );\n}\n\npublic_functions.linkNodes = (description) => {\n  var self_body = _objects[description.self];\n  var other_body = _objects[description.body];\n\n  var self_node = self_body.get_m_nodes().at(description.n1);\n  var other_node = other_body.get_m_nodes().at(description.n2);\n\n  var self_vec = self_node.get_m_x();\n  var other_vec = other_node.get_m_x();\n\n  var force_x = other_vec.x() - self_vec.x();\n  var force_y = other_vec.y() - self_vec.y();\n  var force_z = other_vec.z() - self_vec.z();\n\n\n  // var modifier = 30;\n\n  let cached_distance, linked = false;\n\n  const _loop = setInterval(() => {\n    force_x = other_vec.x() - self_vec.x();\n    force_y = other_vec.y() - self_vec.y();\n    force_z = other_vec.z() - self_vec.z();\n\n    let distance = Math.sqrt(force_x * force_x + force_y * force_y + force_z * force_z);\n\n    if (cached_distance && !linked && cached_distance < distance) { // cached_distance && !linked && cached_distance < distance\n\n      linked = true;\n\n      // let self_vel = self_node.get_m_v();\n      //\n      // _vec3_1.setX(-self_vel.x());\n      // _vec3_1.setY(-self_vel.y());\n      // _vec3_1.setZ(-self_vel.z());\n      //\n      // let other_vel = other_node.get_m_v();\n      //\n      // _vec3_2.setX(-other_vel.x());\n      // _vec3_2.setY(-other_vel.y());\n      // _vec3_2.setZ(-other_vel.z());\n\n      console.log('link!');\n\n      _vec3_1.setX(0);\n      _vec3_1.setY(0);\n      _vec3_1.setZ(0);\n\n      self_body.setVelocity(\n        _vec3_1\n      );\n\n      other_body.setVelocity(\n        _vec3_1\n      );\n\n\n\n      // self_body.addVelocity(_vec3_1);\n      // other_body.addVelocity(_vec3_2);\n\n      // self_relative_x = self_node.x();\n      // self_relative_y = self_node.y();\n      // self_relative_z = self_node.z();\n      //\n      // other_relative_x = other_node.x();\n      // other_relative_y = other_node.y();\n      // other_relative_z = other_node.z();\n\n      // self_relative = new Ammo.btVector3();\n      // self_relative.setX();\n\n      // console.log('link!');\n      // self_body.appendAnchor(description.n1, connector, true, 0.5);\n      // other_body.appendAnchor(description.n2, connector, true, 0.5);\n      // clearInterval(_loop);\n\n      // _vec3_1.setX(0);\n      // _vec3_1.setY(0);\n      // _vec3_1.setZ(0);\n\n      // self_body.setVelocity(_vec3_1);\n      // other_body.setVelocity(_vec3_1);\n\n      // other_body.addForce(\n      //   _vec3_2,\n      //   description.n2\n      // );\n\n      // description.modifier *= 1.6;\n    }\n\n    const modifer2 = linked ? 40 : 1;\n\n    force_x *= Math.max(distance, 1) * description.modifier * modifer2;\n    force_y *= Math.max(distance, 1) * description.modifier * modifer2;\n    force_z *= Math.max(distance, 1) * description.modifier * modifer2;\n\n    _vec3_1.setX(force_x);\n    _vec3_1.setY(force_y);\n    _vec3_1.setZ(force_z);\n\n    _vec3_2.setX(-force_x);\n    _vec3_2.setY(-force_y);\n    _vec3_2.setZ(-force_z);\n\n    self_body.addVelocity(\n      _vec3_1,\n      description.n1\n    );\n\n    other_body.addVelocity(\n      _vec3_2,\n      description.n2\n    );\n\n    // } else {\n    //   // self_relative_x = null;\n    // }\n\n\n\n    // if (self_relative_x) {\n    //   _vec3_1.setX(self_relative_x - self_node.x());\n    //   _vec3_1.setY(self_relative_y - self_node.y());\n    //   _vec3_1.setZ(self_relative_z - self_node.z());\n    //\n    //   _vec3_2.setX(other_relative_x - other_node.x());\n    //   _vec3_2.setY(other_relative_y - other_node.y());\n    //   _vec3_2.setZ(other_relative_z - other_node.z());\n    // } else {\n\n    // }\n\n\n\n\n    cached_distance = distance;\n  }, 10);\n}\n\npublic_functions.appendLink = (description) => {\n  // console.log(Ammo);\n  // console.log(new Ammo.Material());\n\n  // var _mat = new Ammo.Material();\n  //\n  // _mat.set_m_kAST(0);\n  // _mat.set_m_kLST(0);\n  // _mat.set_m_kVST(0);\n  //\n  // _objects[description.self].appendLink(\n  //   description.n1,\n  //   description.n2,\n  //   _mat,\n  //   false\n  // );\n\n  _vec3_1.setX(1000);\n  _vec3_1.setY(0);\n  _vec3_1.setZ(0);\n\n  _objects[description.self].addForce(\n    _vec3_1,\n    description.n1\n  );\n}\n\npublic_functions.appendLinearJoint = (description) => {\n  // console.log('Ammo', Ammo);\n  var specs = new Ammo.Specs();\n  var _pos = description.specs.position;\n\n  specs.set_position(new Ammo.btVector3(_pos[0], _pos[1], _pos[2]));\n  if (description.specs.erp) specs.set_erp(description.specs.erp);\n  if (description.specs.cfm) specs.set_cfm(description.specs.cfm);\n  if (description.specs.split) specs.set_split(description.specs.split);\n\n  // console.log(specs);\n  //\n  // // ljoint.set_m_rpos(\n  // //   new Ammo.btVector3(_pos1[0], _pos1[1], _pos1[2]),\n  // //   new Ammo.btVector3(_pos2[0], _pos2[1], _pos2[2])\n  // // );\n  //\n  // // console.log('ljoint', ljoint);\n  //\n\n  // console.log('body', _objects[description.body]);\n  _objects[description.self]\n    .appendLinearJoint(\n      specs,\n      _objects[description.body]\n    );\n}\n\npublic_functions.addObject = (description) => {\n  let body, motionState;\n\n  if (description.type.indexOf('soft') !== -1) {\n    body = createSoftBody(description);\n\n    const sbConfig = body.get_m_cfg();\n\n    if (description.viterations) sbConfig.set_viterations(description.viterations);\n    if (description.piterations) sbConfig.set_piterations(description.piterations);\n    if (description.diterations) sbConfig.set_diterations(description.diterations);\n    if (description.citerations) sbConfig.set_citerations(description.citerations);\n    sbConfig.set_collisions(0x11);\n    sbConfig.set_kDF(description.friction);\n    sbConfig.set_kDP(description.damping);\n    if (description.pressure) sbConfig.set_kPR(description.pressure);\n    if (description.drag) sbConfig.set_kDG(description.drag);\n    if (description.lift) sbConfig.set_kLF(description.lift);\n    if (description.anchorHardness) sbConfig.set_kAHR(description.anchorHardness);\n    if (description.rigidHardness) sbConfig.set_kCHR(description.rigidHardness);\n\n    if (description.klst) body.get_m_materials().at(0).set_m_kLST(description.klst);\n    if (description.kast) body.get_m_materials().at(0).set_m_kAST(description.kast);\n    if (description.kvst) body.get_m_materials().at(0).set_m_kVST(description.kvst);\n\n    Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setMargin(\n      typeof description.margin !== 'undefined' ? description.margin : 0.1\n    );\n\n    // Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setMargin(0);\n\n    // Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setLocalScaling(_vec3_1);\n    body.setActivationState(description.state || 4);\n    body.type = 0; // SoftBody.\n    if (description.type === 'softRopeMesh') body.rope = true;\n    if (description.type === 'softClothMesh') body.cloth = true;\n\n    _transform.setIdentity();\n\n    // @test\n    _quat.setX(description.rotation.x);\n    _quat.setY(description.rotation.y);\n    _quat.setZ(description.rotation.z);\n    _quat.setW(description.rotation.w);\n    body.rotate(_quat);\n\n    _vec3_1.setX(description.position.x);\n    _vec3_1.setY(description.position.y);\n    _vec3_1.setZ(description.position.z);\n    body.translate(_vec3_1);\n\n    _vec3_1.setX(description.scale.x);\n    _vec3_1.setY(description.scale.y);\n    _vec3_1.setZ(description.scale.z);\n    body.scale(_vec3_1);\n\n    body.setTotalMass(description.mass, false);\n    world.addSoftBody(body, 1, -1);\n    if (description.type === 'softTrimesh') _softbody_report_size += body.get_m_faces().size() * 3;\n    else if (description.type === 'softRopeMesh') _softbody_report_size += body.get_m_nodes().size();\n    else _softbody_report_size += body.get_m_nodes().size() * 3;\n\n    _num_softbody_objects++;\n  }\n  else {\n    let shape = createShape(description);\n\n    if (!shape) return;\n\n    // If there are children then this is a compound shape\n    if (description.children) {\n      const compound_shape = new Ammo.btCompoundShape();\n      compound_shape.addChildShape(_transform, shape);\n\n      for (let i = 0; i < description.children.length; i++) {\n        const _child = description.children[i];\n\n        const trans = new Ammo.btTransform();\n        trans.setIdentity();\n\n        _vec3_1.setX(_child.position_offset.x);\n        _vec3_1.setY(_child.position_offset.y);\n        _vec3_1.setZ(_child.position_offset.z);\n        trans.setOrigin(_vec3_1);\n\n        _quat.setX(_child.rotation.x);\n        _quat.setY(_child.rotation.y);\n        _quat.setZ(_child.rotation.z);\n        _quat.setW(_child.rotation.w);\n        trans.setRotation(_quat);\n\n        shape = createShape(description.children[i]);\n        compound_shape.addChildShape(trans, shape);\n        Ammo.destroy(trans);\n      }\n\n      shape = compound_shape;\n      _compound_shapes[description.id] = shape;\n    }\n\n    _vec3_1.setX(description.scale.x);\n    _vec3_1.setY(description.scale.y);\n    _vec3_1.setZ(description.scale.z);\n\n    shape.setLocalScaling(_vec3_1);\n    shape.setMargin(\n      typeof description.margin !== 'undefined' ? description.margin : 0\n    );\n\n    _vec3_1.setX(0);\n    _vec3_1.setY(0);\n    _vec3_1.setZ(0);\n    shape.calculateLocalInertia(description.mass, _vec3_1);\n\n    _transform.setIdentity();\n\n    _vec3_2.setX(description.position.x);\n    _vec3_2.setY(description.position.y);\n    _vec3_2.setZ(description.position.z);\n    _transform.setOrigin(_vec3_2);\n\n    _quat.setX(description.rotation.x);\n    _quat.setY(description.rotation.y);\n    _quat.setZ(description.rotation.z);\n    _quat.setW(description.rotation.w);\n    _transform.setRotation(_quat);\n\n    motionState = new Ammo.btDefaultMotionState(_transform); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(description.mass, motionState, shape, _vec3_1);\n\n    rbInfo.set_m_friction(description.friction);\n    rbInfo.set_m_restitution(description.restitution);\n    rbInfo.set_m_linearDamping(description.damping);\n    rbInfo.set_m_angularDamping(description.damping);\n\n    body = new Ammo.btRigidBody(rbInfo);\n    body.setActivationState(description.state || 4);\n    Ammo.destroy(rbInfo);\n\n    if (typeof description.collision_flags !== 'undefined') body.setCollisionFlags(description.collision_flags);\n\n    if (description.group && description.mask) world.addRigidBody(body, description.group, description.mask);\n    else world.addRigidBody(body);\n    body.type = 1; // RigidBody.\n    _num_rigidbody_objects++;\n  }\n\n  body.activate();\n\n  body.id = description.id;\n  _objects[body.id] = body;\n  _motion_states[body.id] = motionState;\n\n  _objects_ammo[body.a === undefined ? body.ptr : body.a] = body.id;\n  _num_objects++;\n\n  send({ cmd: 'objectReady', params: body.id });\n};\n\npublic_functions.addVehicle = (description) => {\n  const vehicle_tuning = new Ammo.btVehicleTuning();\n\n  vehicle_tuning.set_m_suspensionStiffness(description.suspension_stiffness);\n  vehicle_tuning.set_m_suspensionCompression(description.suspension_compression);\n  vehicle_tuning.set_m_suspensionDamping(description.suspension_damping);\n  vehicle_tuning.set_m_maxSuspensionTravelCm(description.max_suspension_travel);\n  vehicle_tuning.set_m_maxSuspensionForce(description.max_suspension_force);\n\n  const vehicle = new Ammo.btRaycastVehicle(\n    vehicle_tuning,\n    _objects[description.rigidBody],\n    new Ammo.btDefaultVehicleRaycaster(world)\n  );\n\n  vehicle.tuning = vehicle_tuning;\n  _objects[description.rigidBody].setActivationState(4);\n  vehicle.setCoordinateSystem(0, 1, 2);\n\n  world.addVehicle(vehicle);\n  _vehicles[description.id] = vehicle;\n};\npublic_functions.removeVehicle = (description) => {\n  _vehicles[description.id] = null;\n};\n\npublic_functions.addWheel = (description) => {\n  if (_vehicles[description.id] !== undefined) {\n    let tuning = _vehicles[description.id].tuning;\n    if (description.tuning !== undefined) {\n      tuning = new Ammo.btVehicleTuning();\n      tuning.set_m_suspensionStiffness(description.tuning.suspension_stiffness);\n      tuning.set_m_suspensionCompression(description.tuning.suspension_compression);\n      tuning.set_m_suspensionDamping(description.tuning.suspension_damping);\n      tuning.set_m_maxSuspensionTravelCm(description.tuning.max_suspension_travel);\n      tuning.set_m_maxSuspensionForce(description.tuning.max_suspension_force);\n    }\n\n    _vec3_1.setX(description.connection_point.x);\n    _vec3_1.setY(description.connection_point.y);\n    _vec3_1.setZ(description.connection_point.z);\n\n    _vec3_2.setX(description.wheel_direction.x);\n    _vec3_2.setY(description.wheel_direction.y);\n    _vec3_2.setZ(description.wheel_direction.z);\n\n    _vec3_3.setX(description.wheel_axle.x);\n    _vec3_3.setY(description.wheel_axle.y);\n    _vec3_3.setZ(description.wheel_axle.z);\n\n    _vehicles[description.id].addWheel(\n      _vec3_1,\n      _vec3_2,\n      _vec3_3,\n      description.suspension_rest_length,\n      description.wheel_radius,\n      tuning,\n      description.is_front_wheel\n    );\n  }\n\n  _num_wheels++;\n\n  if (SUPPORT_TRANSFERABLE) {\n    vehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n    vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n  }\n  else vehiclereport = [MESSAGE_TYPES.VEHICLEREPORT];\n};\n\npublic_functions.setSteering = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].setSteeringValue(details.steering, details.wheel);\n};\n\npublic_functions.setBrake = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].setBrake(details.brake, details.wheel);\n};\n\npublic_functions.applyEngineForce = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].applyEngineForce(details.force, details.wheel);\n};\n\npublic_functions.removeObject = (details) => {\n  if (_objects[details.id].type === 0) {\n    _num_softbody_objects--;\n    _softbody_report_size -= _objects[details.id].get_m_nodes().size();\n    world.removeSoftBody(_objects[details.id]);\n  }\n  else if (_objects[details.id].type === 1) {\n    _num_rigidbody_objects--;\n    world.removeRigidBody(_objects[details.id]);\n    Ammo.destroy(_motion_states[details.id]);\n  }\n\n  Ammo.destroy(_objects[details.id]);\n  if (_compound_shapes[details.id]) Ammo.destroy(_compound_shapes[details.id]);\n  if (_noncached_shapes[details.id]) Ammo.destroy(_noncached_shapes[details.id]);\n\n  _objects_ammo[_objects[details.id].a === undefined ? _objects[details.id].a : _objects[details.id].ptr] = null;\n  _objects[details.id] = null;\n  _motion_states[details.id] = null;\n\n  if (_compound_shapes[details.id]) _compound_shapes[details.id] = null;\n  if (_noncached_shapes[details.id]) _noncached_shapes[details.id] = null;\n  _num_objects--;\n};\n\npublic_functions.updateTransform = (details) => {\n  _object = _objects[details.id];\n\n  if (_object.type === 1) {\n    _object.getMotionState().getWorldTransform(_transform);\n\n    if (details.pos) {\n      _vec3_1.setX(details.pos.x);\n      _vec3_1.setY(details.pos.y);\n      _vec3_1.setZ(details.pos.z);\n      _transform.setOrigin(_vec3_1);\n    }\n\n    if (details.quat) {\n      _quat.setX(details.quat.x);\n      _quat.setY(details.quat.y);\n      _quat.setZ(details.quat.z);\n      _quat.setW(details.quat.w);\n      _transform.setRotation(_quat);\n    }\n\n    _object.setWorldTransform(_transform);\n    _object.activate();\n  }\n  else if (_object.type === 0) {\n    // _object.getWorldTransform(_transform);\n\n    if (details.pos) {\n      _vec3_1.setX(details.pos.x);\n      _vec3_1.setY(details.pos.y);\n      _vec3_1.setZ(details.pos.z);\n      _transform.setOrigin(_vec3_1);\n    }\n\n    if (details.quat) {\n      _quat.setX(details.quat.x);\n      _quat.setY(details.quat.y);\n      _quat.setZ(details.quat.z);\n      _quat.setW(details.quat.w);\n      _transform.setRotation(_quat);\n    }\n\n    _object.transform(_transform);\n  }\n};\n\npublic_functions.updateMass = (details) => {\n  // #TODO: changing a static object into dynamic is buggy\n  _object = _objects[details.id];\n\n  // Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816\n  world.removeRigidBody(_object);\n\n  _vec3_1.setX(0);\n  _vec3_1.setY(0);\n  _vec3_1.setZ(0);\n\n  _object.setMassProps(details.mass, _vec3_1);\n  world.addRigidBody(_object);\n  _object.activate();\n};\n\npublic_functions.applyCentralImpulse = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].applyCentralImpulse(_vec3_1);\n  _objects[details.id].activate();\n};\n\npublic_functions.applyImpulse = (details) => {\n  _vec3_1.setX(details.impulse_x);\n  _vec3_1.setY(details.impulse_y);\n  _vec3_1.setZ(details.impulse_z);\n\n  _vec3_2.setX(details.x);\n  _vec3_2.setY(details.y);\n  _vec3_2.setZ(details.z);\n\n  _objects[details.id].applyImpulse(\n    _vec3_1,\n    _vec3_2\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.applyTorque = (details) => {\n  _vec3_1.setX(details.torque_x);\n  _vec3_1.setY(details.torque_y);\n  _vec3_1.setZ(details.torque_z);\n\n  _objects[details.id].applyTorque(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.applyCentralForce = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].applyCentralForce(_vec3_1);\n  _objects[details.id].activate();\n};\n\npublic_functions.applyForce = (details) => {\n  _vec3_1.setX(details.force_x);\n  _vec3_1.setY(details.force_y);\n  _vec3_1.setZ(details.force_z);\n\n  _vec3_2.setX(details.x);\n  _vec3_2.setY(details.y);\n  _vec3_2.setZ(details.z);\n\n  _objects[details.id].applyForce(\n    _vec3_1,\n    _vec3_2\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.onSimulationResume = () => {\n  last_simulation_time = Date.now();\n};\n\npublic_functions.setAngularVelocity = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setAngularVelocity(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.setLinearVelocity = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setLinearVelocity(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.setAngularFactor = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setAngularFactor(\n    _vec3_1\n  );\n};\n\npublic_functions.setLinearFactor = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setLinearFactor(\n    _vec3_1\n  );\n};\n\npublic_functions.setDamping = (details) => {\n  _objects[details.id].setDamping(details.linear, details.angular);\n};\n\npublic_functions.setCcdMotionThreshold = (details) => {\n  _objects[details.id].setCcdMotionThreshold(details.threshold);\n};\n\npublic_functions.setCcdSweptSphereRadius = (details) => {\n  _objects[details.id].setCcdSweptSphereRadius(details.radius);\n};\n\npublic_functions.addConstraint = (details) => {\n  let constraint;\n\n  switch (details.type) {\n\n  case 'point':\n    {\n      if (details.objectb === undefined) {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        constraint = new Ammo.btPoint2PointConstraint(\n          _objects[details.objecta],\n          _vec3_1\n        );\n      }\n      else {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        constraint = new Ammo.btPoint2PointConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          _vec3_1,\n          _vec3_2\n        );\n      }\n      break;\n    }\n  case 'hinge':\n    {\n      if (details.objectb === undefined) {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.axis.x);\n        _vec3_2.setY(details.axis.y);\n        _vec3_2.setZ(details.axis.z);\n\n        constraint = new Ammo.btHingeConstraint(\n          _objects[details.objecta],\n          _vec3_1,\n          _vec3_2\n        );\n\n      }\n      else {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        _vec3_3.setX(details.axis.x);\n        _vec3_3.setY(details.axis.y);\n        _vec3_3.setZ(details.axis.z);\n\n        constraint = new Ammo.btHingeConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          _vec3_1,\n          _vec3_2,\n          _vec3_3,\n          _vec3_3\n        );\n      }\n      break;\n    }\n  case 'slider':\n    {\n      let transformb;\n      const transforma = new Ammo.btTransform();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      transforma.setOrigin(_vec3_1);\n\n      let rotation = transforma.getRotation();\n      rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n      transforma.setRotation(rotation);\n\n      if (details.objectb) {\n        transformb = new Ammo.btTransform();\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transformb.setOrigin(_vec3_2);\n\n        rotation = transformb.getRotation();\n        rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btSliderConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb,\n          true\n        );\n      }\n      else {\n        constraint = new Ammo.btSliderConstraint(\n          _objects[details.objecta],\n          transforma,\n          true\n        );\n      }\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      if (transformb !== undefined) Ammo.destroy(transformb);\n\n      break;\n    }\n  case 'conetwist':\n    {\n      const transforma = new Ammo.btTransform();\n      transforma.setIdentity();\n\n      const transformb = new Ammo.btTransform();\n      transformb.setIdentity();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      _vec3_2.setX(details.positionb.x);\n      _vec3_2.setY(details.positionb.y);\n      _vec3_2.setZ(details.positionb.z);\n\n      transforma.setOrigin(_vec3_1);\n      transformb.setOrigin(_vec3_2);\n\n      let rotation = transforma.getRotation();\n      rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n      transforma.setRotation(rotation);\n\n      rotation = transformb.getRotation();\n      rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n      transformb.setRotation(rotation);\n\n      constraint = new Ammo.btConeTwistConstraint(\n        _objects[details.objecta],\n        _objects[details.objectb],\n        transforma,\n        transformb\n      );\n\n      constraint.setLimit(Math.PI, 0, Math.PI);\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      Ammo.destroy(transformb);\n\n      break;\n    }\n  case 'dof':\n    {\n      let transformb;\n\n      const transforma = new Ammo.btTransform();\n      transforma.setIdentity();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      transforma.setOrigin(_vec3_1);\n\n      let rotation = transforma.getRotation();\n      rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n      transforma.setRotation(rotation);\n\n      if (details.objectb) {\n        transformb = new Ammo.btTransform();\n        transformb.setIdentity();\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transformb.setOrigin(_vec3_2);\n\n        rotation = transformb.getRotation();\n        rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btGeneric6DofConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb,\n          true\n        );\n      }\n      else {\n        constraint = new Ammo.btGeneric6DofConstraint(\n          _objects[details.objecta],\n          transforma,\n          true\n        );\n      }\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      if (transformb !== undefined) Ammo.destroy(transformb);\n\n      break;\n    }\n  default:\n    return;\n  }\n\n  world.addConstraint(constraint);\n\n  constraint.a = _objects[details.objecta];\n  constraint.b = _objects[details.objectb];\n\n  constraint.enableFeedback();\n  _constraints[details.id] = constraint;\n  _num_constraints++;\n\n  if (SUPPORT_TRANSFERABLE) {\n    constraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n    constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n  }\n  else constraintreport = [MESSAGE_TYPES.CONSTRAINTREPORT];\n};\n\npublic_functions.removeConstraint = (details) => {\n  const constraint = _constraints[details.id];\n\n  if (constraint !== undefined) {\n    world.removeConstraint(constraint);\n    _constraints[details.id] = null;\n    _num_constraints--;\n  }\n};\n\npublic_functions.constraint_setBreakingImpulseThreshold = (details) => {\n  const constraint = _constraints[details.id];\n  if (constraint !== undefined) constraint.setBreakingImpulseThreshold(details.threshold);\n};\n\npublic_functions.simulate = (params = {}) => {\n  if (world) {\n    if (params.timeStep && params.timeStep < fixedTimeStep)\n      params.timeStep = fixedTimeStep;\n\n    params.maxSubSteps = params.maxSubSteps || Math.ceil(params.timeStep / fixedTimeStep); // If maxSubSteps is not defined, keep the simulation fully up to date\n\n    world.stepSimulation(params.timeStep, params.maxSubSteps, fixedTimeStep);\n\n    if (_vehicles.length > 0) reportVehicles();\n    reportCollisions();\n    if (_constraints.length > 0) reportConstraints();\n    reportWorld();\n    if (_softbody_enabled) reportWorld_softbodies();\n  }\n};\n\n// Constraint functions\npublic_functions.hinge_setLimits = (params) => {\n  _constraints[params.constraint].setLimit(params.low, params.high, 0, params.bias_factor, params.relaxation_factor);\n};\n\npublic_functions.hinge_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableAngularMotor(true, params.velocity, params.acceleration);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.hinge_disableMotor = (params) => {\n  _constraints[params.constraint].enableMotor(false);\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_setLimits = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setLowerLinLimit(params.lin_lower || 0);\n  constraint.setUpperLinLimit(params.lin_upper || 0);\n\n  constraint.setLowerAngLimit(params.ang_lower || 0);\n  constraint.setUpperAngLimit(params.ang_upper || 0);\n};\n\npublic_functions.slider_setRestitution = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setSoftnessLimLin(params.linear || 0);\n  constraint.setSoftnessLimAng(params.angular || 0);\n};\n\npublic_functions.slider_enableLinearMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setTargetLinMotorVelocity(params.velocity);\n  constraint.setMaxLinMotorForce(params.acceleration);\n  constraint.setPoweredLinMotor(true);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_disableLinearMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setPoweredLinMotor(false);\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setTargetAngMotorVelocity(params.velocity);\n  constraint.setMaxAngMotorForce(params.acceleration);\n  constraint.setPoweredAngMotor(true);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_disableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setPoweredAngMotor(false);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.conetwist_setLimit = (params) => {\n  _constraints[params.constraint].setLimit(params.z, params.y, params.x); // ZYX order\n};\n\npublic_functions.conetwist_enableMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableMotor(true);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_setMaxMotorImpulse = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setMaxMotorImpulse(params.max_impulse);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_setMotorTarget = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _quat.setX(params.x);\n  _quat.setY(params.y);\n  _quat.setZ(params.z);\n  _quat.setW(params.w);\n\n  constraint.setMotorTarget(_quat);\n\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_disableMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableMotor(false);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.dof_setLinearLowerLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setLinearLowerLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setLinearUpperLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setLinearUpperLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setAngularLowerLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setAngularLowerLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setAngularUpperLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setAngularUpperLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  const motor = constraint.getRotationalLimitMotor(params.which);\n  motor.set_m_enableMotor(true);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_configureAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint],\n    motor = constraint.getRotationalLimitMotor(params.which);\n\n  motor.set_m_loLimit(params.low_angle);\n  motor.set_m_hiLimit(params.high_angle);\n  motor.set_m_targetVelocity(params.velocity);\n  motor.set_m_maxMotorForce(params.max_force);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_disableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint],\n    motor = constraint.getRotationalLimitMotor(params.which);\n\n  motor.set_m_enableMotor(false);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\nconst reportWorld = () => {\n  if (SUPPORT_TRANSFERABLE && worldreport.length < 2 + _num_rigidbody_objects * WORLDREPORT_ITEMSIZE) {\n    worldreport = new Float32Array(\n      2 // message id & # objects in report\n      +\n      (Math.ceil(_num_rigidbody_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * WORLDREPORT_ITEMSIZE // # of values needed * item size\n    );\n\n    worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n  }\n\n  worldreport[1] = _num_rigidbody_objects; // record how many objects we're reporting on\n\n  {\n    let i = 0,\n      index = _objects.length;\n\n    while (index--) {\n      const object = _objects[index];\n\n      if (object && object.type === 1) { // RigidBodies.\n        // #TODO: we can't use center of mass transform when center of mass can change,\n        //        but getMotionState().getWorldTransform() screws up on objects that have been moved\n        // object.getMotionState().getWorldTransform( transform );\n        // object.getMotionState().getWorldTransform(_transform);\n\n        const transform = object.getCenterOfMassTransform();\n        const origin = transform.getOrigin();\n        const rotation = transform.getRotation();\n\n        // add values to report\n        const offset = 2 + (i++) * WORLDREPORT_ITEMSIZE;\n\n        worldreport[offset] = object.id;\n\n        worldreport[offset + 1] = origin.x();\n        worldreport[offset + 2] = origin.y();\n        worldreport[offset + 3] = origin.z();\n\n        worldreport[offset + 4] = rotation.x();\n        worldreport[offset + 5] = rotation.y();\n        worldreport[offset + 6] = rotation.z();\n        worldreport[offset + 7] = rotation.w();\n\n        _vector = object.getLinearVelocity();\n        worldreport[offset + 8] = _vector.x();\n        worldreport[offset + 9] = _vector.y();\n        worldreport[offset + 10] = _vector.z();\n\n        _vector = object.getAngularVelocity();\n        worldreport[offset + 11] = _vector.x();\n        worldreport[offset + 12] = _vector.y();\n        worldreport[offset + 13] = _vector.z();\n      }\n    }\n  }\n\n  if (SUPPORT_TRANSFERABLE) send(worldreport.buffer, [worldreport.buffer]);\n  else send(worldreport);\n};\n\nconst reportWorld_softbodies = () => {\n  // TODO: Add SUPPORTTRANSFERABLE.\n\n  softreport = new Float32Array(\n    2 // message id & # objects in report\n    +\n    _num_softbody_objects * 2 +\n    _softbody_report_size * 6\n  );\n\n  softreport[0] = MESSAGE_TYPES.SOFTREPORT;\n  softreport[1] = _num_softbody_objects; // record how many objects we're reporting on\n\n  {\n    let offset = 2,\n      index = _objects.length;\n\n    while (index--) {\n      const object = _objects[index];\n\n      if (object && object.type === 0) { // SoftBodies.\n\n        softreport[offset] = object.id;\n\n        const offsetVert = offset + 2;\n\n        if (object.rope === true) {\n          const nodes = object.get_m_nodes();\n          const size = nodes.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const node = nodes.at(i);\n            const vert = node.get_m_x();\n            const off = offsetVert + i * 3;\n\n            softreport[off] = vert.x();\n            softreport[off + 1] = vert.y();\n            softreport[off + 2] = vert.z();\n          }\n\n          offset += size * 3 + 2;\n        }\n        else if (object.cloth) {\n          const nodes = object.get_m_nodes();\n          const size = nodes.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const node = nodes.at(i);\n            const vert = node.get_m_x();\n            const normal = node.get_m_n();\n            const off = offsetVert + i * 6;\n\n            softreport[off] = vert.x();\n            softreport[off + 1] = vert.y();\n            softreport[off + 2] = vert.z();\n\n            softreport[off + 3] = -normal.x();\n            softreport[off + 4] = -normal.y();\n            softreport[off + 5] = -normal.z();\n          }\n\n          offset += size * 6 + 2;\n        }\n        else {\n          const faces = object.get_m_faces();\n          const size = faces.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const face = faces.at(i);\n\n            const node1 = face.get_m_n(0);\n            const node2 = face.get_m_n(1);\n            const node3 = face.get_m_n(2);\n\n            const vert1 = node1.get_m_x();\n            const vert2 = node2.get_m_x();\n            const vert3 = node3.get_m_x();\n\n            const normal1 = node1.get_m_n();\n            const normal2 = node2.get_m_n();\n            const normal3 = node3.get_m_n();\n\n            const off = offsetVert + i * 18;\n\n            softreport[off] = vert1.x();\n            softreport[off + 1] = vert1.y();\n            softreport[off + 2] = vert1.z();\n\n            softreport[off + 3] = normal1.x();\n            softreport[off + 4] = normal1.y();\n            softreport[off + 5] = normal1.z();\n\n            softreport[off + 6] = vert2.x();\n            softreport[off + 7] = vert2.y();\n            softreport[off + 8] = vert2.z();\n\n            softreport[off + 9] = normal2.x();\n            softreport[off + 10] = normal2.y();\n            softreport[off + 11] = normal2.z();\n\n            softreport[off + 12] = vert3.x();\n            softreport[off + 13] = vert3.y();\n            softreport[off + 14] = vert3.z();\n\n            softreport[off + 15] = normal3.x();\n            softreport[off + 16] = normal3.y();\n            softreport[off + 17] = normal3.z();\n          }\n\n          offset += size * 18 + 2;\n        }\n      }\n    }\n  }\n\n  // if (SUPPORT_TRANSFERABLE) send(softreport.buffer, [softreport.buffer]);\n  // else send(softreport);\n  send(softreport);\n};\n\nconst reportCollisions = () => {\n  const dp = world.getDispatcher(),\n    num = dp.getNumManifolds();\n  // _collided = false;\n\n  if (SUPPORT_TRANSFERABLE) {\n    if (collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE) {\n      collisionreport = new Float32Array(\n        2 // message id & # objects in report\n        +\n        (Math.ceil(_num_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * COLLISIONREPORT_ITEMSIZE // # of values needed * item size\n      );\n      collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n    }\n  }\n\n  collisionreport[1] = 0; // how many collisions we're reporting on\n\n  for (let i = 0; i < num; i++) {\n    const manifold = dp.getManifoldByIndexInternal(i),\n      num_contacts = manifold.getNumContacts();\n\n    if (num_contacts === 0) continue;\n\n    for (let j = 0; j < num_contacts; j++) {\n      const pt = manifold.getContactPoint(j);\n\n      // if ( pt.getDistance() < 0 ) {\n      const offset = 2 + (collisionreport[1]++) * COLLISIONREPORT_ITEMSIZE;\n      collisionreport[offset] = _objects_ammo[manifold.getBody0().ptr];\n      collisionreport[offset + 1] = _objects_ammo[manifold.getBody1().ptr];\n\n      _vector = pt.get_m_normalWorldOnB();\n      collisionreport[offset + 2] = _vector.x();\n      collisionreport[offset + 3] = _vector.y();\n      collisionreport[offset + 4] = _vector.z();\n      break;\n      // }\n      // send(_objects_ammo);\n    }\n  }\n\n  if (SUPPORT_TRANSFERABLE) send(collisionreport.buffer, [collisionreport.buffer]);\n  else send(collisionreport);\n};\n\nconst reportVehicles = function () {\n  if (SUPPORT_TRANSFERABLE) {\n    if (vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE) {\n      vehiclereport = new Float32Array(\n        2 // message id & # objects in report\n        +\n        (Math.ceil(_num_wheels / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * VEHICLEREPORT_ITEMSIZE // # of values needed * item size\n      );\n      vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n    }\n  }\n\n  {\n    let i = 0,\n      j = 0,\n      index = _vehicles.length;\n\n    while (index--) {\n      if (_vehicles[index]) {\n        const vehicle = _vehicles[index];\n\n        for (j = 0; j < vehicle.getNumWheels(); j++) {\n          // vehicle.updateWheelTransform( j, true );\n          // transform = vehicle.getWheelTransformWS( j );\n          const transform = vehicle.getWheelInfo(j).get_m_worldTransform();\n\n          const origin = transform.getOrigin();\n          const rotation = transform.getRotation();\n\n          // add values to report\n          const offset = 1 + (i++) * VEHICLEREPORT_ITEMSIZE;\n\n          vehiclereport[offset] = index;\n          vehiclereport[offset + 1] = j;\n\n          vehiclereport[offset + 2] = origin.x();\n          vehiclereport[offset + 3] = origin.y();\n          vehiclereport[offset + 4] = origin.z();\n\n          vehiclereport[offset + 5] = rotation.x();\n          vehiclereport[offset + 6] = rotation.y();\n          vehiclereport[offset + 7] = rotation.z();\n          vehiclereport[offset + 8] = rotation.w();\n        }\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE && j !== 0) send(vehiclereport.buffer, [vehiclereport.buffer]);\n    else if (j !== 0) send(vehiclereport);\n  }\n};\n\nconst reportConstraints = function () {\n  if (SUPPORT_TRANSFERABLE) {\n    if (constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE) {\n      constraintreport = new Float32Array(\n        2 // message id & # objects in report\n        +\n        (Math.ceil(_num_constraints / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size\n      );\n      constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n    }\n  }\n\n  {\n    let offset = 0,\n      i = 0,\n      index = _constraints.lenght;\n\n    while (index--) {\n      if (_constraints[index]) {\n        const constraint = _constraints[index];\n        const offset_body = constraint.a;\n        const transform = constraint.ta;\n        const origin = transform.getOrigin();\n\n        // add values to report\n        offset = 1 + (i++) * CONSTRAINTREPORT_ITEMSIZE;\n\n        constraintreport[offset] = index;\n        constraintreport[offset + 1] = offset_body.id;\n        constraintreport[offset + 2] = origin.x;\n        constraintreport[offset + 3] = origin.y;\n        constraintreport[offset + 4] = origin.z;\n        constraintreport[offset + 5] = constraint.getBreakingImpulseThreshold();\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE && i !== 0) send(constraintreport.buffer, [constraintreport.buffer]);\n    else if (i !== 0) send(constraintreport);\n  }\n};\n\nself.onmessage = function (event) {\n  if (event.data instanceof Float32Array) {\n    // transferable object\n    switch (event.data[0]) {\n    case MESSAGE_TYPES.WORLDREPORT:\n      {\n        worldreport = new Float32Array(event.data);\n        break;\n      }\n    case MESSAGE_TYPES.COLLISIONREPORT:\n      {\n        collisionreport = new Float32Array(event.data);\n        break;\n      }\n    case MESSAGE_TYPES.VEHICLEREPORT:\n      {\n        vehiclereport = new Float32Array(event.data);\n        break;\n      }\n    case MESSAGE_TYPES.CONSTRAINTREPORT:\n      {\n        constraintreport = new Float32Array(event.data);\n        break;\n      }\n    default:\n    }\n\n    return;\n  }\n  else if (event.data.cmd && public_functions[event.data.cmd]) public_functions[event.data.cmd](event.data.params);\n};\n\nself.receive = self.onmessage;\n\n\n\n\n});","import WorldModuleBase from './core/WorldModuleBase';\n\nimport {\n  addObjectChildren,\n  MESSAGE_TYPES,\n  temp1Vector3,\n  temp1Matrix4,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE\n} from '../api';\n\nimport PhysicsWorker from 'worker!../worker.js';\n\nexport class WorldModule extends WorldModuleBase {\n  constructor(...args) {\n    super(...args);\n\n    this.worker = new PhysicsWorker();\n    this.worker.transferableMessage = this.worker.webkitPostMessage || this.worker.postMessage;\n\n    this.isLoaded = false;\n\n    const options = this.options;\n\n    this.loader = new Promise((resolve, reject) => {\n      // if (options.wasm) {\n      //   fetch(options.wasm)\n      //     .then(response => response.arrayBuffer())\n      //     .then(buffer => {\n      //       options.wasmBuffer = buffer;\n      //\n      //       this.execute('init', options);\n      //       resolve();\n      //     });\n      // } else {\n        this.execute('init', options);\n        resolve();\n      // }\n    });\n\n    this.loader.then(() => {this.isLoaded = true});\n\n    // Test SUPPORT_TRANSFERABLE\n\n    const ab = new ArrayBuffer(1);\n    this.worker.transferableMessage(ab, [ab]);\n    this.SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n\n    this.setup();\n  }\n\n  send(...args) {\n    this.worker.transferableMessage(...args);\n  }\n\n  receive(callback) {\n    this.worker.addEventListener('message', callback);\n  }\n}\n","import {Vector3, Quaternion} from 'three';\n\nconst properties = {\n  position: {\n    get() {\n      return this._native.position;\n    },\n\n    set(vector3) {\n      const pos = this._native.position;\n      const scope = this;\n\n      Object.defineProperties(pos, {\n        x: {\n          get() {\n            return this._x;\n          },\n\n          set(x) {\n            scope.__dirtyPosition = true;\n            this._x = x;\n          }\n        },\n        y: {\n          get() {\n            return this._y;\n          },\n\n          set(y) {\n            scope.__dirtyPosition = true;\n            this._y = y;\n          }\n        },\n        z: {\n          get() {\n            return this._z;\n          },\n\n          set(z) {\n            scope.__dirtyPosition = true;\n            this._z = z;\n          }\n        }\n      });\n\n      scope.__dirtyPosition = true;\n\n      pos.copy(vector3);\n    }\n  },\n\n  quaternion: {\n    get() {\n      this.__c_rot = true;\n      return this.native.quaternion;\n    },\n\n    set(quaternion) {\n      const quat = this._native.quaternion,\n        native = this._native;\n\n      quat.copy(quaternion);\n\n      quat.onChange(() => {\n        if (this.__c_rot) {\n          if (native.__dirtyRotation === true) {\n            this.__c_rot = false;\n            native.__dirtyRotation = false;\n          }\n          native.__dirtyRotation = true;\n        }\n      });\n    }\n  },\n\n  rotation: {\n    get() {\n      this.__c_rot = true;\n      return this._native.rotation;\n    },\n\n    set(euler) {\n      const rot = this._native.rotation,\n        native = this._native;\n\n      this.quaternion.copy(new Quaternion().setFromEuler(euler));\n\n      rot.onChange(() => {\n        if (this.__c_rot) {\n          this.quaternion.copy(new Quaternion().setFromEuler(rot));\n          native.__dirtyRotation = true;\n        }\n      });\n    }\n  }\n}\n\nfunction wrapPhysicsPrototype(scope) {\n  for (let key in properties) {\n    Object.defineProperty(scope, key, {\n      get: properties[key].get.bind(scope),\n      set: properties[key].set.bind(scope),\n      configurable: true,\n      enumerable: true\n    });\n  }\n}\n\nfunction onCopy(source) {\n  wrapPhysicsPrototype(this);\n\n  const physics = this.use('physics');\n  const sourcePhysics = source.use('physics');\n\n  this.manager.modules.physics = physics.clone(this.manager);\n\n  physics.data = {...sourcePhysics.data};\n  physics.data.isSoftBodyReset = false;\n  if (physics.data.isSoftbody) physics.data.isSoftBodyReset = false;\n\n  this.position = this.position.clone();\n  this.rotation = this.rotation.clone();\n  this.quaternion = this.quaternion.clone();\n\n  return source;\n}\n\nfunction onWrap() {\n  this.position = this.position.clone();\n  this.rotation = this.rotation.clone();\n  this.quaternion = this.quaternion.clone();\n}\n\nclass API {\n  applyCentralImpulse(force) {\n    this.execute('applyCentralImpulse', {id: this.data.id, x: force.x, y: force.y, z: force.z});\n  }\n\n  applyImpulse(force, offset) {\n    this.execute('applyImpulse', {\n      id: this.data.id,\n      impulse_x: force.x,\n      impulse_y: force.y,\n      impulse_z: force.z,\n      x: offset.x,\n      y: offset.y,\n      z: offset.z\n    });\n  }\n\n  applyTorque(force) {\n    this.execute('applyTorque', {\n      id: this.data.id,\n      torque_x: force.x,\n      torque_y: force.y,\n      torque_z: force.z\n    });\n  }\n\n  applyCentralForce(force) {\n    this.execute('applyCentralForce', {\n      id: this.data.id,\n      x: force.x,\n      y: force.y,\n      z: force.z\n    });\n  }\n\n  applyForce(force, offset) {\n    this.execute('applyForce', {\n      id: this.data.id,\n      force_x: force.x,\n      force_y: force.y,\n      force_z: force.z,\n      x: offset.x,\n      y: offset.y,\n      z: offset.z\n    });\n  }\n\n  getAngularVelocity() {\n    return this.data.angularVelocity;\n  }\n\n  setAngularVelocity(velocity) {\n    this.execute(\n      'setAngularVelocity',\n      {id: this.data.id, x: velocity.x, y: velocity.y, z: velocity.z}\n    );\n  }\n\n  getLinearVelocity() {\n    return this.data.linearVelocity;\n  }\n\n  setLinearVelocity(velocity) {\n    this.execute(\n      'setLinearVelocity',\n      {id: this.data.id, x: velocity.x, y: velocity.y, z: velocity.z}\n    );\n  }\n\n  setAngularFactor(factor) {\n    this.execute(\n      'setAngularFactor',\n      {id: this.data.id, x: factor.x, y: factor.y, z: factor.z}\n    );\n  }\n\n  setLinearFactor(factor) {\n    this.execute(\n      'setLinearFactor',\n      {id: this.data.id, x: factor.x, y: factor.y, z: factor.z}\n    );\n  }\n\n  setDamping(linear, angular) {\n    this.execute(\n      'setDamping',\n      {id: this.data.id, linear, angular}\n    );\n  }\n\n  setCcdMotionThreshold(threshold) {\n    this.execute(\n      'setCcdMotionThreshold',\n      {id: this.data.id, threshold}\n    );\n  }\n\n  setCcdSweptSphereRadius(radius) {\n    this.execute('setCcdSweptSphereRadius', {id: this.data.id, radius});\n  }\n}\n\nexport default class extends API {\n  static rigidbody = () => ({\n    touches: [],\n    linearVelocity: new Vector3(),\n    angularVelocity: new Vector3(),\n    mass: 10,\n    scale: new Vector3(1, 1, 1),\n    restitution: 0.3,\n    friction: 0.8,\n    damping: 0,\n    margin: 0\n  });\n\n  static softbody = () => ({\n    touches: [],\n    restitution: 0.3,\n    friction: 0.8,\n    damping: 0,\n    scale: new Vector3(1, 1, 1),\n    pressure: 100,\n    margin: 0,\n    klst: 0.9,\n    kvst: 0.9,\n    kast: 0.9,\n    piterations: 1,\n    viterations: 0,\n    diterations: 0,\n    citerations: 4,\n    anchorHardness: 0.7,\n    rigidHardness: 1,\n    isSoftbody: true,\n    isSoftBodyReset: false\n  });\n\n  static rope = () => ({\n    touches: [],\n    friction: 0.8,\n    scale: new Vector3(1, 1, 1),\n    damping: 0,\n    margin: 0,\n    klst: 0.9,\n    kvst: 0.9,\n    kast: 0.9,\n    piterations: 1,\n    viterations: 0,\n    diterations: 0,\n    citerations: 4,\n    anchorHardness: 0.7,\n    rigidHardness: 1,\n    isSoftbody: true\n  });\n\n  static cloth = () => ({\n    touches: [],\n    friction: 0.8,\n    damping: 0,\n    margin: 0,\n    scale: new Vector3(1, 1, 1),\n    klst: 0.9,\n    kvst: 0.9,\n    kast: 0.9,\n    piterations: 1,\n    viterations: 0,\n    diterations: 0,\n    citerations: 4,\n    anchorHardness: 0.7,\n    rigidHardness: 1\n  });\n\n  constructor(defaults, data) {\n    super();\n    this.data = Object.assign(defaults, data);\n  }\n\n  integrate(self) {\n    wrapPhysicsPrototype(this);\n  }\n\n  manager(manager) {\n    manager.define('physics');\n\n    this.execute = (...data) => {\n      return manager.has('module:world')\n      ? manager.get('module:world').execute(...data)\n      : () => {};\n    };\n  }\n\n  updateData(callback) {\n    this.bridge.geometry = function (geometry, module) {\n      if (!callback) return geometry;\n\n      const result = callback(geometry, module);\n      return result ? result : geometry;\n    }\n  }\n\n  clone(manager) {\n    const clone = new this.constructor();\n    clone.data = {...this.data};\n    clone.bridge.geometry = this.bridge.geometry;\n    this.manager.apply(clone, [manager]);\n\n    return clone;\n  }\n\n  bridge = {\n    onCopy,\n    onWrap\n  };\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class BoxModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'box',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = data.depth || geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class CompoundModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'compound',\n      ...PhysicsModule.rigidbody()\n    }, params);\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\n// TODO: Test CapsuleModule in action.\nexport class CapsuleModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'capsule',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = data.depth || geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class ConcaveModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'concave',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      data.data = this.geometryProcessor(geometry);\n    });\n  }\n\n  geometryProcessor(geometry) {\n    if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n    const data = geometry.isBufferGeometry ?\n      geometry.attributes.position.array :\n      new Float32Array(geometry.faces.length * 9);\n\n    if (!geometry.isBufferGeometry) {\n      const vertices = geometry.vertices;\n\n      for (let i = 0; i < geometry.faces.length; i++) {\n        const face = geometry.faces[i];\n\n        const vA = vertices[face.a];\n        const vB = vertices[face.b];\n        const vC = vertices[face.c];\n\n        const i9 = i * 9;\n\n        data[i9] = vA.x;\n        data[i9 + 1] = vA.y;\n        data[i9 + 2] = vA.z;\n\n        data[i9 + 3] = vB.x;\n        data[i9 + 4] = vB.y;\n        data[i9 + 5] = vB.z;\n\n        data[i9 + 6] = vC.x;\n        data[i9 + 7] = vC.y;\n        data[i9 + 8] = vC.z;\n      }\n    }\n\n    return data;\n  };\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class ConeModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'cone',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.radius = data.radius || (geometry.boundingBox.max.x - geometry.boundingBox.min.x) / 2;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    });\n  }\n}\n","import {BufferGeometry} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nexport class ConvexModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'convex',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n      if (!geometry.isBufferGeometry) geometry._bufferGeometry = new BufferGeometry().fromGeometry(geometry);\n\n      data.data = geometry.isBufferGeometry ?\n        geometry.attributes.position.array :\n        geometry._bufferGeometry.attributes.position.array;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class CylinderModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'cylinder',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = data.depth || geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\nimport {Vector3, Vector2, BufferGeometry} from 'three';\n\nexport class HeightfieldModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'heightfield',\n      size: new Vector2(1, 1),\n      autoAlign: false,\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      const {x: xdiv, y: ydiv} = data.size;\n      const verts = geometry.isBufferGeometry ? geometry.attributes.position.array : geometry.vertices;\n      let size = geometry.isBufferGeometry ? verts.length / 3 : verts.length;\n\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      const xsize = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      const ysize = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n      data.xpts = (typeof xdiv === 'undefined') ? Math.sqrt(size) : xdiv + 1;\n      data.ypts = (typeof ydiv === 'undefined') ? Math.sqrt(size) : ydiv + 1;\n\n      // note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\n      data.absMaxHeight = Math.max(geometry.boundingBox.max.y, Math.abs(geometry.boundingBox.min.y));\n\n      const points = new Float32Array(size),\n        xpts = data.xpts,\n        ypts = data.ypts;\n\n      while (size--) {\n        const vNum = size % xpts + ((ypts - Math.round((size / xpts) - ((size % xpts) / xpts)) - 1) * ypts);\n\n        if (geometry.isBufferGeometry) points[size] = verts[vNum * 3 + 1];\n        else points[size] = verts[vNum].y;\n      }\n\n      data.points = points;\n\n      data.scale.multiply(\n        new Vector3(xsize / (xpts - 1), 1, ysize / (ypts - 1))\n      );\n\n      if (data.autoAlign) geometry.translate(xsize / -2, 0, ysize / -2);\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class PlaneModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'plane',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.normal = data.normal || geometry.faces[0].normal.clone();\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class SphereModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'sphere',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingSphere) geometry.computeBoundingSphere();\n      data.radius = data.radius || geometry.boundingSphere.radius;\n    });\n  }\n}\n","import {BufferGeometry, BufferAttribute} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nexport class SoftbodyModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'softTrimesh',\n      ...PhysicsModule.softbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      const idxGeometry = geometry.isBufferGeometry\n        ? geometry\n        : (() => {\n          geometry.mergeVertices();\n\n          const bufferGeometry = new BufferGeometry();\n\n          bufferGeometry.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          bufferGeometry.setIndex(\n            new BufferAttribute(\n              new (geometry.faces.length * 3 > 65535 ? Uint32Array : Uint16Array)(geometry.faces.length * 3),\n              1\n            ).copyIndicesArray(geometry.faces)\n          );\n\n          return bufferGeometry;\n        })();\n\n      data.aVertices = idxGeometry.attributes.position.array;\n      data.aIndices = idxGeometry.index.array;\n\n      return new BufferGeometry().fromGeometry(geometry);\n    });\n  }\n\n  appendAnchor(object, node, influence = 1, collisionBetweenLinkedBodies = true) {\n    const o1 = this.data.id;\n    const o2 = object.use('physics').data.id;\n\n    this.execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n}\n","import {BufferGeometry, BufferAttribute} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nfunction arrayMax(array) {\n\tif (array.length === 0) return - Infinity;\n\n\tvar max = array[0];\n\n\tfor (let i = 1, l = array.length; i < l; ++ i ) {\n\t\tif (array[ i ] > max) max = array[i];\n\t}\n\n\treturn max;\n}\n\nexport class ClothModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'softClothMesh',\n      ...PhysicsModule.cloth()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      const geomParams = geometry.parameters;\n\n      const geom = geometry.isBufferGeometry\n        ? geometry\n          : (() => {\n          geometry.mergeVertices();\n\n          const bufferGeometry = new BufferGeometry();\n\n          bufferGeometry.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n\t\t\t\t\tconst faces = geometry.faces, facesLength = faces.length, uvs = geometry.faceVertexUvs[0];\n\n          const normalsArray = new Float32Array(facesLength * 3);\n          // const uvsArray = new Array(geometry.vertices.length * 2);\n          const uvsArray = new Float32Array(facesLength * 2);\n          const uvsReplacedArray = new Float32Array(facesLength * 6);\n\t\t\t\t\tconst faceArray = new Uint32Array(facesLength * 3);\n\n          for (let i = 0; i < facesLength; i++) {\n            const i3 = i * 3;\n            const i6 = i * 6;\n            const normal = faces[i].normal || new Vector3();\n\n\t\t\t\t\t\tfaceArray[i3] = faces[i].a;\n            faceArray[i3 + 1] = faces[i].b;\n            faceArray[i3 + 2] = faces[i].c;\n\n            normalsArray[i3] = normal.x;\n            normalsArray[i3 + 1] = normal.y;\n            normalsArray[i3 + 2] = normal.z;\n\n            uvsArray[faces[i].a * 2 + 0] = uvs[i][0].x; // a\n            uvsArray[faces[i].a * 2 + 1] = uvs[i][0].y;\n\n            uvsArray[faces[i].b * 2 + 0] = uvs[i][1].x; // b\n            uvsArray[faces[i].b * 2 + 1] = uvs[i][1].y;\n\n            uvsArray[faces[i].c * 2 + 0] = uvs[i][2].x; // c\n            uvsArray[faces[i].c * 2 + 1] = uvs[i][2].y;\n          }\n\n          bufferGeometry.addAttribute(\n            'normal',\n            new BufferAttribute(\n              normalsArray,\n              3\n            )\n          );\n\n          bufferGeometry.addAttribute(\n            'uv',\n            new BufferAttribute(\n              uvsArray,\n              2\n            )\n          );\n\n\t\t\t\t\tbufferGeometry.setIndex(\n            new BufferAttribute(\n              new (arrayMax(faces) * 3 > 65535 ? Uint32Array : Uint16Array)(facesLength * 3),\n              1\n            ).copyIndicesArray(faces)\n          );\n\n          return bufferGeometry;\n        })();\n\n      const verts = geom.attributes.position.array;\n\n      if (!geomParams.widthSegments) geomParams.widthSegments = 1;\n      if (!geomParams.heightSegments) geomParams.heightSegments = 1;\n\n      const idx00 = 0;\n      const idx01 = geomParams.widthSegments;\n      const idx10 = (geomParams.heightSegments + 1) * (geomParams.widthSegments + 1) - (geomParams.widthSegments + 1);\n      const idx11 = verts.length / 3 - 1;\n\n      data.corners = [\n        verts[idx01 * 3], verts[idx01 * 3 + 1], verts[idx01 * 3 + 2], //   ╗\n        verts[idx00 * 3], verts[idx00 * 3 + 1], verts[idx00 * 3 + 2], // ╔\n        verts[idx11 * 3], verts[idx11 * 3 + 1], verts[idx11 * 3 + 2], //       ╝\n        verts[idx10 * 3], verts[idx10 * 3 + 1], verts[idx10 * 3 + 2], //     ╚\n      ];\n\n      data.segments = [geomParams.widthSegments + 1, geomParams.heightSegments + 1];\n\n      return geom;\n    });\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this.data.id;\n    const o2 = object.use('physics').data.id;\n\n    this.execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n\n\tlinkNodes(object, n1, n2, modifier) {\n    const self = this.data.id;\n    const body = object.use('physics').data.id;\n\n    this.execute('linkNodes', {\n      self,\n\t\t\tbody,\n      n1, // self node\n      n2, // body node\n\t\t\tmodifier\n    });\n  }\n\n  appendLinearJoint(object, specs) {\n    const self = this.data.id;\n    const body = object.use('physics').data.id;\n\n    this.execute('appendLinearJoint', {\n      self,\n      body,\n      specs\n    });\n  }\n}\n","import {BufferGeometry, BufferAttribute, Vector3} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nexport class RopeModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'softRopeMesh',\n      ...PhysicsModule.rope()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.isBufferGeometry) {\n        geometry = (() => {\n          const buff = new BufferGeometry();\n\n          buff.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          return buff;\n        })();\n      }\n\n      const length = geometry.attributes.position.array.length / 3;\n      const vert = n => new Vector3().fromArray(geometry.attributes.position.array, n*3);\n\n      const v1 = vert(0);\n      const v2 = vert(length - 1);\n\n      data.data = [\n        v1.x, v1.y, v1.z,\n        v2.x, v2.y, v2.z,\n        length\n      ];\n\n      return geometry;\n    });\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this.data.id;\n    const o2 = object.use('physics').data.id;\n\n    this.execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n}\n","import {Loop} from 'whs';\n\nimport {\n  Object3D,\n  Quaternion,\n  Vector3,\n  Euler\n} from 'three';\n\nconst PI_2 = Math.PI / 2;\n\n// TODO: Fix DOM\nfunction FirstPersonControlsSolver(camera, mesh, params) {\n  const velocityFactor = 1;\n  let runVelocity = 0.25;\n\n  mesh.use('physics').setAngularFactor({x: 0, y: 0, z: 0});\n  camera.position.set(0, 0, 0);\n\n  /* Init */\n  const player = mesh,\n    pitchObject = new Object3D();\n\n  pitchObject.add(camera.native);\n\n  const yawObject = new Object3D();\n\n  yawObject.position.y = params.ypos; // eyes are 2 meters above the ground\n  yawObject.add(pitchObject);\n\n  const quat = new Quaternion();\n\n  let canJump = false,\n    // Moves.\n    moveForward = false,\n    moveBackward = false,\n    moveLeft = false,\n    moveRight = false;\n\n  player.on('collision', (otherObject, v, r, contactNormal) => {\n    console.log(contactNormal.y);\n    if (contactNormal.y < 0.5) // Use a \"good\" threshold value between 0 and 1 here!\n      canJump = true;\n  });\n\n  const onMouseMove = event => {\n    if (this.enabled === false) return;\n\n    const movementX = typeof event.movementX === 'number'\n      ? event.movementX : typeof event.mozMovementX === 'number'\n        ? event.mozMovementX : typeof event.getMovementX === 'function'\n          ? event.getMovementX() : 0;\n    const movementY = typeof event.movementY === 'number'\n      ? event.movementY : typeof event.mozMovementY === 'number'\n        ? event.mozMovementY : typeof event.getMovementY === 'function'\n          ? event.getMovementY() : 0;\n\n    yawObject.rotation.y -= movementX * 0.002;\n    pitchObject.rotation.x -= movementY * 0.002;\n\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  };\n\n  const physics = player.use('physics');\n\n  const onKeyDown = event => {\n    switch (event.keyCode) {\n      case 38: // up\n      case 87: // w\n        moveForward = true;\n        break;\n\n      case 37: // left\n      case 65: // a\n        moveLeft = true;\n        break;\n\n      case 40: // down\n      case 83: // s\n        moveBackward = true;\n        break;\n\n      case 39: // right\n      case 68: // d\n        moveRight = true;\n        break;\n\n      case 32: // space\n        console.log(canJump);\n        if (canJump === true) physics.applyCentralImpulse({x: 0, y: 300, z: 0});\n        canJump = false;\n        break;\n\n      case 16: // shift\n        runVelocity = 0.5;\n        break;\n\n      default:\n    }\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 38: // up\n      case 87: // w\n        moveForward = false;\n        break;\n\n      case 37: // left\n      case 65: // a\n        moveLeft = false;\n        break;\n\n      case 40: // down\n      case 83: // a\n        moveBackward = false;\n        break;\n\n      case 39: // right\n      case 68: // d\n        moveRight = false;\n        break;\n\n      case 16: // shift\n        runVelocity = 0.25;\n        break;\n\n      default:\n    }\n  };\n\n  document.body.addEventListener('mousemove', onMouseMove, false);\n  document.body.addEventListener('keydown', onKeyDown, false);\n  document.body.addEventListener('keyup', onKeyUp, false);\n\n  this.enabled = false;\n  this.getObject = () => yawObject;\n\n  this.getDirection = targetVec => {\n    targetVec.set(0, 0, -1);\n    quat.multiplyVector3(targetVec);\n  };\n\n  // Moves the camera to the Physi.js object position\n  // and adds velocity to the object if the run key is down.\n  const inputVelocity = new Vector3(),\n    euler = new Euler();\n\n  this.update = delta => {\n    if (this.enabled === false) return;\n\n    delta = delta || 0.5;\n    delta = Math.min(delta, 0.5, delta);\n\n    inputVelocity.set(0, 0, 0);\n\n    const speed = velocityFactor * delta * params.speed * runVelocity;\n\n    if (moveForward) inputVelocity.z = -speed;\n    if (moveBackward) inputVelocity.z = speed;\n    if (moveLeft) inputVelocity.x = -speed;\n    if (moveRight) inputVelocity.x = speed;\n\n    // Convert velocity to world coordinates\n    euler.x = pitchObject.rotation.x;\n    euler.y = yawObject.rotation.y;\n    euler.order = 'XYZ';\n\n    quat.setFromEuler(euler);\n\n    inputVelocity.applyQuaternion(quat);\n\n    physics.applyCentralImpulse({x: inputVelocity.x, y: 0, z: inputVelocity.z});\n    physics.setAngularVelocity({x: inputVelocity.z, y: 0, z: -inputVelocity.x});\n    physics.setAngularFactor({x: 0, y: 0, z: 0});\n  };\n\n  player.on('physics:added', () => {\n    player.manager.get('module:world').addEventListener('update', () => {\n      if (this.enabled === false) return;\n      yawObject.position.copy(player.position);\n    });\n  });\n}\n\nexport class FirstPersonModule {\n  static defaults = {\n    block: null,\n    speed: 1,\n    ypos: 1\n  };\n\n  constructor(object, params = {}) {\n    this.object = object;\n    this.params = params;\n\n    if (!this.params.block) {\n      this.params.block = document.getElementById('blocker');\n    }\n  }\n\n  manager(manager) {\n    this.controls = new FirstPersonControlsSolver(manager.get('camera'), this.object, this.params);\n\n    if ('pointerLockElement' in document\n      || 'mozPointerLockElement' in document\n      || 'webkitPointerLockElement' in document) {\n      const element = document.body;\n\n      const pointerlockchange = () => {\n        if (document.pointerLockElement === element\n          || document.mozPointerLockElement === element\n          || document.webkitPointerLockElement === element) {\n          this.controls.enabled = true;\n          this.params.block.style.display = 'none';\n        } else {\n          this.controls.enabled = false;\n          this.params.block.style.display = 'block';\n        }\n      };\n\n      document.addEventListener('pointerlockchange', pointerlockchange, false);\n      document.addEventListener('mozpointerlockchange', pointerlockchange, false);\n      document.addEventListener('webkitpointerlockchange', pointerlockchange, false);\n\n      const pointerlockerror = function () {\n        console.warn('Pointer lock error.');\n      };\n\n      document.addEventListener('pointerlockerror', pointerlockerror, false);\n      document.addEventListener('mozpointerlockerror', pointerlockerror, false);\n      document.addEventListener('webkitpointerlockerror', pointerlockerror, false);\n\n      document.querySelector('body').addEventListener('click', () => {\n        element.requestPointerLock = element.requestPointerLock\n          || element.mozRequestPointerLock\n          || element.webkitRequestPointerLock;\n\n        element.requestFullscreen = element.requestFullscreen\n          || element.mozRequestFullscreen\n          || element.mozRequestFullScreen\n          || element.webkitRequestFullscreen;\n\n        if (/Firefox/i.test(navigator.userAgent)) {\n          const fullscreenchange = () => {\n            if (document.fullscreenElement === element\n              || document.mozFullscreenElement === element\n              || document.mozFullScreenElement === element) {\n              document.removeEventListener('fullscreenchange', fullscreenchange);\n              document.removeEventListener('mozfullscreenchange', fullscreenchange);\n\n              element.requestPointerLock();\n            }\n          };\n\n          document.addEventListener('fullscreenchange', fullscreenchange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenchange, false);\n\n          element.requestFullscreen();\n        } else element.requestPointerLock();\n      });\n    } else console.warn('Your browser does not support the PointerLock');\n\n    manager.get('scene').add(this.controls.getObject());\n  }\n\n  integrate(self) {\n    const updateProcessor = c => {\n      self.controls.update(c.getDelta());\n    };\n\n    self.updateLoop = new Loop(updateProcessor).start(this);\n  }\n}\n"],"names":["MESSAGE_TYPES","REPORT_ITEMSIZE","COLLISIONREPORT_ITEMSIZE","VEHICLEREPORT_ITEMSIZE","CONSTRAINTREPORT_ITEMSIZE","temp1Vector3","Vector3","temp2Vector3","temp1Matrix4","Matrix4","temp1Quat","Quaternion","getEulerXYZFromQuaternion","x","y","z","w","Math","atan2","asin","getQuatertionFromEuler","c1","cos","s1","sin","c2","s2","c3","s3","c1c2","s1s2","convertWorldPositionToObject","position","object","identity","makeRotationFromQuaternion","quaternion","getInverse","copy","sub","applyMatrix4","addObjectChildren","parent","i","children","length","child","physics","component","use","data","updateMatrix","updateMatrixWorld","setFromMatrixPosition","matrixWorld","setFromRotationMatrix","position_offset","rotation","push","Eventable","_eventListeners","event_name","callback","hasOwnProperty","index","indexOf","splice","parameters","Array","prototype","call","arguments","apply","obj","addEventListener","removeEventListener","dispatchEvent","ConeTwistConstraint","obja","objb","objecta","objectb","undefined","console","error","type","appliedImpulse","worldModule","id","positiona","clone","positionb","axisa","axisb","execute","constraint","max_impulse","target","setFromEuler","Euler","HingeConstraint","axis","low","high","bias_factor","relaxation_factor","velocity","acceleration","PointConstraint","SliderConstraint","lin_lower","lin_upper","ang_lower","ang_upper","linear","angular","scene","DOFConstraint","limit","which","low_angle","high_angle","max_force","Vehicle","mesh","tuning","VehicleTuning","wheels","_physijs","getObjectId","suspension_stiffness","suspension_compression","suspension_damping","max_suspension_travel","friction_slip","max_suspension_force","wheel_geometry","wheel_material","connection_point","wheel_direction","wheel_axle","suspension_rest_length","wheel_radius","is_front_wheel","wheel","Mesh","castShadow","receiveShadow","multiplyScalar","add","world","amount","steering","brake","force","WorldModuleBase","options","bridge","self","defer","onAddCallback","bind","onRemoveCallback","Object","assign","defaults","objects","vehicles","constraints","isSimulating","receive","_temp","event","ArrayBuffer","byteLength","Float32Array","WORLDREPORT","updateScene","SOFTREPORT","updateSoftbodies","COLLISIONREPORT","updateCollisions","VEHICLEREPORT","updateVehicles","CONSTRAINTREPORT","updateConstraints","cmd","params","test","debug","dir","info","offset","__dirtyPosition","set","__dirtyRotation","linearVelocity","angularVelocity","SUPPORT_TRANSFERABLE","send","buffer","size","attributes","geometry","volumePositions","array","offsetVert","isSoftBodyReset","volumeNormals","normal","offs","x1","y1","z1","nx1","ny1","nz1","x2","y2","z2","nx2","ny2","nz2","x3","y3","z3","nx3","ny3","nz3","i9","needsUpdate","nx","ny","nz","vehicle","extractRotation","matrix","addVectors","collisions","normal_offsets","object2","id1","j","touches","id2","component2","data2","vel","getLinearVelocity","vel2","subVectors","temp1","temp2","normal_offset","emit","show_marker","getDefinition","marker","SphereGeometry","MeshNormalMaterial","BoxGeometry","native","manager","width","scale","height","depth","remove","pop","func","args","Promise","resolve","isLoaded","loader","then","define","worker","setFixedTimeStep","fixedTimeStep","setGravity","gravity","addConstraint","simulate","timeStep","maxSubSteps","_stats","begin","object_id","update","pos","isSoftbody","quat","end","simulateLoop","Loop","clock","getDelta","start","log","TARGET","Symbol","SCRIPT_TYPE","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","Worker","shimWorker","filename","fn","ShimWorker","forceFallback","o","source","toString","replace","slice","objURL","createSourceObject","revokeObjectURL","selfShim","m","onmessage","postMessage","isThisThread","testWorker","testArray","Uint8Array","navigator","userAgent","Error","e","terminate","str","createObjectURL","Blob","blob","append","getBlob","document","Events","events","empty","on","ctx","off","list","insideWorker","webkitPostMessage","ab","_object","_vector","_transform","_transform_pos","_softbody_enabled","last_simulation_duration","_num_objects","_num_rigidbody_objects","_num_softbody_objects","_num_wheels","_num_constraints","_softbody_report_size","_vec3_1","_vec3_2","_vec3_3","_quat","public_functions","_objects","_vehicles","_constraints","_objects_ammo","_object_shapes","REPORT_CHUNKSIZE","softreport","collisionreport","vehiclereport","constraintreport","WORLDREPORT_ITEMSIZE","getShapeFromCache","cache_key","setShapeCache","shape","createShape","description","setIdentity","Ammo","btCompoundShape","setX","setY","setZ","btStaticPlaneShape","btBoxShape","radius","btSphereShape","btCylinderShape","btCapsuleShape","btConeShape","triangle_mesh","btTriangleMesh","addTriangle","btBvhTriangleMeshShape","btConvexHullShape","addPoint","xpts","ypts","points","ptr","_malloc","p","p2","HEAPF32","btHeightfieldTerrainShape","absMaxHeight","createSoftBody","body","softBodyHelpers","btSoftBodyHelpers","aVertices","CreateFromTriMesh","getWorldInfo","aIndices","cr","corners","CreatePatch","btVector3","segments","CreateRope","init","noWorker","ammo","makeWorld","wasmBuffer","loadAmmoFromBinary","btTransform","btQuaternion","reportsize","collisionConfiguration","softbody","btSoftBodyRigidBodyCollisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","solver","btSequentialImpulseConstraintSolver","broadphase","aabbmin","aabbmax","btAxisSweep3","btDbvtBroadphase","btSoftRigidDynamicsWorld","btDefaultSoftBodySolver","btDiscreteDynamicsWorld","appendAnchor","node","obj2","collisionBetweenLinkedBodies","influence","linkNodes","self_body","other_body","self_node","get_m_nodes","at","n1","other_node","n2","self_vec","get_m_x","other_vec","force_x","force_y","force_z","cached_distance","linked","_loop","setInterval","distance","sqrt","setVelocity","modifer2","max","modifier","addVelocity","appendLink","addForce","appendLinearJoint","specs","Specs","_pos","set_position","erp","set_erp","cfm","set_cfm","split","set_split","addObject","motionState","sbConfig","get_m_cfg","viterations","set_viterations","piterations","set_piterations","diterations","set_diterations","citerations","set_citerations","set_collisions","set_kDF","friction","set_kDP","damping","pressure","set_kPR","drag","set_kDG","lift","set_kLF","anchorHardness","set_kAHR","rigidHardness","set_kCHR","klst","get_m_materials","set_m_kLST","kast","set_m_kAST","kvst","set_m_kVST","castObject","btCollisionObject","getCollisionShape","setMargin","margin","setActivationState","state","rope","cloth","setW","rotate","translate","setTotalMass","mass","addSoftBody","get_m_faces","compound_shape","addChildShape","_child","trans","setOrigin","setRotation","destroy","setLocalScaling","calculateLocalInertia","btDefaultMotionState","rbInfo","btRigidBodyConstructionInfo","set_m_friction","set_m_restitution","restitution","set_m_linearDamping","set_m_angularDamping","btRigidBody","collision_flags","setCollisionFlags","group","mask","addRigidBody","activate","a","addVehicle","vehicle_tuning","btVehicleTuning","set_m_suspensionStiffness","set_m_suspensionCompression","set_m_suspensionDamping","set_m_maxSuspensionTravelCm","set_m_maxSuspensionForce","btRaycastVehicle","rigidBody","btDefaultVehicleRaycaster","setCoordinateSystem","removeVehicle","addWheel","setSteering","details","setSteeringValue","setBrake","applyEngineForce","removeObject","removeSoftBody","removeRigidBody","_motion_states","_compound_shapes","_noncached_shapes","updateTransform","getMotionState","getWorldTransform","setWorldTransform","transform","updateMass","setMassProps","applyCentralImpulse","applyImpulse","impulse_x","impulse_y","impulse_z","applyTorque","torque_x","torque_y","torque_z","applyCentralForce","applyForce","onSimulationResume","last_simulation_time","setAngularVelocity","setLinearVelocity","setAngularFactor","setLinearFactor","setDamping","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","btPoint2PointConstraint","btHingeConstraint","transformb","transforma","getRotation","setEuler","btSliderConstraint","ta","tb","setEulerZYX","btConeTwistConstraint","setLimit","PI","btGeneric6DofConstraint","b","enableFeedback","removeConstraint","constraint_setBreakingImpulseThreshold","setBreakingImpulseThreshold","ceil","stepSimulation","reportVehicles","reportConstraints","reportWorld_softbodies","hinge_setLimits","hinge_enableAngularMotor","enableAngularMotor","hinge_disableMotor","enableMotor","slider_setLimits","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","slider_setRestitution","setSoftnessLimLin","setSoftnessLimAng","slider_enableLinearMotor","setTargetLinMotorVelocity","setMaxLinMotorForce","setPoweredLinMotor","slider_disableLinearMotor","slider_enableAngularMotor","setTargetAngMotorVelocity","setMaxAngMotorForce","setPoweredAngMotor","slider_disableAngularMotor","conetwist_setLimit","conetwist_enableMotor","conetwist_setMaxMotorImpulse","setMaxMotorImpulse","conetwist_setMotorTarget","setMotorTarget","conetwist_disableMotor","dof_setLinearLowerLimit","setLinearLowerLimit","dof_setLinearUpperLimit","setLinearUpperLimit","dof_setAngularLowerLimit","setAngularLowerLimit","dof_setAngularUpperLimit","setAngularUpperLimit","dof_enableAngularMotor","motor","getRotationalLimitMotor","set_m_enableMotor","dof_configureAngularMotor","set_m_loLimit","set_m_hiLimit","set_m_targetVelocity","set_m_maxMotorForce","dof_disableAngularMotor","reportWorld","worldreport","getCenterOfMassTransform","origin","getOrigin","getAngularVelocity","nodes","vert","get_m_n","faces","face","node1","node2","node3","vert1","vert2","vert3","normal1","normal2","normal3","reportCollisions","dp","getDispatcher","num","getNumManifolds","manifold","getManifoldByIndexInternal","num_contacts","getNumContacts","pt","getContactPoint","getBody0","getBody1","get_m_normalWorldOnB","getNumWheels","getWheelInfo","get_m_worldTransform","lenght","offset_body","getBreakingImpulseThreshold","WorldModule","PhysicsWorker","transferableMessage","reject","setup","properties","_native","vector3","scope","defineProperties","_x","_y","_z","__c_rot","onChange","euler","rot","wrapPhysicsPrototype","key","defineProperty","get","onCopy","sourcePhysics","modules","onWrap","API","factor","has","module","result","constructor","rigidbody","BoxModule","PhysicsModule","updateData","boundingBox","computeBoundingBox","min","CompoundModule","CapsuleModule","ConcaveModule","geometryProcessor","isBufferGeometry","vertices","vA","vB","vC","c","ConeModule","ConvexModule","_bufferGeometry","BufferGeometry","fromGeometry","CylinderModule","HeightfieldModule","Vector2","xdiv","ydiv","verts","xsize","ysize","abs","vNum","round","multiply","autoAlign","PlaneModule","SphereModule","boundingSphere","computeBoundingSphere","SoftbodyModule","idxGeometry","mergeVertices","bufferGeometry","addAttribute","BufferAttribute","copyVector3sArray","setIndex","Uint32Array","Uint16Array","copyIndicesArray","o1","o2","arrayMax","Infinity","l","ClothModule","geomParams","geom","facesLength","uvs","faceVertexUvs","normalsArray","uvsArray","faceArray","i3","widthSegments","heightSegments","idx00","idx01","idx10","idx11","RopeModule","buff","fromArray","n","v1","v2","PI_2","FirstPersonControlsSolver","camera","velocityFactor","runVelocity","player","pitchObject","Object3D","yawObject","ypos","canJump","moveBackward","moveLeft","moveRight","otherObject","v","r","contactNormal","onMouseMove","enabled","movementX","mozMovementX","getMovementX","movementY","mozMovementY","getMovementY","onKeyDown","keyCode","onKeyUp","getObject","getDirection","multiplyVector3","targetVec","inputVelocity","delta","speed","moveForward","order","applyQuaternion","FirstPersonModule","block","getElementById","controls","element","pointerlockchange","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","style","display","pointerlockerror","warn","querySelector","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","requestFullscreen","mozRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","fullscreenchange","fullscreenElement","mozFullscreenElement","mozFullScreenElement","updateProcessor","updateLoop"],"mappings":"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"}