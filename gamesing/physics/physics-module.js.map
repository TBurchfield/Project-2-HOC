{"version":3,"file":"physics-module.js.map","sources":["../src/api.js","../src/eventable.js","../src/constraints/ConeTwistConstraint.js","../src/constraints/HingeConstraint.js","../src/constraints/PointConstraint.js","../src/constraints/SliderConstraint.js","../src/constraints/DOFConstraint.js","../src/vehicle/vehicle.js","../src/modules/core/WorldModuleBase.js","../bundle-worker/workerhelper.js","../src/worker.js","../src/modules/WorldModule.js","../src/modules/core/PhysicsModule.js","../src/modules/BoxModule.js","../src/modules/CompoundModule.js","../src/modules/CapsuleModule.js","../src/modules/ConcaveModule.js","../src/modules/ConeModule.js","../src/modules/ConvexModule.js","../src/modules/CylinderModule.js","../src/modules/HeightfieldModule.js","../src/modules/PlaneModule.js","../src/modules/SphereModule.js","../src/modules/SoftbodyModule.js","../src/modules/ClothModule.js","../src/modules/RopeModule.js","../src/modules/controls/FirstPersonModule.js"],"sourcesContent":["import {\n  Vector3,\n  Matrix4,\n  Quaternion\n} from 'three';\n\nconst MESSAGE_TYPES = {\n  WORLDREPORT: 0,\n  COLLISIONREPORT: 1,\n  VEHICLEREPORT: 2,\n  CONSTRAINTREPORT: 3,\n  SOFTREPORT: 4\n};\n\nconst REPORT_ITEMSIZE = 14,\n  COLLISIONREPORT_ITEMSIZE = 5,\n  VEHICLEREPORT_ITEMSIZE = 9,\n  CONSTRAINTREPORT_ITEMSIZE = 6;\n\nconst temp1Vector3 = new Vector3(),\n  temp2Vector3 = new Vector3(),\n  temp1Matrix4 = new Matrix4(),\n  temp1Quat = new Quaternion();\n\nconst getEulerXYZFromQuaternion = (x, y, z, w) => {\n  return new Vector3(\n    Math.atan2(2 * (x * w - y * z), (w * w - x * x - y * y + z * z)),\n    Math.asin(2 * (x * z + y * w)),\n    Math.atan2(2 * (z * w - x * y), (w * w + x * x - y * y - z * z))\n  );\n};\n\nconst getQuatertionFromEuler = (x, y, z) => {\n  const c1 = Math.cos(y);\n  const s1 = Math.sin(y);\n  const c2 = Math.cos(-z);\n  const s2 = Math.sin(-z);\n  const c3 = Math.cos(x);\n  const s3 = Math.sin(x);\n  const c1c2 = c1 * c2;\n  const s1s2 = s1 * s2;\n\n  return {\n    w: c1c2 * c3 - s1s2 * s3,\n    x: c1c2 * s3 + s1s2 * c3,\n    y: s1 * c2 * c3 + c1 * s2 * s3,\n    z: c1 * s2 * c3 - s1 * c2 * s3\n  };\n};\n\nconst convertWorldPositionToObject = (position, object) => {\n  temp1Matrix4.identity(); // reset temp matrix\n\n  // Set the temp matrix's rotation to the object's rotation\n  temp1Matrix4.identity().makeRotationFromQuaternion(object.quaternion);\n\n  // Invert rotation matrix in order to \"unrotate\" a point back to object space\n  temp1Matrix4.getInverse(temp1Matrix4);\n\n  // Yay! Temp vars!\n  temp1Vector3.copy(position);\n  temp2Vector3.copy(object.position);\n\n  // Apply the rotation\n  return temp1Vector3.sub(temp2Vector3).applyMatrix4(temp1Matrix4);\n};\n\nconst addObjectChildren = function (parent, object) {\n  for (let i = 0; i < object.children.length; i++) {\n    const child = object.children[i];\n    const physics = child.component ? child.component.use('physics') : false;\n\n    if (physics) {\n      const data = physics.data;\n\n      child.updateMatrix();\n      child.updateMatrixWorld();\n\n      temp1Vector3.setFromMatrixPosition(child.matrixWorld);\n      temp1Quat.setFromRotationMatrix(child.matrixWorld);\n\n      data.position_offset = {\n        x: temp1Vector3.x,\n        y: temp1Vector3.y,\n        z: temp1Vector3.z\n      };\n\n      data.rotation = {\n        x: temp1Quat.x,\n        y: temp1Quat.y,\n        z: temp1Quat.z,\n        w: temp1Quat.w\n      };\n\n      parent.component.use('physics').data.children.push(data);\n    }\n\n    addObjectChildren(parent, child);\n  }\n};\n\nexport {\n  getEulerXYZFromQuaternion,\n  getQuatertionFromEuler,\n  convertWorldPositionToObject,\n  addObjectChildren,\n\n  MESSAGE_TYPES,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE,\n\n  temp1Vector3,\n  temp2Vector3,\n  temp1Matrix4,\n  temp1Quat\n};\n","export class Eventable {\n  constructor() {\n    this._eventListeners = {};\n  }\n\n  addEventListener(event_name, callback) {\n    if (!this._eventListeners.hasOwnProperty(event_name))\n      this._eventListeners[event_name] = [];\n\n    this._eventListeners[event_name].push(callback);\n  }\n\n  removeEventListener(event_name, callback) {\n    let index;\n\n    if (!this._eventListeners.hasOwnProperty(event_name)) return false;\n\n    if ((index = this._eventListeners[event_name].indexOf(callback)) >= 0) {\n      this._eventListeners[event_name].splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  dispatchEvent(event_name) {\n    let i;\n    const parameters = Array.prototype.splice.call(arguments, 1);\n\n    if (this._eventListeners.hasOwnProperty(event_name)) {\n      for (i = 0; i < this._eventListeners[event_name].length; i++)\n        this._eventListeners[event_name][i].apply(this, parameters);\n    }\n  }\n\n  static make(obj) {\n    obj.prototype.addEventListener = Eventable.prototype.addEventListener;\n    obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\n    obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\n  }\n}\n","import { convertWorldPositionToObject } from '../api';\nimport { Euler, Matrix4, Quaternion, Vector3 } from 'three';\n\nexport class ConeTwistConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    const objectb = obja;\n\n    if (position === undefined) console.error('Both objects must be defined in a ConeTwistConstraint.');\n\n    this.type = 'conetwist';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.objectb = objectb.use('physics').data.id;\n    this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    this.axisa = {x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z};\n    this.axisb = {x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z};\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  }\n\n  setLimit(x, y, z) {\n    if(this.worldModule) this.worldModule.execute('conetwist_setLimit', {constraint: this.id, x, y, z});\n  }\n\n  enableMotor() {\n    if(this.worldModule) this.worldModule.execute('conetwist_enableMotor', {constraint: this.id});\n  }\n\n  setMaxMotorImpulse(max_impulse) {\n    if(this.worldModule) this.worldModule.execute('conetwist_setMaxMotorImpulse', {constraint: this.id, max_impulse});\n  }\n\n  setMotorTarget(target) {\n    if (target instanceof Vector3)\n      target = new Quaternion().setFromEuler(new Euler(target.x, target.y, target.z));\n    else if (target instanceof Euler)\n      target = new Quaternion().setFromEuler(target);\n    else if (target instanceof Matrix4)\n      target = new Quaternion().setFromRotationMatrix(target);\n\n    if(this.worldModule) this.worldModule.execute('conetwist_setMotorTarget', {\n      constraint: this.id,\n      x: target.x,\n      y: target.y,\n      z: target.z,\n      w: target.w\n    });\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class HingeConstraint {\n  constructor(obja, objb, position, axis) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'hinge';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.position = position.clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  }\n\n  setLimits(low, high, bias_factor, relaxation_factor) {\n    if (this.worldModule) this.worldModule.execute('hinge_setLimits', {\n      constraint: this.id,\n      low,\n      high,\n      bias_factor,\n      relaxation_factor\n    });\n  }\n\n  enableAngularMotor(velocity, acceleration) {\n    if (this.worldModule) this.worldModule.execute('hinge_enableAngularMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableMotor() {\n    if (this.worldModule) this.worldModule.execute('hinge_disableMotor', {constraint: this.id});\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class PointConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'point';\n    this.appliedImpulse = 0;\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n\n    if (objectb) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb\n    };\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class SliderConstraint {\n  constructor(obja, objb, position, axis) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'slider';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  }\n\n  setLimits(lin_lower, lin_upper, ang_lower, ang_upper) {\n    if (this.worldModule) this.worldModule.execute('slider_setLimits', {\n      constraint: this.id,\n      lin_lower,\n      lin_upper,\n      ang_lower,\n      ang_upper\n    });\n  }\n\n  setRestitution(linear, angular) {\n    if (this.worldModule) this.worldModule.execute(\n      'slider_setRestitution',\n      {\n        constraint: this.id,\n        linear,\n        angular\n      }\n    );\n  }\n\n  enableLinearMotor(velocity, acceleration) {\n    if (this.worldModule) this.worldModule.execute('slider_enableLinearMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableLinearMotor() {\n    if (this.worldModule) this.worldModule.execute('slider_disableLinearMotor', {constraint: this.id});\n  }\n\n  enableAngularMotor(velocity, acceleration) {\n    this.scene.execute('slider_enableAngularMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableAngularMotor() {\n    if (this.worldModule) this.worldModule.execute('slider_disableAngularMotor', {constraint: this.id});\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class DOFConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if ( position === undefined ) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'dof';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta.use('physics').data.id;\n    this.positiona = convertWorldPositionToObject( position, objecta ).clone();\n    this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\n\n    if ( objectb ) {\n      this.objectb = objectb.use('physics').data.id;\n      this.positionb = convertWorldPositionToObject( position, objectb ).clone();\n      this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  }\n\n  setLinearLowerLimit(limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setLinearUpperLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setAngularLowerLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setAngularUpperLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  enableAngularMotor (which) {\n    if (this.worldModule) this.worldModule.execute( 'dof_enableAngularMotor', { constraint: this.id, which: which } );\n  }\n\n  configureAngularMotor (which, low_angle, high_angle, velocity, max_force ) {\n    if (this.worldModule) this.worldModule.execute( 'dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force } );\n  }\n\n  disableAngularMotor (which) {\n    if (this.worldModule) this.worldModule.execute( 'dof_disableAngularMotor', { constraint: this.id, which: which } );\n  }\n}\n","import {Mesh} from 'three';\nimport {VehicleTunning} from './tunning';\n\nexport class Vehicle {\n  constructor(mesh, tuning = new VehicleTuning()) {\n    this.mesh = mesh;\n    this.wheels = [];\n\n    this._physijs = {\n      id: getObjectId(),\n      rigidBody: mesh._physijs.id,\n      suspension_stiffness: tuning.suspension_stiffness,\n      suspension_compression: tuning.suspension_compression,\n      suspension_damping: tuning.suspension_damping,\n      max_suspension_travel: tuning.max_suspension_travel,\n      friction_slip: tuning.friction_slip,\n      max_suspension_force: tuning.max_suspension_force\n    };\n  }\n\n  addWheel(wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning) {\n    const wheel = new Mesh(wheel_geometry, wheel_material);\n\n    wheel.castShadow = wheel.receiveShadow = true;\n    wheel.position.copy(wheel_direction).multiplyScalar(suspension_rest_length / 100).add(connection_point);\n\n    this.world.add(wheel);\n    this.wheels.push(wheel);\n\n    this.world.execute('addWheel', {\n      id: this._physijs.id,\n      connection_point: {x: connection_point.x, y: connection_point.y, z: connection_point.z},\n      wheel_direction: {x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z},\n      wheel_axle: {x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z},\n      suspension_rest_length,\n      wheel_radius,\n      is_front_wheel,\n      tuning\n    });\n  }\n\n  setSteering(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('setSteering', {id: this._physijs.id, wheel, steering: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('setSteering', {id: this._physijs.id, wheel: i, steering: amount});\n    }\n  }\n\n  setBrake(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('setBrake', {id: this._physijs.id, wheel, brake: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('setBrake', {id: this._physijs.id, wheel: i, brake: amount});\n    }\n  }\n\n  applyEngineForce(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('applyEngineForce', {id: this._physijs.id, wheel, force: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('applyEngineForce', {id: this._physijs.id, wheel: i, force: amount});\n    }\n  }\n}\n","import {\n  Scene as SceneNative,\n  Mesh,\n  SphereGeometry,\n  MeshNormalMaterial,\n  BoxGeometry,\n  Vector3\n} from 'three';\n\nimport {Loop} from 'whs';\n\nimport {Vehicle} from '../../vehicle/vehicle';\nimport {Eventable} from '../../eventable';\n\nimport {\n  addObjectChildren,\n  MESSAGE_TYPES,\n  temp1Vector3,\n  temp1Matrix4,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE\n} from '../../api';\n\nexport default class WorldModuleBase extends Eventable {\n  static defaults = {\n    fixedTimeStep: 1/60,\n    rateLimit: true,\n    ammo: \"\",\n    softbody: false,\n    gravity: new Vector3(0, 100, 0)\n  };\n\n  constructor(options) {\n    super();\n\n    this.options = Object.assign(WorldModuleBase.defaults, options);\n\n    this.objects = {};\n    this.vehicles = {};\n    this.constraints = {};\n    this.isSimulating = false;\n\n    this.getObjectId = (() => {\n      let id = 1;\n      return () => {\n        return id++;\n      };\n    })();\n  }\n\n  setup() {\n    this.receive(event => {\n      let _temp,\n        data = event.data;\n\n      if (data instanceof ArrayBuffer && data.byteLength !== 1)// byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\n        data = new Float32Array(data);\n\n      if (data instanceof Float32Array) {\n        // transferable object\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            this.updateScene(data);\n            break;\n\n          case MESSAGE_TYPES.SOFTREPORT:\n            this.updateSoftbodies(data);\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            this.updateCollisions(data);\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            this.updateVehicles(data);\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            this.updateConstraints(data);\n            break;\n          default:\n        }\n      } else if (data.cmd) {\n        // non-transferable object\n        switch (data.cmd) {\n          case 'objectReady':\n            _temp = data.params;\n            if (this.objects[_temp]) this.objects[_temp].dispatchEvent('ready');\n            break;\n\n          case 'worldReady':\n            this.dispatchEvent('ready');\n            break;\n\n          case 'ammoLoaded':\n            this.dispatchEvent('loaded');\n            // console.log(\"Physics loading time: \" + (performance.now() - start) + \"ms\");\n            break;\n\n          case 'vehicle':\n            window.test = data;\n            break;\n\n          default:\n            // Do nothing, just show the message\n            console.debug(`Received: ${data.cmd}`);\n            console.dir(data.params);\n            break;\n        }\n      } else {\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            this.updateScene(data);\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            this.updateCollisions(data);\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            this.updateVehicles(data);\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            this.updateConstraints(data);\n            break;\n          default:\n        }\n      }\n    });\n  }\n\n  updateScene(info) {\n    let index = info[1];\n\n    while (index--) {\n      const offset = 2 + index * REPORT_ITEMSIZE;\n      const object = this.objects[info[offset]];\n      const component = object.component;\n      const data = component.use('physics').data;\n\n      if (object === null) continue;\n\n      if (component.__dirtyPosition === false) {\n        object.position.set(\n          info[offset + 1],\n          info[offset + 2],\n          info[offset + 3]\n        );\n\n        component.__dirtyPosition = false;\n      }\n\n      if (component.__dirtyRotation === false) {\n        object.quaternion.set(\n          info[offset + 4],\n          info[offset + 5],\n          info[offset + 6],\n          info[offset + 7]\n        );\n\n        component.__dirtyRotation = false;\n      }\n\n      data.linearVelocity.set(\n        info[offset + 8],\n        info[offset + 9],\n        info[offset + 10]\n      );\n\n      data.angularVelocity.set(\n        info[offset + 11],\n        info[offset + 12],\n        info[offset + 13]\n      );\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(info.buffer, [info.buffer]); // Give the typed array back to the worker\n\n    this.isSimulating = false;\n    this.dispatchEvent('update');\n  }\n\n  updateSoftbodies(info) {\n    let index = info[1],\n      offset = 2;\n\n    while (index--) {\n      const size = info[offset + 1];\n      const object = this.objects[info[offset]];\n\n      if (object === null) continue;\n\n      const data = object.component.use('physics').data;\n\n      const attributes = object.geometry.attributes;\n      const volumePositions = attributes.position.array;\n\n      const offsetVert = offset + 2;\n\n      // console.log(data.id);\n      if (!data.isSoftBodyReset) {\n        object.position.set(0, 0, 0);\n        object.quaternion.set(0, 0, 0, 0);\n\n        data.isSoftBodyReset = true;\n      }\n\n      if (data.type === \"softTrimesh\") {\n        const volumeNormals = attributes.normal.array;\n\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 18;\n\n          const x1 = info[offs];\n          const y1 = info[offs + 1];\n          const z1 = info[offs + 2];\n\n          const nx1 = info[offs + 3];\n          const ny1 = info[offs + 4];\n          const nz1 = info[offs + 5];\n\n          const x2 = info[offs + 6];\n          const y2 = info[offs + 7];\n          const z2 = info[offs + 8];\n\n          const nx2 = info[offs + 9];\n          const ny2 = info[offs + 10];\n          const nz2 = info[offs + 11];\n\n          const x3 = info[offs + 12];\n          const y3 = info[offs + 13];\n          const z3 = info[offs + 14];\n\n          const nx3 = info[offs + 15];\n          const ny3 = info[offs + 16];\n          const nz3 = info[offs + 17];\n\n          const i9 = i * 9;\n\n          volumePositions[i9] = x1;\n          volumePositions[i9 + 1] = y1;\n          volumePositions[i9 + 2] = z1;\n\n          volumePositions[i9 + 3] = x2;\n          volumePositions[i9 + 4] = y2;\n          volumePositions[i9 + 5] = z2;\n\n          volumePositions[i9 + 6] = x3;\n          volumePositions[i9 + 7] = y3;\n          volumePositions[i9 + 8] = z3;\n\n          volumeNormals[i9] = nx1;\n          volumeNormals[i9 + 1] = ny1;\n          volumeNormals[i9 + 2] = nz1;\n\n          volumeNormals[i9 + 3] = nx2;\n          volumeNormals[i9 + 4] = ny2;\n          volumeNormals[i9 + 5] = nz2;\n\n          volumeNormals[i9 + 6] = nx3;\n          volumeNormals[i9 + 7] = ny3;\n          volumeNormals[i9 + 8] = nz3;\n        }\n\n        attributes.normal.needsUpdate = true;\n        offset += 2 + size * 18;\n      }\n      else if (data.type === \"softRopeMesh\") {\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 3;\n\n          const x = info[offs];\n          const y = info[offs + 1];\n          const z = info[offs + 2];\n\n          volumePositions[i * 3] = x;\n          volumePositions[i * 3 + 1] = y;\n          volumePositions[i * 3 + 2] = z;\n        }\n\n        offset += 2 + size * 3;\n      } else {\n        const volumeNormals = attributes.normal.array;\n\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 6;\n\n          const x = info[offs];\n          const y = info[offs + 1];\n          const z = info[offs + 2];\n\n          const nx = info[offs + 3];\n          const ny = info[offs + 4];\n          const nz = info[offs + 5];\n\n          volumePositions[i * 3] = x;\n          volumePositions[i * 3 + 1] = y;\n          volumePositions[i * 3 + 2] = z;\n\n          // FIXME: Normals are pointed to look inside;\n          volumeNormals[i * 3] = nx;\n          volumeNormals[i * 3 + 1] = ny;\n          volumeNormals[i * 3 + 2] = nz;\n        }\n\n        attributes.normal.needsUpdate = true;\n        offset += 2 + size * 6;\n      }\n\n      attributes.position.needsUpdate = true;\n    }\n\n    // if (this.SUPPORT_TRANSFERABLE)\n    //   this.send(info.buffer, [info.buffer]); // Give the typed array back to the worker\n\n    this.isSimulating = false;\n  }\n\n  updateVehicles(data) {\n    let vehicle, wheel;\n\n    for (let i = 0; i < (data.length - 1) / VEHICLEREPORT_ITEMSIZE; i++) {\n      const offset = 1 + i * VEHICLEREPORT_ITEMSIZE;\n      vehicle = this.vehicles[data[offset]];\n\n      if (vehicle === null) continue;\n\n      wheel = vehicle.wheels[data[offset + 1]];\n\n      wheel.position.set(\n        data[offset + 2],\n        data[offset + 3],\n        data[offset + 4]\n      );\n\n      wheel.quaternion.set(\n        data[offset + 5],\n        data[offset + 6],\n        data[offset + 7],\n        data[offset + 8]\n      );\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  updateConstraints(data) {\n    let constraint, object;\n\n    for (let i = 0; i < (data.length - 1) / CONSTRAINTREPORT_ITEMSIZE; i++) {\n      const offset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\n      constraint = this.constraints[data[offset]];\n      object = this.objects[data[offset + 1]];\n\n      if (constraint === undefined || object === undefined) continue;\n\n      temp1Vector3.set(\n        data[offset + 2],\n        data[offset + 3],\n        data[offset + 4]\n      );\n\n      temp1Matrix4.extractRotation(object.matrix);\n      temp1Vector3.applyMatrix4(temp1Matrix4);\n\n      constraint.positiona.addVectors(object.position, temp1Vector3);\n      constraint.appliedImpulse = data[offset + 5];\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  updateCollisions(info) {\n    /**\n     * #TODO\n     * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\n     * effect from the previous version's evilness which mutated when switching to transferable objects.\n     *\n     * If you feel inclined to make this better, please do so.\n     */\n\n    const collisions = {},\n      normal_offsets = {};\n\n    // Build collision manifest\n    for (let i = 0; i < info[1]; i++) {\n      const offset = 2 + i * COLLISIONREPORT_ITEMSIZE;\n      const object = info[offset];\n      const object2 = info[offset + 1];\n\n      normal_offsets[`${object}-${object2}`] = offset + 2;\n      normal_offsets[`${object2}-${object}`] = -1 * (offset + 2);\n\n      // Register collisions for both the object colliding and the object being collided with\n      if (!collisions[object]) collisions[object] = [];\n      collisions[object].push(object2);\n\n      if (!collisions[object2]) collisions[object2] = [];\n      collisions[object2].push(object);\n    }\n\n    // Deal with collisions\n    for (const id1 in this.objects) {\n      if (!this.objects.hasOwnProperty(id1)) continue;\n      const object = this.objects[id1];\n      const component = object.component;\n      const data = component.use('physics').data;\n\n      if (object === null) continue;\n\n      // If object touches anything, ...\n      if (collisions[id1]) {\n        // Clean up touches array\n        for (let j = 0; j < data.touches.length; j++) {\n          if (collisions[id1].indexOf(data.touches[j]) === -1)\n            data.touches.splice(j--, 1);\n        }\n\n        // Handle each colliding object\n        for (let j = 0; j < collisions[id1].length; j++) {\n          const id2 = collisions[id1][j];\n          const object2 = this.objects[id2];\n\n          if (object2) {\n            const component2 = object2.component;\n            const data2 = component2.use('physics').data;\n            // If object was not already touching object2, notify object\n            if (data.touches.indexOf(id2) === -1) {\n              data.touches.push(id2);\n\n              const vel = component.use('physics').getLinearVelocity();\n              const vel2 = component2.use('physics').getLinearVelocity();\n\n              temp1Vector3.subVectors(vel, vel2);\n              const temp1 = temp1Vector3.clone();\n\n              temp1Vector3.subVectors(vel, vel2);\n              const temp2 = temp1Vector3.clone();\n\n              let normal_offset = normal_offsets[`${data.id}-${data2.id}`];\n\n              if (normal_offset > 0) {\n                temp1Vector3.set(\n                  -info[normal_offset],\n                  -info[normal_offset + 1],\n                  -info[normal_offset + 2]\n                );\n              } else {\n                normal_offset *= -1;\n\n                temp1Vector3.set(\n                  info[normal_offset],\n                  info[normal_offset + 1],\n                  info[normal_offset + 2]\n                );\n              }\n\n              component.emit('collision', object2, temp1, temp2, temp1Vector3);\n            }\n          }\n        }\n      } else data.touches.length = 0; // not touching other objects\n    }\n\n    this.collisions = collisions;\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.send(info.buffer, [info.buffer]); // Give the typed array back to the worker\n  }\n\n  addConstraint(constraint, show_marker) {\n    constraint.id = this.getObjectId();\n    this.constraints[constraint.id] = constraint;\n    constraint.worldModule = this;\n    this.execute('addConstraint', constraint.getDefinition());\n\n    if (show_marker) {\n      let marker;\n\n      switch (constraint.type) {\n        case 'point':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'hinge':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'slider':\n          marker = new Mesh(\n            new BoxGeometry(10, 1, 1),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n\n          // This rotation isn't right if all three axis are non-0 values\n          // TODO: change marker's rotation order to ZYX\n          marker.rotation.set(\n            constraint.axis.y, // yes, y and\n            constraint.axis.x, // x axis are swapped\n            constraint.axis.z\n          );\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'conetwist':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n\n        case 'dof':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this.objects[constraint.objecta].add(marker);\n          break;\n        default:\n      }\n    }\n\n    return constraint;\n  }\n\n  onSimulationResume() {\n    this.execute('onSimulationResume', {});\n  }\n\n  removeConstraint(constraint) {\n    if (this.constraints[constraint.id] !== undefined) {\n      this.execute('removeConstraint', {id: constraint.id});\n      delete this.constraints[constraint.id];\n    }\n  }\n\n  execute(cmd, params) {\n    this.send({cmd, params});\n  }\n\n  onAddCallback(component) {\n    const object = component.native;\n    const data = object.component.use('physics').data;\n\n    if (data) {\n      component.manager.set('module:world', this);\n      data.id = this.getObjectId();\n      object.component.use('physics').data = data;\n\n      if (object instanceof Vehicle) {\n        this.onAddCallback(object.mesh);\n        this.vehicles[data.id] = object;\n        this.execute('addVehicle', data);\n      } else {\n        component.__dirtyPosition = false;\n        component.__dirtyRotation = false;\n        this.objects[data.id] = object;\n\n        if (object.children.length) {\n          data.children = [];\n          addObjectChildren(object, object);\n        }\n\n        // object.quaternion.setFromEuler(object.rotation);\n        //\n        // console.log(object.component);\n        // console.log(object.rotation);\n\n        // Object starting position + rotation\n        data.position = {\n          x: object.position.x,\n          y: object.position.y,\n          z: object.position.z\n        };\n\n        data.rotation = {\n          x: object.quaternion.x,\n          y: object.quaternion.y,\n          z: object.quaternion.z,\n          w: object.quaternion.w\n        };\n\n        if (data.width) data.width *= object.scale.x;\n        if (data.height) data.height *= object.scale.y;\n        if (data.depth) data.depth *= object.scale.z;\n\n        this.execute('addObject', data);\n      }\n\n      component.emit('physics:added');\n    }\n  }\n\n  onRemoveCallback(component) {\n    const object = component.native;\n\n    if (object instanceof Vehicle) {\n      this.execute('removeVehicle', {id: object._physijs.id});\n      while (object.wheels.length) this.remove(object.wheels.pop());\n\n      this.remove(object.mesh);\n      this.vehicles[object._physijs.id] = null;\n    } else {\n      // Mesh.prototype.remove.call(this, object);\n\n      if (object._physijs) {\n        component.manager.remove('module:world');\n        this.objects[object._physijs.id] = null;\n        this.execute('removeObject', {id: object._physijs.id});\n      }\n    }\n  }\n\n  defer(func, args) {\n    return new Promise((resolve) => {\n      if (this.isLoaded) {\n        func(...args);\n        resolve();\n      } else this.loader.then(() => {\n        func(...args);\n        resolve();\n      });\n    });\n  }\n\n  manager(manager) {\n    manager.define('physics');\n    manager.set('physicsWorker', this.worker);\n  }\n\n  bridge = {\n    onAdd(component, self) {\n      if (component.use('physics')) return self.defer(self.onAddCallback.bind(self), [component]);\n      return;\n    },\n\n    onRemove(component, self) {\n      if (component.use('physics')) return self.defer(self.onRemoveCallback.bind(self), [component]);\n      return;\n    }\n  };\n\n  integrate(self) {\n    // ...\n\n    this.setFixedTimeStep = function(fixedTimeStep) {\n      if (fixedTimeStep) self.execute('setFixedTimeStep', fixedTimeStep);\n    }\n\n    this.setGravity = function(gravity) {\n      if (gravity) self.execute('setGravity', gravity);\n    }\n\n    this.addConstraint = self.addConstraint.bind(self);\n\n    this.simulate = function(timeStep, maxSubSteps) {\n      if (self._stats) self._stats.begin();\n\n      if (self.isSimulating) return false;\n      self.isSimulating = true;\n\n      for (const object_id in self.objects) {\n        if (!self.objects.hasOwnProperty(object_id)) continue;\n\n        const object = self.objects[object_id];\n        const component = object.component;\n        const data = component.use('physics').data;\n\n        if (object !== null && (component.__dirtyPosition || component.__dirtyRotation)) {\n          const update = {id: data.id};\n\n          if (component.__dirtyPosition) {\n            update.pos = {\n              x: object.position.x,\n              y: object.position.y,\n              z: object.position.z\n            };\n\n            if (data.isSoftbody) object.position.set(0, 0, 0);\n\n            component.__dirtyPosition = false;\n          }\n\n          if (component.__dirtyRotation) {\n            update.quat = {\n              x: object.quaternion.x,\n              y: object.quaternion.y,\n              z: object.quaternion.z,\n              w: object.quaternion.w\n            };\n\n            if (data.isSoftbody) object.rotation.set(0, 0, 0);\n\n            component.__dirtyRotation = false;\n          }\n\n          self.execute('updateTransform', update);\n        }\n      }\n\n      self.execute('simulate', {timeStep, maxSubSteps});\n\n      if (self._stats) self._stats.end();\n      return true;\n    }\n\n    // const simulateProcess = (t) => {\n    //   window.requestAnimationFrame(simulateProcess);\n\n    //   this.simulate(1/60, 1); // delta, 1\n    // }\n\n    // simulateProcess();\n\n    self.loader.then(() => {\n      self.simulateLoop = new Loop((clock) => {\n        this.simulate(clock.getDelta(), 1); // delta, 1\n      });\n\n      self.simulateLoop.start(this);\n\n      console.log(self.options.gravity);\n      this.setGravity(self.options.gravity);\n    });\n  }\n}\n","var TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder,\n    URL = window.URL || window.webkitURL,\n    Worker = window.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nexport default function shimWorker (filename, fn) {\n    return function ShimWorker (forceFallback) {\n        var o = this;\n\n        if (!fn) {\n            return new Worker(filename);\n        }\n        else if (Worker && !forceFallback) {\n            // Convert the function's inner code to a string to construct the worker\n            var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n                objURL = createSourceObject(source);\n\n            this[TARGET] = new Worker(objURL);\n            URL.revokeObjectURL(objURL);\n            return this[TARGET];\n        }\n        else {\n            var selfShim = {\n                    postMessage: function(m) {\n                        if (o.onmessage) {\n                            setTimeout(function(){ o.onmessage({ data: m, target: selfShim }) });\n                        }\n                    }\n                };\n\n            fn.call(selfShim);\n            this.postMessage = function(m) {\n                setTimeout(function(){ selfShim.onmessage({ data: m, target: o }) });\n            };\n            this.isThisThread = true;\n        }\n    };\n};\n\n// Test Worker capabilities\nif (Worker) {\n    var testWorker,\n        objURL = createSourceObject('self.onmessage = function () {}'),\n        testArray = new Uint8Array(1);\n\n    try {\n        // No workers via blobs in Edge 12 and IE 11 and lower :(\n        if (/(?:Trident|Edge)\\/(?:[567]|12)/i.test(navigator.userAgent)) {\n            throw new Error('Not available');\n        }\n        testWorker = new Worker(objURL);\n\n        // Native browser on some Samsung devices throws for transferables, let's detect it\n        testWorker.postMessage(testArray, [testArray.buffer]);\n    }\n    catch (e) {\n        Worker = null;\n    }\n    finally {\n        URL.revokeObjectURL(objURL);\n        if (testWorker) {\n            testWorker.terminate();\n        }\n    }\n}\n\nfunction createSourceObject(str) {\n    try {\n        return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n    }\n    catch (e) {\n        var blob = new BlobBuilder();\n        blob.append(str);\n        return URL.createObjectURL(blob.getBlob(type));\n    }\n}\n","import shimWorker from 'rollup-plugin-bundle-worker';\nexport default new shimWorker(\"../worker.js\", function (window, document) {\nvar self = this;\nfunction Events(target) {\n  var events = {},\n    empty = [];\n  target = target || this\n  /**\n   *  On: listen to events\n   */\n  target.on = function (type, func, ctx) {\n    (events[type] = events[type] || []).push([func, ctx])\n    return target\n  }\n  /**\n   *  Off: stop listening to event / specific callback\n   */\n  target.off = function (type, func) {\n    type || (events = {})\n    var list = events[type] || empty,\n      i = list.length = func ? list.length : 0;\n    while (i--) func == list[i][0] && list.splice(i, 1)\n    return target\n  }\n  /**\n   * Emit: send event, callbacks will be triggered\n   */\n  target.emit = function (type) {\n    var e = events[type] || empty,\n      list = e.length > 0 ? e.slice(0, e.length) : e,\n      i = 0,\n      j;\n    while (j = list[i++]) j[0].apply(j[1], empty.slice.call(arguments, 1))\n    return target\n  };\n};\n\nconst insideWorker = !self.document;\nif (!insideWorker) self = new Events();\n\nlet send = insideWorker ? (self.webkitPostMessage || self.postMessage) : function (data) {\n  self.emit('message', { data });\n};\n\nself.send = send;\n\nlet SUPPORT_TRANSFERABLE;\n\nif (insideWorker) {\n  const ab = new ArrayBuffer(1);\n\n  send(ab, [ab]);\n  SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n}\n\nconst MESSAGE_TYPES = {\n  WORLDREPORT: 0,\n  COLLISIONREPORT: 1,\n  VEHICLEREPORT: 2,\n  CONSTRAINTREPORT: 3,\n  SOFTREPORT: 4\n};\n\n// temp variables\nlet _object,\n  _vector,\n  _transform,\n  _transform_pos,\n  _softbody_enabled = false,\n  last_simulation_duration = 0,\n\n  _num_objects = 0,\n  _num_rigidbody_objects = 0,\n  _num_softbody_objects = 0,\n  _num_wheels = 0,\n  _num_constraints = 0,\n  _softbody_report_size = 0,\n\n  // world variables\n  fixedTimeStep, // used when calling stepSimulation\n  last_simulation_time,\n\n  world,\n  _vec3_1,\n  _vec3_2,\n  _vec3_3,\n  _quat;\n\n// private cache\nconst public_functions = {},\n  _objects = [],\n  _vehicles = [],\n  _constraints = [],\n  _objects_ammo = {},\n  _object_shapes = {},\n\n  // The following objects are to track objects that ammo.js doesn't clean\n  // up. All are cleaned up when they're corresponding body is destroyed.\n  // Unfortunately, it's very difficult to get at these objects from the\n  // body, so we have to track them ourselves.\n  _motion_states = {},\n  // Don't need to worry about it for cached shapes.\n  _noncached_shapes = {},\n  // A body with a compound shape always has a regular shape as well, so we\n  // have track them separately.\n  _compound_shapes = {};\n\n// object reporting\nlet REPORT_CHUNKSIZE, // report array is increased in increments of this chunk size\n  worldreport,\n  softreport,\n  collisionreport,\n  vehiclereport,\n  constraintreport;\n\nconst WORLDREPORT_ITEMSIZE = 14, // how many float values each reported item needs\n  COLLISIONREPORT_ITEMSIZE = 5, // one float for each object id, and a Vec3 contact normal\n  VEHICLEREPORT_ITEMSIZE = 9, // vehicle id, wheel index, 3 for position, 4 for rotation\n  CONSTRAINTREPORT_ITEMSIZE = 6; // constraint id, offset object, offset, applied impulse\n\nconst getShapeFromCache = (cache_key) => {\n  if (_object_shapes[cache_key] !== undefined)\n    return _object_shapes[cache_key];\n\n  return null;\n};\n\nconst setShapeCache = (cache_key, shape) => {\n  _object_shapes[cache_key] = shape;\n};\n\nconst createShape = (description) => {\n  let shape;\n\n  _transform.setIdentity();\n  switch (description.type) {\n  case 'compound':\n    {\n      shape = new Ammo.btCompoundShape();\n\n      break;\n    }\n  case 'plane':\n    {\n      const cache_key = `plane_${description.normal.x}_${description.normal.y}_${description.normal.z}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.normal.x);\n        _vec3_1.setY(description.normal.y);\n        _vec3_1.setZ(description.normal.z);\n        shape = new Ammo.btStaticPlaneShape(_vec3_1, 0);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'box':\n    {\n      const cache_key = `box_${description.width}_${description.height}_${description.depth}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.width / 2);\n        _vec3_1.setY(description.height / 2);\n        _vec3_1.setZ(description.depth / 2);\n        shape = new Ammo.btBoxShape(_vec3_1);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'sphere':\n    {\n      const cache_key = `sphere_${description.radius}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        shape = new Ammo.btSphereShape(description.radius);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'cylinder':\n    {\n      const cache_key = `cylinder_${description.width}_${description.height}_${description.depth}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.width / 2);\n        _vec3_1.setY(description.height / 2);\n        _vec3_1.setZ(description.depth / 2);\n        shape = new Ammo.btCylinderShape(_vec3_1);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'capsule':\n    {\n      const cache_key = `capsule_${description.radius}_${description.height}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        // In Bullet, capsule height excludes the end spheres\n        shape = new Ammo.btCapsuleShape(description.radius, description.height - 2 * description.radius);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'cone':\n    {\n      const cache_key = `cone_${description.radius}_${description.height}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        shape = new Ammo.btConeShape(description.radius, description.height);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n  case 'concave':\n    {\n      const triangle_mesh = new Ammo.btTriangleMesh();\n      if (!description.data.length) return false;\n      const data = description.data;\n\n      for (let i = 0; i < data.length / 9; i++) {\n        _vec3_1.setX(data[i * 9]);\n        _vec3_1.setY(data[i * 9 + 1]);\n        _vec3_1.setZ(data[i * 9 + 2]);\n\n        _vec3_2.setX(data[i * 9 + 3]);\n        _vec3_2.setY(data[i * 9 + 4]);\n        _vec3_2.setZ(data[i * 9 + 5]);\n\n        _vec3_3.setX(data[i * 9 + 6]);\n        _vec3_3.setY(data[i * 9 + 7]);\n        _vec3_3.setZ(data[i * 9 + 8]);\n\n        triangle_mesh.addTriangle(\n          _vec3_1,\n          _vec3_2,\n          _vec3_3,\n          false\n        );\n      }\n\n      shape = new Ammo.btBvhTriangleMeshShape(\n        triangle_mesh,\n        true,\n        true\n      );\n\n      _noncached_shapes[description.id] = shape;\n\n      break;\n    }\n  case 'convex':\n    {\n      shape = new Ammo.btConvexHullShape();\n      const data = description.data;\n\n      for (let i = 0; i < data.length / 3; i++) {\n        _vec3_1.setX(data[i * 3]);\n        _vec3_1.setY(data[i * 3 + 1]);\n        _vec3_1.setZ(data[i * 3 + 2]);\n\n        shape.addPoint(_vec3_1);\n      }\n\n      _noncached_shapes[description.id] = shape;\n\n      break;\n    }\n  case 'heightfield':\n    {\n      const xpts = description.xpts,\n        ypts = description.ypts,\n        points = description.points,\n        ptr = Ammo._malloc(4 * xpts * ypts);\n\n      for (let i = 0, p = 0, p2 = 0; i < xpts; i++) {\n        for (let j = 0; j < ypts; j++) {\n          Ammo.HEAPF32[ptr + p2 >> 2] = points[p];\n\n          p++;\n          p2 += 4;\n        }\n      }\n\n      shape = new Ammo.btHeightfieldTerrainShape(\n        description.xpts,\n        description.ypts,\n        ptr,\n        1, -description.absMaxHeight,\n        description.absMaxHeight,\n        1,\n        'PHY_FLOAT',\n        false\n      );\n\n      _noncached_shapes[description.id] = shape;\n      break;\n    }\n  default:\n    // Not recognized\n    return;\n  }\n\n  return shape;\n};\n\nconst createSoftBody = (description) => {\n  let body;\n\n  const softBodyHelpers = new Ammo.btSoftBodyHelpers();\n\n  switch (description.type) {\n  case 'softTrimesh':\n    {\n      if (!description.aVertices.length) return false;\n\n      body = softBodyHelpers.CreateFromTriMesh(\n        world.getWorldInfo(),\n        description.aVertices,\n        description.aIndices,\n        description.aIndices.length / 3,\n        false\n      );\n\n      break;\n    }\n  case 'softClothMesh':\n    {\n      const cr = description.corners;\n\n      body = softBodyHelpers.CreatePatch(\n        world.getWorldInfo(),\n        new Ammo.btVector3(cr[0], cr[1], cr[2]),\n        new Ammo.btVector3(cr[3], cr[4], cr[5]),\n        new Ammo.btVector3(cr[6], cr[7], cr[8]),\n        new Ammo.btVector3(cr[9], cr[10], cr[11]),\n        description.segments[0],\n        description.segments[1],\n        0,\n        true\n      );\n\n      break;\n    }\n  case 'softRopeMesh':\n    {\n      const data = description.data;\n\n      body = softBodyHelpers.CreateRope(\n        world.getWorldInfo(),\n        new Ammo.btVector3(data[0], data[1], data[2]),\n        new Ammo.btVector3(data[3], data[4], data[5]),\n        data[6] - 1,\n        0\n      );\n\n      break;\n    }\n  default:\n    // Not recognized\n    return;\n  }\n\n  return body;\n};\n\npublic_functions.init = (params = {}) => {\n  if (params.noWorker) {\n    window.Ammo = new params.ammo();\n    public_functions.makeWorld(params);\n    return;\n  }\n\n  if (params.wasmBuffer) {\n    importScripts(params.ammo);\n\n    self.Ammo = new loadAmmoFromBinary(params.wasmBuffer)();\n    send({ cmd: 'ammoLoaded' });\n    public_functions.makeWorld(params);\n  }\n  else {\n    importScripts(params.ammo);\n    send({ cmd: 'ammoLoaded' });\n\n    self.Ammo = new Ammo();\n    public_functions.makeWorld(params);\n  }\n}\n\npublic_functions.makeWorld = (params = {}) => {\n  _transform = new Ammo.btTransform();\n  _transform_pos = new Ammo.btTransform();\n  _vec3_1 = new Ammo.btVector3(0, 0, 0);\n  _vec3_2 = new Ammo.btVector3(0, 0, 0);\n  _vec3_3 = new Ammo.btVector3(0, 0, 0);\n  _quat = new Ammo.btQuaternion(0, 0, 0, 0);\n\n  REPORT_CHUNKSIZE = params.reportsize || 50;\n\n  if (SUPPORT_TRANSFERABLE) {\n    // Transferable messages are supported, take advantage of them with TypedArrays\n    worldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object\n    collisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object\n    vehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object\n    constraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object\n  }\n  else {\n    // Transferable messages are not supported, send data as normal arrays\n    worldreport = [];\n    collisionreport = [];\n    vehiclereport = [];\n    constraintreport = [];\n  }\n\n  worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n  collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n  vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n  constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\n  const collisionConfiguration = params.softbody ?\n    new Ammo.btSoftBodyRigidBodyCollisionConfiguration() :\n    new Ammo.btDefaultCollisionConfiguration(),\n    dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n    solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n  let broadphase;\n\n  if (!params.broadphase) params.broadphase = { type: 'dynamic' };\n  // TODO!!!\n  /* if (params.broadphase.type === 'sweepprune') {\n    extend(params.broadphase, {\n      aabbmin: {\n        x: -50,\n        y: -50,\n        z: -50\n      },\n\n      aabbmax: {\n        x: 50,\n        y: 50,\n        z: 50\n      },\n    });\n  }*/\n\n  switch (params.broadphase.type) {\n  case 'sweepprune':\n    _vec3_1.setX(params.broadphase.aabbmin.x);\n    _vec3_1.setY(params.broadphase.aabbmin.y);\n    _vec3_1.setZ(params.broadphase.aabbmin.z);\n\n    _vec3_2.setX(params.broadphase.aabbmax.x);\n    _vec3_2.setY(params.broadphase.aabbmax.y);\n    _vec3_2.setZ(params.broadphase.aabbmax.z);\n\n    broadphase = new Ammo.btAxisSweep3(\n      _vec3_1,\n      _vec3_2\n    );\n\n    break;\n  case 'dynamic':\n  default:\n    broadphase = new Ammo.btDbvtBroadphase();\n    break;\n  }\n\n  world = params.softbody ?\n    new Ammo.btSoftRigidDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration, new Ammo.btDefaultSoftBodySolver()) :\n    new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);\n  fixedTimeStep = params.fixedTimeStep;\n\n  if (params.softbody) _softbody_enabled = true;\n\n  send({ cmd: 'worldReady' });\n};\n\npublic_functions.setFixedTimeStep = (description) => {\n  fixedTimeStep = description;\n};\n\npublic_functions.setGravity = (description) => {\n  _vec3_1.setX(description.x);\n  _vec3_1.setY(description.y);\n  _vec3_1.setZ(description.z);\n  world.setGravity(_vec3_1);\n};\n\npublic_functions.appendAnchor = (description) => {\n  _objects[description.obj]\n    .appendAnchor(\n      description.node,\n      _objects[description.obj2],\n      description.collisionBetweenLinkedBodies,\n      description.influence\n    );\n}\n\npublic_functions.linkNodes = (description) => {\n  var self_body = _objects[description.self];\n  var other_body = _objects[description.body];\n\n  var self_node = self_body.get_m_nodes().at(description.n1);\n  var other_node = other_body.get_m_nodes().at(description.n2);\n\n  var self_vec = self_node.get_m_x();\n  var other_vec = other_node.get_m_x();\n\n  var force_x = other_vec.x() - self_vec.x();\n  var force_y = other_vec.y() - self_vec.y();\n  var force_z = other_vec.z() - self_vec.z();\n\n\n  // var modifier = 30;\n\n  let cached_distance, linked = false;\n\n  const _loop = setInterval(() => {\n    force_x = other_vec.x() - self_vec.x();\n    force_y = other_vec.y() - self_vec.y();\n    force_z = other_vec.z() - self_vec.z();\n\n    let distance = Math.sqrt(force_x * force_x + force_y * force_y + force_z * force_z);\n\n    if (cached_distance && !linked && cached_distance < distance) { // cached_distance && !linked && cached_distance < distance\n\n      linked = true;\n\n      // let self_vel = self_node.get_m_v();\n      //\n      // _vec3_1.setX(-self_vel.x());\n      // _vec3_1.setY(-self_vel.y());\n      // _vec3_1.setZ(-self_vel.z());\n      //\n      // let other_vel = other_node.get_m_v();\n      //\n      // _vec3_2.setX(-other_vel.x());\n      // _vec3_2.setY(-other_vel.y());\n      // _vec3_2.setZ(-other_vel.z());\n\n      console.log('link!');\n\n      _vec3_1.setX(0);\n      _vec3_1.setY(0);\n      _vec3_1.setZ(0);\n\n      self_body.setVelocity(\n        _vec3_1\n      );\n\n      other_body.setVelocity(\n        _vec3_1\n      );\n\n\n\n      // self_body.addVelocity(_vec3_1);\n      // other_body.addVelocity(_vec3_2);\n\n      // self_relative_x = self_node.x();\n      // self_relative_y = self_node.y();\n      // self_relative_z = self_node.z();\n      //\n      // other_relative_x = other_node.x();\n      // other_relative_y = other_node.y();\n      // other_relative_z = other_node.z();\n\n      // self_relative = new Ammo.btVector3();\n      // self_relative.setX();\n\n      // console.log('link!');\n      // self_body.appendAnchor(description.n1, connector, true, 0.5);\n      // other_body.appendAnchor(description.n2, connector, true, 0.5);\n      // clearInterval(_loop);\n\n      // _vec3_1.setX(0);\n      // _vec3_1.setY(0);\n      // _vec3_1.setZ(0);\n\n      // self_body.setVelocity(_vec3_1);\n      // other_body.setVelocity(_vec3_1);\n\n      // other_body.addForce(\n      //   _vec3_2,\n      //   description.n2\n      // );\n\n      // description.modifier *= 1.6;\n    }\n\n    const modifer2 = linked ? 40 : 1;\n\n    force_x *= Math.max(distance, 1) * description.modifier * modifer2;\n    force_y *= Math.max(distance, 1) * description.modifier * modifer2;\n    force_z *= Math.max(distance, 1) * description.modifier * modifer2;\n\n    _vec3_1.setX(force_x);\n    _vec3_1.setY(force_y);\n    _vec3_1.setZ(force_z);\n\n    _vec3_2.setX(-force_x);\n    _vec3_2.setY(-force_y);\n    _vec3_2.setZ(-force_z);\n\n    self_body.addVelocity(\n      _vec3_1,\n      description.n1\n    );\n\n    other_body.addVelocity(\n      _vec3_2,\n      description.n2\n    );\n\n    // } else {\n    //   // self_relative_x = null;\n    // }\n\n\n\n    // if (self_relative_x) {\n    //   _vec3_1.setX(self_relative_x - self_node.x());\n    //   _vec3_1.setY(self_relative_y - self_node.y());\n    //   _vec3_1.setZ(self_relative_z - self_node.z());\n    //\n    //   _vec3_2.setX(other_relative_x - other_node.x());\n    //   _vec3_2.setY(other_relative_y - other_node.y());\n    //   _vec3_2.setZ(other_relative_z - other_node.z());\n    // } else {\n\n    // }\n\n\n\n\n    cached_distance = distance;\n  }, 10);\n}\n\npublic_functions.appendLink = (description) => {\n  // console.log(Ammo);\n  // console.log(new Ammo.Material());\n\n  // var _mat = new Ammo.Material();\n  //\n  // _mat.set_m_kAST(0);\n  // _mat.set_m_kLST(0);\n  // _mat.set_m_kVST(0);\n  //\n  // _objects[description.self].appendLink(\n  //   description.n1,\n  //   description.n2,\n  //   _mat,\n  //   false\n  // );\n\n  _vec3_1.setX(1000);\n  _vec3_1.setY(0);\n  _vec3_1.setZ(0);\n\n  _objects[description.self].addForce(\n    _vec3_1,\n    description.n1\n  );\n}\n\npublic_functions.appendLinearJoint = (description) => {\n  // console.log('Ammo', Ammo);\n  var specs = new Ammo.Specs();\n  var _pos = description.specs.position;\n\n  specs.set_position(new Ammo.btVector3(_pos[0], _pos[1], _pos[2]));\n  if (description.specs.erp) specs.set_erp(description.specs.erp);\n  if (description.specs.cfm) specs.set_cfm(description.specs.cfm);\n  if (description.specs.split) specs.set_split(description.specs.split);\n\n  // console.log(specs);\n  //\n  // // ljoint.set_m_rpos(\n  // //   new Ammo.btVector3(_pos1[0], _pos1[1], _pos1[2]),\n  // //   new Ammo.btVector3(_pos2[0], _pos2[1], _pos2[2])\n  // // );\n  //\n  // // console.log('ljoint', ljoint);\n  //\n\n  // console.log('body', _objects[description.body]);\n  _objects[description.self]\n    .appendLinearJoint(\n      specs,\n      _objects[description.body]\n    );\n}\n\npublic_functions.addObject = (description) => {\n  let body, motionState;\n\n  if (description.type.indexOf('soft') !== -1) {\n    body = createSoftBody(description);\n\n    const sbConfig = body.get_m_cfg();\n\n    if (description.viterations) sbConfig.set_viterations(description.viterations);\n    if (description.piterations) sbConfig.set_piterations(description.piterations);\n    if (description.diterations) sbConfig.set_diterations(description.diterations);\n    if (description.citerations) sbConfig.set_citerations(description.citerations);\n    sbConfig.set_collisions(0x11);\n    sbConfig.set_kDF(description.friction);\n    sbConfig.set_kDP(description.damping);\n    if (description.pressure) sbConfig.set_kPR(description.pressure);\n    if (description.drag) sbConfig.set_kDG(description.drag);\n    if (description.lift) sbConfig.set_kLF(description.lift);\n    if (description.anchorHardness) sbConfig.set_kAHR(description.anchorHardness);\n    if (description.rigidHardness) sbConfig.set_kCHR(description.rigidHardness);\n\n    if (description.klst) body.get_m_materials().at(0).set_m_kLST(description.klst);\n    if (description.kast) body.get_m_materials().at(0).set_m_kAST(description.kast);\n    if (description.kvst) body.get_m_materials().at(0).set_m_kVST(description.kvst);\n\n    Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setMargin(\n      typeof description.margin !== 'undefined' ? description.margin : 0.1\n    );\n\n    // Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setMargin(0);\n\n    // Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setLocalScaling(_vec3_1);\n    body.setActivationState(description.state || 4);\n    body.type = 0; // SoftBody.\n    if (description.type === 'softRopeMesh') body.rope = true;\n    if (description.type === 'softClothMesh') body.cloth = true;\n\n    _transform.setIdentity();\n\n    // @test\n    _quat.setX(description.rotation.x);\n    _quat.setY(description.rotation.y);\n    _quat.setZ(description.rotation.z);\n    _quat.setW(description.rotation.w);\n    body.rotate(_quat);\n\n    _vec3_1.setX(description.position.x);\n    _vec3_1.setY(description.position.y);\n    _vec3_1.setZ(description.position.z);\n    body.translate(_vec3_1);\n\n    _vec3_1.setX(description.scale.x);\n    _vec3_1.setY(description.scale.y);\n    _vec3_1.setZ(description.scale.z);\n    body.scale(_vec3_1);\n\n    body.setTotalMass(description.mass, false);\n    world.addSoftBody(body, 1, -1);\n    if (description.type === 'softTrimesh') _softbody_report_size += body.get_m_faces().size() * 3;\n    else if (description.type === 'softRopeMesh') _softbody_report_size += body.get_m_nodes().size();\n    else _softbody_report_size += body.get_m_nodes().size() * 3;\n\n    _num_softbody_objects++;\n  }\n  else {\n    let shape = createShape(description);\n\n    if (!shape) return;\n\n    // If there are children then this is a compound shape\n    if (description.children) {\n      const compound_shape = new Ammo.btCompoundShape();\n      compound_shape.addChildShape(_transform, shape);\n\n      for (let i = 0; i < description.children.length; i++) {\n        const _child = description.children[i];\n\n        const trans = new Ammo.btTransform();\n        trans.setIdentity();\n\n        _vec3_1.setX(_child.position_offset.x);\n        _vec3_1.setY(_child.position_offset.y);\n        _vec3_1.setZ(_child.position_offset.z);\n        trans.setOrigin(_vec3_1);\n\n        _quat.setX(_child.rotation.x);\n        _quat.setY(_child.rotation.y);\n        _quat.setZ(_child.rotation.z);\n        _quat.setW(_child.rotation.w);\n        trans.setRotation(_quat);\n\n        shape = createShape(description.children[i]);\n        compound_shape.addChildShape(trans, shape);\n        Ammo.destroy(trans);\n      }\n\n      shape = compound_shape;\n      _compound_shapes[description.id] = shape;\n    }\n\n    _vec3_1.setX(description.scale.x);\n    _vec3_1.setY(description.scale.y);\n    _vec3_1.setZ(description.scale.z);\n\n    shape.setLocalScaling(_vec3_1);\n    shape.setMargin(\n      typeof description.margin !== 'undefined' ? description.margin : 0\n    );\n\n    _vec3_1.setX(0);\n    _vec3_1.setY(0);\n    _vec3_1.setZ(0);\n    shape.calculateLocalInertia(description.mass, _vec3_1);\n\n    _transform.setIdentity();\n\n    _vec3_2.setX(description.position.x);\n    _vec3_2.setY(description.position.y);\n    _vec3_2.setZ(description.position.z);\n    _transform.setOrigin(_vec3_2);\n\n    _quat.setX(description.rotation.x);\n    _quat.setY(description.rotation.y);\n    _quat.setZ(description.rotation.z);\n    _quat.setW(description.rotation.w);\n    _transform.setRotation(_quat);\n\n    motionState = new Ammo.btDefaultMotionState(_transform); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(description.mass, motionState, shape, _vec3_1);\n\n    rbInfo.set_m_friction(description.friction);\n    rbInfo.set_m_restitution(description.restitution);\n    rbInfo.set_m_linearDamping(description.damping);\n    rbInfo.set_m_angularDamping(description.damping);\n\n    body = new Ammo.btRigidBody(rbInfo);\n    body.setActivationState(description.state || 4);\n    Ammo.destroy(rbInfo);\n\n    if (typeof description.collision_flags !== 'undefined') body.setCollisionFlags(description.collision_flags);\n\n    if (description.group && description.mask) world.addRigidBody(body, description.group, description.mask);\n    else world.addRigidBody(body);\n    body.type = 1; // RigidBody.\n    _num_rigidbody_objects++;\n  }\n\n  body.activate();\n\n  body.id = description.id;\n  _objects[body.id] = body;\n  _motion_states[body.id] = motionState;\n\n  _objects_ammo[body.a === undefined ? body.ptr : body.a] = body.id;\n  _num_objects++;\n\n  send({ cmd: 'objectReady', params: body.id });\n};\n\npublic_functions.addVehicle = (description) => {\n  const vehicle_tuning = new Ammo.btVehicleTuning();\n\n  vehicle_tuning.set_m_suspensionStiffness(description.suspension_stiffness);\n  vehicle_tuning.set_m_suspensionCompression(description.suspension_compression);\n  vehicle_tuning.set_m_suspensionDamping(description.suspension_damping);\n  vehicle_tuning.set_m_maxSuspensionTravelCm(description.max_suspension_travel);\n  vehicle_tuning.set_m_maxSuspensionForce(description.max_suspension_force);\n\n  const vehicle = new Ammo.btRaycastVehicle(\n    vehicle_tuning,\n    _objects[description.rigidBody],\n    new Ammo.btDefaultVehicleRaycaster(world)\n  );\n\n  vehicle.tuning = vehicle_tuning;\n  _objects[description.rigidBody].setActivationState(4);\n  vehicle.setCoordinateSystem(0, 1, 2);\n\n  world.addVehicle(vehicle);\n  _vehicles[description.id] = vehicle;\n};\npublic_functions.removeVehicle = (description) => {\n  _vehicles[description.id] = null;\n};\n\npublic_functions.addWheel = (description) => {\n  if (_vehicles[description.id] !== undefined) {\n    let tuning = _vehicles[description.id].tuning;\n    if (description.tuning !== undefined) {\n      tuning = new Ammo.btVehicleTuning();\n      tuning.set_m_suspensionStiffness(description.tuning.suspension_stiffness);\n      tuning.set_m_suspensionCompression(description.tuning.suspension_compression);\n      tuning.set_m_suspensionDamping(description.tuning.suspension_damping);\n      tuning.set_m_maxSuspensionTravelCm(description.tuning.max_suspension_travel);\n      tuning.set_m_maxSuspensionForce(description.tuning.max_suspension_force);\n    }\n\n    _vec3_1.setX(description.connection_point.x);\n    _vec3_1.setY(description.connection_point.y);\n    _vec3_1.setZ(description.connection_point.z);\n\n    _vec3_2.setX(description.wheel_direction.x);\n    _vec3_2.setY(description.wheel_direction.y);\n    _vec3_2.setZ(description.wheel_direction.z);\n\n    _vec3_3.setX(description.wheel_axle.x);\n    _vec3_3.setY(description.wheel_axle.y);\n    _vec3_3.setZ(description.wheel_axle.z);\n\n    _vehicles[description.id].addWheel(\n      _vec3_1,\n      _vec3_2,\n      _vec3_3,\n      description.suspension_rest_length,\n      description.wheel_radius,\n      tuning,\n      description.is_front_wheel\n    );\n  }\n\n  _num_wheels++;\n\n  if (SUPPORT_TRANSFERABLE) {\n    vehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n    vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n  }\n  else vehiclereport = [MESSAGE_TYPES.VEHICLEREPORT];\n};\n\npublic_functions.setSteering = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].setSteeringValue(details.steering, details.wheel);\n};\n\npublic_functions.setBrake = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].setBrake(details.brake, details.wheel);\n};\n\npublic_functions.applyEngineForce = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].applyEngineForce(details.force, details.wheel);\n};\n\npublic_functions.removeObject = (details) => {\n  if (_objects[details.id].type === 0) {\n    _num_softbody_objects--;\n    _softbody_report_size -= _objects[details.id].get_m_nodes().size();\n    world.removeSoftBody(_objects[details.id]);\n  }\n  else if (_objects[details.id].type === 1) {\n    _num_rigidbody_objects--;\n    world.removeRigidBody(_objects[details.id]);\n    Ammo.destroy(_motion_states[details.id]);\n  }\n\n  Ammo.destroy(_objects[details.id]);\n  if (_compound_shapes[details.id]) Ammo.destroy(_compound_shapes[details.id]);\n  if (_noncached_shapes[details.id]) Ammo.destroy(_noncached_shapes[details.id]);\n\n  _objects_ammo[_objects[details.id].a === undefined ? _objects[details.id].a : _objects[details.id].ptr] = null;\n  _objects[details.id] = null;\n  _motion_states[details.id] = null;\n\n  if (_compound_shapes[details.id]) _compound_shapes[details.id] = null;\n  if (_noncached_shapes[details.id]) _noncached_shapes[details.id] = null;\n  _num_objects--;\n};\n\npublic_functions.updateTransform = (details) => {\n  _object = _objects[details.id];\n\n  if (_object.type === 1) {\n    _object.getMotionState().getWorldTransform(_transform);\n\n    if (details.pos) {\n      _vec3_1.setX(details.pos.x);\n      _vec3_1.setY(details.pos.y);\n      _vec3_1.setZ(details.pos.z);\n      _transform.setOrigin(_vec3_1);\n    }\n\n    if (details.quat) {\n      _quat.setX(details.quat.x);\n      _quat.setY(details.quat.y);\n      _quat.setZ(details.quat.z);\n      _quat.setW(details.quat.w);\n      _transform.setRotation(_quat);\n    }\n\n    _object.setWorldTransform(_transform);\n    _object.activate();\n  }\n  else if (_object.type === 0) {\n    // _object.getWorldTransform(_transform);\n\n    if (details.pos) {\n      _vec3_1.setX(details.pos.x);\n      _vec3_1.setY(details.pos.y);\n      _vec3_1.setZ(details.pos.z);\n      _transform.setOrigin(_vec3_1);\n    }\n\n    if (details.quat) {\n      _quat.setX(details.quat.x);\n      _quat.setY(details.quat.y);\n      _quat.setZ(details.quat.z);\n      _quat.setW(details.quat.w);\n      _transform.setRotation(_quat);\n    }\n\n    _object.transform(_transform);\n  }\n};\n\npublic_functions.updateMass = (details) => {\n  // #TODO: changing a static object into dynamic is buggy\n  _object = _objects[details.id];\n\n  // Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816\n  world.removeRigidBody(_object);\n\n  _vec3_1.setX(0);\n  _vec3_1.setY(0);\n  _vec3_1.setZ(0);\n\n  _object.setMassProps(details.mass, _vec3_1);\n  world.addRigidBody(_object);\n  _object.activate();\n};\n\npublic_functions.applyCentralImpulse = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].applyCentralImpulse(_vec3_1);\n  _objects[details.id].activate();\n};\n\npublic_functions.applyImpulse = (details) => {\n  _vec3_1.setX(details.impulse_x);\n  _vec3_1.setY(details.impulse_y);\n  _vec3_1.setZ(details.impulse_z);\n\n  _vec3_2.setX(details.x);\n  _vec3_2.setY(details.y);\n  _vec3_2.setZ(details.z);\n\n  _objects[details.id].applyImpulse(\n    _vec3_1,\n    _vec3_2\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.applyTorque = (details) => {\n  _vec3_1.setX(details.torque_x);\n  _vec3_1.setY(details.torque_y);\n  _vec3_1.setZ(details.torque_z);\n\n  _objects[details.id].applyTorque(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.applyCentralForce = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].applyCentralForce(_vec3_1);\n  _objects[details.id].activate();\n};\n\npublic_functions.applyForce = (details) => {\n  _vec3_1.setX(details.force_x);\n  _vec3_1.setY(details.force_y);\n  _vec3_1.setZ(details.force_z);\n\n  _vec3_2.setX(details.x);\n  _vec3_2.setY(details.y);\n  _vec3_2.setZ(details.z);\n\n  _objects[details.id].applyForce(\n    _vec3_1,\n    _vec3_2\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.onSimulationResume = () => {\n  last_simulation_time = Date.now();\n};\n\npublic_functions.setAngularVelocity = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setAngularVelocity(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.setLinearVelocity = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setLinearVelocity(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.setAngularFactor = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setAngularFactor(\n    _vec3_1\n  );\n};\n\npublic_functions.setLinearFactor = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setLinearFactor(\n    _vec3_1\n  );\n};\n\npublic_functions.setDamping = (details) => {\n  _objects[details.id].setDamping(details.linear, details.angular);\n};\n\npublic_functions.setCcdMotionThreshold = (details) => {\n  _objects[details.id].setCcdMotionThreshold(details.threshold);\n};\n\npublic_functions.setCcdSweptSphereRadius = (details) => {\n  _objects[details.id].setCcdSweptSphereRadius(details.radius);\n};\n\npublic_functions.addConstraint = (details) => {\n  let constraint;\n\n  switch (details.type) {\n\n  case 'point':\n    {\n      if (details.objectb === undefined) {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        constraint = new Ammo.btPoint2PointConstraint(\n          _objects[details.objecta],\n          _vec3_1\n        );\n      }\n      else {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        constraint = new Ammo.btPoint2PointConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          _vec3_1,\n          _vec3_2\n        );\n      }\n      break;\n    }\n  case 'hinge':\n    {\n      if (details.objectb === undefined) {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.axis.x);\n        _vec3_2.setY(details.axis.y);\n        _vec3_2.setZ(details.axis.z);\n\n        constraint = new Ammo.btHingeConstraint(\n          _objects[details.objecta],\n          _vec3_1,\n          _vec3_2\n        );\n\n      }\n      else {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        _vec3_3.setX(details.axis.x);\n        _vec3_3.setY(details.axis.y);\n        _vec3_3.setZ(details.axis.z);\n\n        constraint = new Ammo.btHingeConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          _vec3_1,\n          _vec3_2,\n          _vec3_3,\n          _vec3_3\n        );\n      }\n      break;\n    }\n  case 'slider':\n    {\n      let transformb;\n      const transforma = new Ammo.btTransform();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      transforma.setOrigin(_vec3_1);\n\n      let rotation = transforma.getRotation();\n      rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n      transforma.setRotation(rotation);\n\n      if (details.objectb) {\n        transformb = new Ammo.btTransform();\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transformb.setOrigin(_vec3_2);\n\n        rotation = transformb.getRotation();\n        rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btSliderConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb,\n          true\n        );\n      }\n      else {\n        constraint = new Ammo.btSliderConstraint(\n          _objects[details.objecta],\n          transforma,\n          true\n        );\n      }\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      if (transformb !== undefined) Ammo.destroy(transformb);\n\n      break;\n    }\n  case 'conetwist':\n    {\n      const transforma = new Ammo.btTransform();\n      transforma.setIdentity();\n\n      const transformb = new Ammo.btTransform();\n      transformb.setIdentity();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      _vec3_2.setX(details.positionb.x);\n      _vec3_2.setY(details.positionb.y);\n      _vec3_2.setZ(details.positionb.z);\n\n      transforma.setOrigin(_vec3_1);\n      transformb.setOrigin(_vec3_2);\n\n      let rotation = transforma.getRotation();\n      rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n      transforma.setRotation(rotation);\n\n      rotation = transformb.getRotation();\n      rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n      transformb.setRotation(rotation);\n\n      constraint = new Ammo.btConeTwistConstraint(\n        _objects[details.objecta],\n        _objects[details.objectb],\n        transforma,\n        transformb\n      );\n\n      constraint.setLimit(Math.PI, 0, Math.PI);\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      Ammo.destroy(transformb);\n\n      break;\n    }\n  case 'dof':\n    {\n      let transformb;\n\n      const transforma = new Ammo.btTransform();\n      transforma.setIdentity();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      transforma.setOrigin(_vec3_1);\n\n      let rotation = transforma.getRotation();\n      rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n      transforma.setRotation(rotation);\n\n      if (details.objectb) {\n        transformb = new Ammo.btTransform();\n        transformb.setIdentity();\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transformb.setOrigin(_vec3_2);\n\n        rotation = transformb.getRotation();\n        rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btGeneric6DofConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb,\n          true\n        );\n      }\n      else {\n        constraint = new Ammo.btGeneric6DofConstraint(\n          _objects[details.objecta],\n          transforma,\n          true\n        );\n      }\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      if (transformb !== undefined) Ammo.destroy(transformb);\n\n      break;\n    }\n  default:\n    return;\n  }\n\n  world.addConstraint(constraint);\n\n  constraint.a = _objects[details.objecta];\n  constraint.b = _objects[details.objectb];\n\n  constraint.enableFeedback();\n  _constraints[details.id] = constraint;\n  _num_constraints++;\n\n  if (SUPPORT_TRANSFERABLE) {\n    constraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n    constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n  }\n  else constraintreport = [MESSAGE_TYPES.CONSTRAINTREPORT];\n};\n\npublic_functions.removeConstraint = (details) => {\n  const constraint = _constraints[details.id];\n\n  if (constraint !== undefined) {\n    world.removeConstraint(constraint);\n    _constraints[details.id] = null;\n    _num_constraints--;\n  }\n};\n\npublic_functions.constraint_setBreakingImpulseThreshold = (details) => {\n  const constraint = _constraints[details.id];\n  if (constraint !== undefined) constraint.setBreakingImpulseThreshold(details.threshold);\n};\n\npublic_functions.simulate = (params = {}) => {\n  if (world) {\n    if (params.timeStep && params.timeStep < fixedTimeStep)\n      params.timeStep = fixedTimeStep;\n\n    params.maxSubSteps = params.maxSubSteps || Math.ceil(params.timeStep / fixedTimeStep); // If maxSubSteps is not defined, keep the simulation fully up to date\n\n    world.stepSimulation(params.timeStep, params.maxSubSteps, fixedTimeStep);\n\n    if (_vehicles.length > 0) reportVehicles();\n    reportCollisions();\n    if (_constraints.length > 0) reportConstraints();\n    reportWorld();\n    if (_softbody_enabled) reportWorld_softbodies();\n  }\n};\n\n// Constraint functions\npublic_functions.hinge_setLimits = (params) => {\n  _constraints[params.constraint].setLimit(params.low, params.high, 0, params.bias_factor, params.relaxation_factor);\n};\n\npublic_functions.hinge_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableAngularMotor(true, params.velocity, params.acceleration);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.hinge_disableMotor = (params) => {\n  _constraints[params.constraint].enableMotor(false);\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_setLimits = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setLowerLinLimit(params.lin_lower || 0);\n  constraint.setUpperLinLimit(params.lin_upper || 0);\n\n  constraint.setLowerAngLimit(params.ang_lower || 0);\n  constraint.setUpperAngLimit(params.ang_upper || 0);\n};\n\npublic_functions.slider_setRestitution = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setSoftnessLimLin(params.linear || 0);\n  constraint.setSoftnessLimAng(params.angular || 0);\n};\n\npublic_functions.slider_enableLinearMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setTargetLinMotorVelocity(params.velocity);\n  constraint.setMaxLinMotorForce(params.acceleration);\n  constraint.setPoweredLinMotor(true);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_disableLinearMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setPoweredLinMotor(false);\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setTargetAngMotorVelocity(params.velocity);\n  constraint.setMaxAngMotorForce(params.acceleration);\n  constraint.setPoweredAngMotor(true);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_disableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setPoweredAngMotor(false);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.conetwist_setLimit = (params) => {\n  _constraints[params.constraint].setLimit(params.z, params.y, params.x); // ZYX order\n};\n\npublic_functions.conetwist_enableMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableMotor(true);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_setMaxMotorImpulse = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setMaxMotorImpulse(params.max_impulse);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_setMotorTarget = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _quat.setX(params.x);\n  _quat.setY(params.y);\n  _quat.setZ(params.z);\n  _quat.setW(params.w);\n\n  constraint.setMotorTarget(_quat);\n\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_disableMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableMotor(false);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.dof_setLinearLowerLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setLinearLowerLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setLinearUpperLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setLinearUpperLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setAngularLowerLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setAngularLowerLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setAngularUpperLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setAngularUpperLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  const motor = constraint.getRotationalLimitMotor(params.which);\n  motor.set_m_enableMotor(true);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_configureAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint],\n    motor = constraint.getRotationalLimitMotor(params.which);\n\n  motor.set_m_loLimit(params.low_angle);\n  motor.set_m_hiLimit(params.high_angle);\n  motor.set_m_targetVelocity(params.velocity);\n  motor.set_m_maxMotorForce(params.max_force);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_disableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint],\n    motor = constraint.getRotationalLimitMotor(params.which);\n\n  motor.set_m_enableMotor(false);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\nconst reportWorld = () => {\n  if (SUPPORT_TRANSFERABLE && worldreport.length < 2 + _num_rigidbody_objects * WORLDREPORT_ITEMSIZE) {\n    worldreport = new Float32Array(\n      2 // message id & # objects in report\n      +\n      (Math.ceil(_num_rigidbody_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * WORLDREPORT_ITEMSIZE // # of values needed * item size\n    );\n\n    worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n  }\n\n  worldreport[1] = _num_rigidbody_objects; // record how many objects we're reporting on\n\n  {\n    let i = 0,\n      index = _objects.length;\n\n    while (index--) {\n      const object = _objects[index];\n\n      if (object && object.type === 1) { // RigidBodies.\n        // #TODO: we can't use center of mass transform when center of mass can change,\n        //        but getMotionState().getWorldTransform() screws up on objects that have been moved\n        // object.getMotionState().getWorldTransform( transform );\n        // object.getMotionState().getWorldTransform(_transform);\n\n        const transform = object.getCenterOfMassTransform();\n        const origin = transform.getOrigin();\n        const rotation = transform.getRotation();\n\n        // add values to report\n        const offset = 2 + (i++) * WORLDREPORT_ITEMSIZE;\n\n        worldreport[offset] = object.id;\n\n        worldreport[offset + 1] = origin.x();\n        worldreport[offset + 2] = origin.y();\n        worldreport[offset + 3] = origin.z();\n\n        worldreport[offset + 4] = rotation.x();\n        worldreport[offset + 5] = rotation.y();\n        worldreport[offset + 6] = rotation.z();\n        worldreport[offset + 7] = rotation.w();\n\n        _vector = object.getLinearVelocity();\n        worldreport[offset + 8] = _vector.x();\n        worldreport[offset + 9] = _vector.y();\n        worldreport[offset + 10] = _vector.z();\n\n        _vector = object.getAngularVelocity();\n        worldreport[offset + 11] = _vector.x();\n        worldreport[offset + 12] = _vector.y();\n        worldreport[offset + 13] = _vector.z();\n      }\n    }\n  }\n\n  if (SUPPORT_TRANSFERABLE) send(worldreport.buffer, [worldreport.buffer]);\n  else send(worldreport);\n};\n\nconst reportWorld_softbodies = () => {\n  // TODO: Add SUPPORTTRANSFERABLE.\n\n  softreport = new Float32Array(\n    2 // message id & # objects in report\n    +\n    _num_softbody_objects * 2 +\n    _softbody_report_size * 6\n  );\n\n  softreport[0] = MESSAGE_TYPES.SOFTREPORT;\n  softreport[1] = _num_softbody_objects; // record how many objects we're reporting on\n\n  {\n    let offset = 2,\n      index = _objects.length;\n\n    while (index--) {\n      const object = _objects[index];\n\n      if (object && object.type === 0) { // SoftBodies.\n\n        softreport[offset] = object.id;\n\n        const offsetVert = offset + 2;\n\n        if (object.rope === true) {\n          const nodes = object.get_m_nodes();\n          const size = nodes.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const node = nodes.at(i);\n            const vert = node.get_m_x();\n            const off = offsetVert + i * 3;\n\n            softreport[off] = vert.x();\n            softreport[off + 1] = vert.y();\n            softreport[off + 2] = vert.z();\n          }\n\n          offset += size * 3 + 2;\n        }\n        else if (object.cloth) {\n          const nodes = object.get_m_nodes();\n          const size = nodes.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const node = nodes.at(i);\n            const vert = node.get_m_x();\n            const normal = node.get_m_n();\n            const off = offsetVert + i * 6;\n\n            softreport[off] = vert.x();\n            softreport[off + 1] = vert.y();\n            softreport[off + 2] = vert.z();\n\n            softreport[off + 3] = -normal.x();\n            softreport[off + 4] = -normal.y();\n            softreport[off + 5] = -normal.z();\n          }\n\n          offset += size * 6 + 2;\n        }\n        else {\n          const faces = object.get_m_faces();\n          const size = faces.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const face = faces.at(i);\n\n            const node1 = face.get_m_n(0);\n            const node2 = face.get_m_n(1);\n            const node3 = face.get_m_n(2);\n\n            const vert1 = node1.get_m_x();\n            const vert2 = node2.get_m_x();\n            const vert3 = node3.get_m_x();\n\n            const normal1 = node1.get_m_n();\n            const normal2 = node2.get_m_n();\n            const normal3 = node3.get_m_n();\n\n            const off = offsetVert + i * 18;\n\n            softreport[off] = vert1.x();\n            softreport[off + 1] = vert1.y();\n            softreport[off + 2] = vert1.z();\n\n            softreport[off + 3] = normal1.x();\n            softreport[off + 4] = normal1.y();\n            softreport[off + 5] = normal1.z();\n\n            softreport[off + 6] = vert2.x();\n            softreport[off + 7] = vert2.y();\n            softreport[off + 8] = vert2.z();\n\n            softreport[off + 9] = normal2.x();\n            softreport[off + 10] = normal2.y();\n            softreport[off + 11] = normal2.z();\n\n            softreport[off + 12] = vert3.x();\n            softreport[off + 13] = vert3.y();\n            softreport[off + 14] = vert3.z();\n\n            softreport[off + 15] = normal3.x();\n            softreport[off + 16] = normal3.y();\n            softreport[off + 17] = normal3.z();\n          }\n\n          offset += size * 18 + 2;\n        }\n      }\n    }\n  }\n\n  // if (SUPPORT_TRANSFERABLE) send(softreport.buffer, [softreport.buffer]);\n  // else send(softreport);\n  send(softreport);\n};\n\nconst reportCollisions = () => {\n  const dp = world.getDispatcher(),\n    num = dp.getNumManifolds();\n  // _collided = false;\n\n  if (SUPPORT_TRANSFERABLE) {\n    if (collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE) {\n      collisionreport = new Float32Array(\n        2 // message id & # objects in report\n        +\n        (Math.ceil(_num_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * COLLISIONREPORT_ITEMSIZE // # of values needed * item size\n      );\n      collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n    }\n  }\n\n  collisionreport[1] = 0; // how many collisions we're reporting on\n\n  for (let i = 0; i < num; i++) {\n    const manifold = dp.getManifoldByIndexInternal(i),\n      num_contacts = manifold.getNumContacts();\n\n    if (num_contacts === 0) continue;\n\n    for (let j = 0; j < num_contacts; j++) {\n      const pt = manifold.getContactPoint(j);\n\n      // if ( pt.getDistance() < 0 ) {\n      const offset = 2 + (collisionreport[1]++) * COLLISIONREPORT_ITEMSIZE;\n      collisionreport[offset] = _objects_ammo[manifold.getBody0().ptr];\n      collisionreport[offset + 1] = _objects_ammo[manifold.getBody1().ptr];\n\n      _vector = pt.get_m_normalWorldOnB();\n      collisionreport[offset + 2] = _vector.x();\n      collisionreport[offset + 3] = _vector.y();\n      collisionreport[offset + 4] = _vector.z();\n      break;\n      // }\n      // send(_objects_ammo);\n    }\n  }\n\n  if (SUPPORT_TRANSFERABLE) send(collisionreport.buffer, [collisionreport.buffer]);\n  else send(collisionreport);\n};\n\nconst reportVehicles = function () {\n  if (SUPPORT_TRANSFERABLE) {\n    if (vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE) {\n      vehiclereport = new Float32Array(\n        2 // message id & # objects in report\n        +\n        (Math.ceil(_num_wheels / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * VEHICLEREPORT_ITEMSIZE // # of values needed * item size\n      );\n      vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n    }\n  }\n\n  {\n    let i = 0,\n      j = 0,\n      index = _vehicles.length;\n\n    while (index--) {\n      if (_vehicles[index]) {\n        const vehicle = _vehicles[index];\n\n        for (j = 0; j < vehicle.getNumWheels(); j++) {\n          // vehicle.updateWheelTransform( j, true );\n          // transform = vehicle.getWheelTransformWS( j );\n          const transform = vehicle.getWheelInfo(j).get_m_worldTransform();\n\n          const origin = transform.getOrigin();\n          const rotation = transform.getRotation();\n\n          // add values to report\n          const offset = 1 + (i++) * VEHICLEREPORT_ITEMSIZE;\n\n          vehiclereport[offset] = index;\n          vehiclereport[offset + 1] = j;\n\n          vehiclereport[offset + 2] = origin.x();\n          vehiclereport[offset + 3] = origin.y();\n          vehiclereport[offset + 4] = origin.z();\n\n          vehiclereport[offset + 5] = rotation.x();\n          vehiclereport[offset + 6] = rotation.y();\n          vehiclereport[offset + 7] = rotation.z();\n          vehiclereport[offset + 8] = rotation.w();\n        }\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE && j !== 0) send(vehiclereport.buffer, [vehiclereport.buffer]);\n    else if (j !== 0) send(vehiclereport);\n  }\n};\n\nconst reportConstraints = function () {\n  if (SUPPORT_TRANSFERABLE) {\n    if (constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE) {\n      constraintreport = new Float32Array(\n        2 // message id & # objects in report\n        +\n        (Math.ceil(_num_constraints / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size\n      );\n      constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n    }\n  }\n\n  {\n    let offset = 0,\n      i = 0,\n      index = _constraints.lenght;\n\n    while (index--) {\n      if (_constraints[index]) {\n        const constraint = _constraints[index];\n        const offset_body = constraint.a;\n        const transform = constraint.ta;\n        const origin = transform.getOrigin();\n\n        // add values to report\n        offset = 1 + (i++) * CONSTRAINTREPORT_ITEMSIZE;\n\n        constraintreport[offset] = index;\n        constraintreport[offset + 1] = offset_body.id;\n        constraintreport[offset + 2] = origin.x;\n        constraintreport[offset + 3] = origin.y;\n        constraintreport[offset + 4] = origin.z;\n        constraintreport[offset + 5] = constraint.getBreakingImpulseThreshold();\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE && i !== 0) send(constraintreport.buffer, [constraintreport.buffer]);\n    else if (i !== 0) send(constraintreport);\n  }\n};\n\nself.onmessage = function (event) {\n  if (event.data instanceof Float32Array) {\n    // transferable object\n    switch (event.data[0]) {\n    case MESSAGE_TYPES.WORLDREPORT:\n      {\n        worldreport = new Float32Array(event.data);\n        break;\n      }\n    case MESSAGE_TYPES.COLLISIONREPORT:\n      {\n        collisionreport = new Float32Array(event.data);\n        break;\n      }\n    case MESSAGE_TYPES.VEHICLEREPORT:\n      {\n        vehiclereport = new Float32Array(event.data);\n        break;\n      }\n    case MESSAGE_TYPES.CONSTRAINTREPORT:\n      {\n        constraintreport = new Float32Array(event.data);\n        break;\n      }\n    default:\n    }\n\n    return;\n  }\n  else if (event.data.cmd && public_functions[event.data.cmd]) public_functions[event.data.cmd](event.data.params);\n};\n\nself.receive = self.onmessage;\n\n\n\n\n});","import WorldModuleBase from './core/WorldModuleBase';\n\nimport {\n  addObjectChildren,\n  MESSAGE_TYPES,\n  temp1Vector3,\n  temp1Matrix4,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE\n} from '../api';\n\nimport PhysicsWorker from 'worker!../worker.js';\n\nexport class WorldModule extends WorldModuleBase {\n  constructor(...args) {\n    super(...args);\n\n    this.worker = new PhysicsWorker();\n    this.worker.transferableMessage = this.worker.webkitPostMessage || this.worker.postMessage;\n\n    this.isLoaded = false;\n\n    const options = this.options;\n\n    this.loader = new Promise((resolve, reject) => {\n      // if (options.wasm) {\n      //   fetch(options.wasm)\n      //     .then(response => response.arrayBuffer())\n      //     .then(buffer => {\n      //       options.wasmBuffer = buffer;\n      //\n      //       this.execute('init', options);\n      //       resolve();\n      //     });\n      // } else {\n        this.execute('init', options);\n        resolve();\n      // }\n    });\n\n    this.loader.then(() => {this.isLoaded = true});\n\n    // Test SUPPORT_TRANSFERABLE\n\n    const ab = new ArrayBuffer(1);\n    this.worker.transferableMessage(ab, [ab]);\n    this.SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n\n    this.setup();\n  }\n\n  send(...args) {\n    this.worker.transferableMessage(...args);\n  }\n\n  receive(callback) {\n    this.worker.addEventListener('message', callback);\n  }\n}\n","import {Vector3, Quaternion} from 'three';\n\nconst properties = {\n  position: {\n    get() {\n      return this._native.position;\n    },\n\n    set(vector3) {\n      const pos = this._native.position;\n      const scope = this;\n\n      Object.defineProperties(pos, {\n        x: {\n          get() {\n            return this._x;\n          },\n\n          set(x) {\n            scope.__dirtyPosition = true;\n            this._x = x;\n          }\n        },\n        y: {\n          get() {\n            return this._y;\n          },\n\n          set(y) {\n            scope.__dirtyPosition = true;\n            this._y = y;\n          }\n        },\n        z: {\n          get() {\n            return this._z;\n          },\n\n          set(z) {\n            scope.__dirtyPosition = true;\n            this._z = z;\n          }\n        }\n      });\n\n      scope.__dirtyPosition = true;\n\n      pos.copy(vector3);\n    }\n  },\n\n  quaternion: {\n    get() {\n      this.__c_rot = true;\n      return this.native.quaternion;\n    },\n\n    set(quaternion) {\n      const quat = this._native.quaternion,\n        native = this._native;\n\n      quat.copy(quaternion);\n\n      quat.onChange(() => {\n        if (this.__c_rot) {\n          if (native.__dirtyRotation === true) {\n            this.__c_rot = false;\n            native.__dirtyRotation = false;\n          }\n          native.__dirtyRotation = true;\n        }\n      });\n    }\n  },\n\n  rotation: {\n    get() {\n      this.__c_rot = true;\n      return this._native.rotation;\n    },\n\n    set(euler) {\n      const rot = this._native.rotation,\n        native = this._native;\n\n      this.quaternion.copy(new Quaternion().setFromEuler(euler));\n\n      rot.onChange(() => {\n        if (this.__c_rot) {\n          this.quaternion.copy(new Quaternion().setFromEuler(rot));\n          native.__dirtyRotation = true;\n        }\n      });\n    }\n  }\n}\n\nfunction wrapPhysicsPrototype(scope) {\n  for (let key in properties) {\n    Object.defineProperty(scope, key, {\n      get: properties[key].get.bind(scope),\n      set: properties[key].set.bind(scope),\n      configurable: true,\n      enumerable: true\n    });\n  }\n}\n\nfunction onCopy(source) {\n  wrapPhysicsPrototype(this);\n\n  const physics = this.use('physics');\n  const sourcePhysics = source.use('physics');\n\n  this.manager.modules.physics = physics.clone(this.manager);\n\n  physics.data = {...sourcePhysics.data};\n  physics.data.isSoftBodyReset = false;\n  if (physics.data.isSoftbody) physics.data.isSoftBodyReset = false;\n\n  this.position = this.position.clone();\n  this.rotation = this.rotation.clone();\n  this.quaternion = this.quaternion.clone();\n\n  return source;\n}\n\nfunction onWrap() {\n  this.position = this.position.clone();\n  this.rotation = this.rotation.clone();\n  this.quaternion = this.quaternion.clone();\n}\n\nclass API {\n  applyCentralImpulse(force) {\n    this.execute('applyCentralImpulse', {id: this.data.id, x: force.x, y: force.y, z: force.z});\n  }\n\n  applyImpulse(force, offset) {\n    this.execute('applyImpulse', {\n      id: this.data.id,\n      impulse_x: force.x,\n      impulse_y: force.y,\n      impulse_z: force.z,\n      x: offset.x,\n      y: offset.y,\n      z: offset.z\n    });\n  }\n\n  applyTorque(force) {\n    this.execute('applyTorque', {\n      id: this.data.id,\n      torque_x: force.x,\n      torque_y: force.y,\n      torque_z: force.z\n    });\n  }\n\n  applyCentralForce(force) {\n    this.execute('applyCentralForce', {\n      id: this.data.id,\n      x: force.x,\n      y: force.y,\n      z: force.z\n    });\n  }\n\n  applyForce(force, offset) {\n    this.execute('applyForce', {\n      id: this.data.id,\n      force_x: force.x,\n      force_y: force.y,\n      force_z: force.z,\n      x: offset.x,\n      y: offset.y,\n      z: offset.z\n    });\n  }\n\n  getAngularVelocity() {\n    return this.data.angularVelocity;\n  }\n\n  setAngularVelocity(velocity) {\n    this.execute(\n      'setAngularVelocity',\n      {id: this.data.id, x: velocity.x, y: velocity.y, z: velocity.z}\n    );\n  }\n\n  getLinearVelocity() {\n    return this.data.linearVelocity;\n  }\n\n  setLinearVelocity(velocity) {\n    this.execute(\n      'setLinearVelocity',\n      {id: this.data.id, x: velocity.x, y: velocity.y, z: velocity.z}\n    );\n  }\n\n  setAngularFactor(factor) {\n    this.execute(\n      'setAngularFactor',\n      {id: this.data.id, x: factor.x, y: factor.y, z: factor.z}\n    );\n  }\n\n  setLinearFactor(factor) {\n    this.execute(\n      'setLinearFactor',\n      {id: this.data.id, x: factor.x, y: factor.y, z: factor.z}\n    );\n  }\n\n  setDamping(linear, angular) {\n    this.execute(\n      'setDamping',\n      {id: this.data.id, linear, angular}\n    );\n  }\n\n  setCcdMotionThreshold(threshold) {\n    this.execute(\n      'setCcdMotionThreshold',\n      {id: this.data.id, threshold}\n    );\n  }\n\n  setCcdSweptSphereRadius(radius) {\n    this.execute('setCcdSweptSphereRadius', {id: this.data.id, radius});\n  }\n}\n\nexport default class extends API {\n  static rigidbody = () => ({\n    touches: [],\n    linearVelocity: new Vector3(),\n    angularVelocity: new Vector3(),\n    mass: 10,\n    scale: new Vector3(1, 1, 1),\n    restitution: 0.3,\n    friction: 0.8,\n    damping: 0,\n    margin: 0\n  });\n\n  static softbody = () => ({\n    touches: [],\n    restitution: 0.3,\n    friction: 0.8,\n    damping: 0,\n    scale: new Vector3(1, 1, 1),\n    pressure: 100,\n    margin: 0,\n    klst: 0.9,\n    kvst: 0.9,\n    kast: 0.9,\n    piterations: 1,\n    viterations: 0,\n    diterations: 0,\n    citerations: 4,\n    anchorHardness: 0.7,\n    rigidHardness: 1,\n    isSoftbody: true,\n    isSoftBodyReset: false\n  });\n\n  static rope = () => ({\n    touches: [],\n    friction: 0.8,\n    scale: new Vector3(1, 1, 1),\n    damping: 0,\n    margin: 0,\n    klst: 0.9,\n    kvst: 0.9,\n    kast: 0.9,\n    piterations: 1,\n    viterations: 0,\n    diterations: 0,\n    citerations: 4,\n    anchorHardness: 0.7,\n    rigidHardness: 1,\n    isSoftbody: true\n  });\n\n  static cloth = () => ({\n    touches: [],\n    friction: 0.8,\n    damping: 0,\n    margin: 0,\n    scale: new Vector3(1, 1, 1),\n    klst: 0.9,\n    kvst: 0.9,\n    kast: 0.9,\n    piterations: 1,\n    viterations: 0,\n    diterations: 0,\n    citerations: 4,\n    anchorHardness: 0.7,\n    rigidHardness: 1\n  });\n\n  constructor(defaults, data) {\n    super();\n    this.data = Object.assign(defaults, data);\n  }\n\n  integrate(self) {\n    wrapPhysicsPrototype(this);\n  }\n\n  manager(manager) {\n    manager.define('physics');\n\n    this.execute = (...data) => {\n      return manager.has('module:world')\n      ? manager.get('module:world').execute(...data)\n      : () => {};\n    };\n  }\n\n  updateData(callback) {\n    this.bridge.geometry = function (geometry, module) {\n      if (!callback) return geometry;\n\n      const result = callback(geometry, module);\n      return result ? result : geometry;\n    }\n  }\n\n  clone(manager) {\n    const clone = new this.constructor();\n    clone.data = {...this.data};\n    clone.bridge.geometry = this.bridge.geometry;\n    this.manager.apply(clone, [manager]);\n\n    return clone;\n  }\n\n  bridge = {\n    onCopy,\n    onWrap\n  };\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class BoxModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'box',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = data.depth || geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class CompoundModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'compound',\n      ...PhysicsModule.rigidbody()\n    }, params);\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\n// TODO: Test CapsuleModule in action.\nexport class CapsuleModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'capsule',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = data.depth || geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class ConcaveModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'concave',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      data.data = this.geometryProcessor(geometry);\n    });\n  }\n\n  geometryProcessor(geometry) {\n    if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n    const data = geometry.isBufferGeometry ?\n      geometry.attributes.position.array :\n      new Float32Array(geometry.faces.length * 9);\n\n    if (!geometry.isBufferGeometry) {\n      const vertices = geometry.vertices;\n\n      for (let i = 0; i < geometry.faces.length; i++) {\n        const face = geometry.faces[i];\n\n        const vA = vertices[face.a];\n        const vB = vertices[face.b];\n        const vC = vertices[face.c];\n\n        const i9 = i * 9;\n\n        data[i9] = vA.x;\n        data[i9 + 1] = vA.y;\n        data[i9 + 2] = vA.z;\n\n        data[i9 + 3] = vB.x;\n        data[i9 + 4] = vB.y;\n        data[i9 + 5] = vB.z;\n\n        data[i9 + 6] = vC.x;\n        data[i9 + 7] = vC.y;\n        data[i9 + 8] = vC.z;\n      }\n    }\n\n    return data;\n  };\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class ConeModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'cone',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.radius = data.radius || (geometry.boundingBox.max.x - geometry.boundingBox.min.x) / 2;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n    });\n  }\n}\n","import {BufferGeometry} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nexport class ConvexModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'convex',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n      if (!geometry.isBufferGeometry) geometry._bufferGeometry = new BufferGeometry().fromGeometry(geometry);\n\n      data.data = geometry.isBufferGeometry ?\n        geometry.attributes.position.array :\n        geometry._bufferGeometry.attributes.position.array;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class CylinderModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'cylinder',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = data.depth || geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\nimport {Vector3, Vector2, BufferGeometry} from 'three';\n\nexport class HeightfieldModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'heightfield',\n      size: new Vector2(1, 1),\n      autoAlign: false,\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      const {x: xdiv, y: ydiv} = data.size;\n      const verts = geometry.isBufferGeometry ? geometry.attributes.position.array : geometry.vertices;\n      let size = geometry.isBufferGeometry ? verts.length / 3 : verts.length;\n\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      const xsize = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      const ysize = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n      data.xpts = (typeof xdiv === 'undefined') ? Math.sqrt(size) : xdiv + 1;\n      data.ypts = (typeof ydiv === 'undefined') ? Math.sqrt(size) : ydiv + 1;\n\n      // note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\n      data.absMaxHeight = Math.max(geometry.boundingBox.max.y, Math.abs(geometry.boundingBox.min.y));\n\n      const points = new Float32Array(size),\n        xpts = data.xpts,\n        ypts = data.ypts;\n\n      while (size--) {\n        const vNum = size % xpts + ((ypts - Math.round((size / xpts) - ((size % xpts) / xpts)) - 1) * ypts);\n\n        if (geometry.isBufferGeometry) points[size] = verts[vNum * 3 + 1];\n        else points[size] = verts[vNum].y;\n      }\n\n      data.points = points;\n\n      data.scale.multiply(\n        new Vector3(xsize / (xpts - 1), 1, ysize / (ypts - 1))\n      );\n\n      if (data.autoAlign) geometry.translate(xsize / -2, 0, ysize / -2);\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class PlaneModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'plane',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = data.width || geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = data.height || geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.normal = data.normal || geometry.faces[0].normal.clone();\n    });\n  }\n}\n","import PhysicsModule from './core/PhysicsModule';\n\nexport class SphereModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'sphere',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingSphere) geometry.computeBoundingSphere();\n      data.radius = data.radius || geometry.boundingSphere.radius;\n    });\n  }\n}\n","import {BufferGeometry, BufferAttribute} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nexport class SoftbodyModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'softTrimesh',\n      ...PhysicsModule.softbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      const idxGeometry = geometry.isBufferGeometry\n        ? geometry\n        : (() => {\n          geometry.mergeVertices();\n\n          const bufferGeometry = new BufferGeometry();\n\n          bufferGeometry.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          bufferGeometry.setIndex(\n            new BufferAttribute(\n              new (geometry.faces.length * 3 > 65535 ? Uint32Array : Uint16Array)(geometry.faces.length * 3),\n              1\n            ).copyIndicesArray(geometry.faces)\n          );\n\n          return bufferGeometry;\n        })();\n\n      data.aVertices = idxGeometry.attributes.position.array;\n      data.aIndices = idxGeometry.index.array;\n\n      return new BufferGeometry().fromGeometry(geometry);\n    });\n  }\n\n  appendAnchor(object, node, influence = 1, collisionBetweenLinkedBodies = true) {\n    const o1 = this.data.id;\n    const o2 = object.use('physics').data.id;\n\n    this.execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n}\n","import {BufferGeometry, BufferAttribute} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nfunction arrayMax(array) {\n\tif (array.length === 0) return - Infinity;\n\n\tvar max = array[0];\n\n\tfor (let i = 1, l = array.length; i < l; ++ i ) {\n\t\tif (array[ i ] > max) max = array[i];\n\t}\n\n\treturn max;\n}\n\nexport class ClothModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'softClothMesh',\n      ...PhysicsModule.cloth()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      const geomParams = geometry.parameters;\n\n      const geom = geometry.isBufferGeometry\n        ? geometry\n          : (() => {\n          geometry.mergeVertices();\n\n          const bufferGeometry = new BufferGeometry();\n\n          bufferGeometry.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n\t\t\t\t\tconst faces = geometry.faces, facesLength = faces.length, uvs = geometry.faceVertexUvs[0];\n\n          const normalsArray = new Float32Array(facesLength * 3);\n          // const uvsArray = new Array(geometry.vertices.length * 2);\n          const uvsArray = new Float32Array(facesLength * 2);\n          const uvsReplacedArray = new Float32Array(facesLength * 6);\n\t\t\t\t\tconst faceArray = new Uint32Array(facesLength * 3);\n\n          for (let i = 0; i < facesLength; i++) {\n            const i3 = i * 3;\n            const i6 = i * 6;\n            const normal = faces[i].normal || new Vector3();\n\n\t\t\t\t\t\tfaceArray[i3] = faces[i].a;\n            faceArray[i3 + 1] = faces[i].b;\n            faceArray[i3 + 2] = faces[i].c;\n\n            normalsArray[i3] = normal.x;\n            normalsArray[i3 + 1] = normal.y;\n            normalsArray[i3 + 2] = normal.z;\n\n            uvsArray[faces[i].a * 2 + 0] = uvs[i][0].x; // a\n            uvsArray[faces[i].a * 2 + 1] = uvs[i][0].y;\n\n            uvsArray[faces[i].b * 2 + 0] = uvs[i][1].x; // b\n            uvsArray[faces[i].b * 2 + 1] = uvs[i][1].y;\n\n            uvsArray[faces[i].c * 2 + 0] = uvs[i][2].x; // c\n            uvsArray[faces[i].c * 2 + 1] = uvs[i][2].y;\n          }\n\n          bufferGeometry.addAttribute(\n            'normal',\n            new BufferAttribute(\n              normalsArray,\n              3\n            )\n          );\n\n          bufferGeometry.addAttribute(\n            'uv',\n            new BufferAttribute(\n              uvsArray,\n              2\n            )\n          );\n\n\t\t\t\t\tbufferGeometry.setIndex(\n            new BufferAttribute(\n              new (arrayMax(faces) * 3 > 65535 ? Uint32Array : Uint16Array)(facesLength * 3),\n              1\n            ).copyIndicesArray(faces)\n          );\n\n          return bufferGeometry;\n        })();\n\n      const verts = geom.attributes.position.array;\n\n      if (!geomParams.widthSegments) geomParams.widthSegments = 1;\n      if (!geomParams.heightSegments) geomParams.heightSegments = 1;\n\n      const idx00 = 0;\n      const idx01 = geomParams.widthSegments;\n      const idx10 = (geomParams.heightSegments + 1) * (geomParams.widthSegments + 1) - (geomParams.widthSegments + 1);\n      const idx11 = verts.length / 3 - 1;\n\n      data.corners = [\n        verts[idx01 * 3], verts[idx01 * 3 + 1], verts[idx01 * 3 + 2], //   ╗\n        verts[idx00 * 3], verts[idx00 * 3 + 1], verts[idx00 * 3 + 2], // ╔\n        verts[idx11 * 3], verts[idx11 * 3 + 1], verts[idx11 * 3 + 2], //       ╝\n        verts[idx10 * 3], verts[idx10 * 3 + 1], verts[idx10 * 3 + 2], //     ╚\n      ];\n\n      data.segments = [geomParams.widthSegments + 1, geomParams.heightSegments + 1];\n\n      return geom;\n    });\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this.data.id;\n    const o2 = object.use('physics').data.id;\n\n    this.execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n\n\tlinkNodes(object, n1, n2, modifier) {\n    const self = this.data.id;\n    const body = object.use('physics').data.id;\n\n    this.execute('linkNodes', {\n      self,\n\t\t\tbody,\n      n1, // self node\n      n2, // body node\n\t\t\tmodifier\n    });\n  }\n\n  appendLinearJoint(object, specs) {\n    const self = this.data.id;\n    const body = object.use('physics').data.id;\n\n    this.execute('appendLinearJoint', {\n      self,\n      body,\n      specs\n    });\n  }\n}\n","import {BufferGeometry, BufferAttribute, Vector3} from 'three';\nimport PhysicsModule from './core/PhysicsModule';\n\nexport class RopeModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'softRopeMesh',\n      ...PhysicsModule.rope()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.isBufferGeometry) {\n        geometry = (() => {\n          const buff = new BufferGeometry();\n\n          buff.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          return buff;\n        })();\n      }\n\n      const length = geometry.attributes.position.array.length / 3;\n      const vert = n => new Vector3().fromArray(geometry.attributes.position.array, n*3);\n\n      const v1 = vert(0);\n      const v2 = vert(length - 1);\n\n      data.data = [\n        v1.x, v1.y, v1.z,\n        v2.x, v2.y, v2.z,\n        length\n      ];\n\n      return geometry;\n    });\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this.data.id;\n    const o2 = object.use('physics').data.id;\n\n    this.execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n}\n","import {Loop} from 'whs';\n\nimport {\n  Object3D,\n  Quaternion,\n  Vector3,\n  Euler\n} from 'three';\n\nconst PI_2 = Math.PI / 2;\n\n// TODO: Fix DOM\nfunction FirstPersonControlsSolver(camera, mesh, params) {\n  const velocityFactor = 1;\n  let runVelocity = 0.25;\n\n  mesh.use('physics').setAngularFactor({x: 0, y: 0, z: 0});\n  camera.position.set(0, 0, 0);\n\n  /* Init */\n  const player = mesh,\n    pitchObject = new Object3D();\n\n  pitchObject.add(camera.native);\n\n  const yawObject = new Object3D();\n\n  yawObject.position.y = params.ypos; // eyes are 2 meters above the ground\n  yawObject.add(pitchObject);\n\n  const quat = new Quaternion();\n\n  let canJump = false,\n    // Moves.\n    moveForward = false,\n    moveBackward = false,\n    moveLeft = false,\n    moveRight = false;\n\n  player.on('collision', (otherObject, v, r, contactNormal) => {\n    console.log(contactNormal.y);\n    if (contactNormal.y < 0.5) // Use a \"good\" threshold value between 0 and 1 here!\n      canJump = true;\n  });\n\n  const onMouseMove = event => {\n    if (this.enabled === false) return;\n\n    const movementX = typeof event.movementX === 'number'\n      ? event.movementX : typeof event.mozMovementX === 'number'\n        ? event.mozMovementX : typeof event.getMovementX === 'function'\n          ? event.getMovementX() : 0;\n    const movementY = typeof event.movementY === 'number'\n      ? event.movementY : typeof event.mozMovementY === 'number'\n        ? event.mozMovementY : typeof event.getMovementY === 'function'\n          ? event.getMovementY() : 0;\n\n    yawObject.rotation.y -= movementX * 0.002;\n    pitchObject.rotation.x -= movementY * 0.002;\n\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  };\n\n  const physics = player.use('physics');\n\n  const onKeyDown = event => {\n    switch (event.keyCode) {\n      case 38: // up\n      case 87: // w\n        moveForward = true;\n        break;\n\n      case 37: // left\n      case 65: // a\n        moveLeft = true;\n        break;\n\n      case 40: // down\n      case 83: // s\n        moveBackward = true;\n        break;\n\n      case 39: // right\n      case 68: // d\n        moveRight = true;\n        break;\n\n      case 32: // space\n        console.log(canJump);\n        if (canJump === true) physics.applyCentralImpulse({x: 0, y: 300, z: 0});\n        canJump = false;\n        break;\n\n      case 16: // shift\n        runVelocity = 0.5;\n        break;\n\n      default:\n    }\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 38: // up\n      case 87: // w\n        moveForward = false;\n        break;\n\n      case 37: // left\n      case 65: // a\n        moveLeft = false;\n        break;\n\n      case 40: // down\n      case 83: // a\n        moveBackward = false;\n        break;\n\n      case 39: // right\n      case 68: // d\n        moveRight = false;\n        break;\n\n      case 16: // shift\n        runVelocity = 0.25;\n        break;\n\n      default:\n    }\n  };\n\n  document.body.addEventListener('mousemove', onMouseMove, false);\n  document.body.addEventListener('keydown', onKeyDown, false);\n  document.body.addEventListener('keyup', onKeyUp, false);\n\n  this.enabled = false;\n  this.getObject = () => yawObject;\n\n  this.getDirection = targetVec => {\n    targetVec.set(0, 0, -1);\n    quat.multiplyVector3(targetVec);\n  };\n\n  // Moves the camera to the Physi.js object position\n  // and adds velocity to the object if the run key is down.\n  const inputVelocity = new Vector3(),\n    euler = new Euler();\n\n  this.update = delta => {\n    if (this.enabled === false) return;\n\n    delta = delta || 0.5;\n    delta = Math.min(delta, 0.5, delta);\n\n    inputVelocity.set(0, 0, 0);\n\n    const speed = velocityFactor * delta * params.speed * runVelocity;\n\n    if (moveForward) inputVelocity.z = -speed;\n    if (moveBackward) inputVelocity.z = speed;\n    if (moveLeft) inputVelocity.x = -speed;\n    if (moveRight) inputVelocity.x = speed;\n\n    // Convert velocity to world coordinates\n    euler.x = pitchObject.rotation.x;\n    euler.y = yawObject.rotation.y;\n    euler.order = 'XYZ';\n\n    quat.setFromEuler(euler);\n\n    inputVelocity.applyQuaternion(quat);\n\n    physics.applyCentralImpulse({x: inputVelocity.x, y: 0, z: inputVelocity.z});\n    physics.setAngularVelocity({x: inputVelocity.z, y: 0, z: -inputVelocity.x});\n    physics.setAngularFactor({x: 0, y: 0, z: 0});\n  };\n\n  player.on('physics:added', () => {\n    player.manager.get('module:world').addEventListener('update', () => {\n      if (this.enabled === false) return;\n      yawObject.position.copy(player.position);\n    });\n  });\n}\n\nexport class FirstPersonModule {\n  static defaults = {\n    block: null,\n    speed: 1,\n    ypos: 1\n  };\n\n  constructor(object, params = {}) {\n    this.object = object;\n    this.params = params;\n\n    if (!this.params.block) {\n      this.params.block = document.getElementById('blocker');\n    }\n  }\n\n  manager(manager) {\n    this.controls = new FirstPersonControlsSolver(manager.get('camera'), this.object, this.params);\n\n    if ('pointerLockElement' in document\n      || 'mozPointerLockElement' in document\n      || 'webkitPointerLockElement' in document) {\n      const element = document.body;\n\n      const pointerlockchange = () => {\n        if (document.pointerLockElement === element\n          || document.mozPointerLockElement === element\n          || document.webkitPointerLockElement === element) {\n          this.controls.enabled = true;\n          this.params.block.style.display = 'none';\n        } else {\n          this.controls.enabled = false;\n          this.params.block.style.display = 'block';\n        }\n      };\n\n      document.addEventListener('pointerlockchange', pointerlockchange, false);\n      document.addEventListener('mozpointerlockchange', pointerlockchange, false);\n      document.addEventListener('webkitpointerlockchange', pointerlockchange, false);\n\n      const pointerlockerror = function () {\n        console.warn('Pointer lock error.');\n      };\n\n      document.addEventListener('pointerlockerror', pointerlockerror, false);\n      document.addEventListener('mozpointerlockerror', pointerlockerror, false);\n      document.addEventListener('webkitpointerlockerror', pointerlockerror, false);\n\n      document.querySelector('body').addEventListener('click', () => {\n        element.requestPointerLock = element.requestPointerLock\n          || element.mozRequestPointerLock\n          || element.webkitRequestPointerLock;\n\n        element.requestFullscreen = element.requestFullscreen\n          || element.mozRequestFullscreen\n          || element.mozRequestFullScreen\n          || element.webkitRequestFullscreen;\n\n        if (/Firefox/i.test(navigator.userAgent)) {\n          const fullscreenchange = () => {\n            if (document.fullscreenElement === element\n              || document.mozFullscreenElement === element\n              || document.mozFullScreenElement === element) {\n              document.removeEventListener('fullscreenchange', fullscreenchange);\n              document.removeEventListener('mozfullscreenchange', fullscreenchange);\n\n              element.requestPointerLock();\n            }\n          };\n\n          document.addEventListener('fullscreenchange', fullscreenchange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenchange, false);\n\n          element.requestFullscreen();\n        } else element.requestPointerLock();\n      });\n    } else console.warn('Your browser does not support the PointerLock');\n\n    manager.get('scene').add(this.controls.getObject());\n  }\n\n  integrate(self) {\n    const updateProcessor = c => {\n      self.controls.update(c.getDelta());\n    };\n\n    self.updateLoop = new Loop(updateProcessor).start(this);\n  }\n}\n"],"names":["MESSAGE_TYPES","WORLDREPORT","COLLISIONREPORT","VEHICLEREPORT","CONSTRAINTREPORT","SOFTREPORT","REPORT_ITEMSIZE","COLLISIONREPORT_ITEMSIZE","VEHICLEREPORT_ITEMSIZE","CONSTRAINTREPORT_ITEMSIZE","temp1Vector3","Vector3","temp2Vector3","temp1Matrix4","Matrix4","temp1Quat","Quaternion","getEulerXYZFromQuaternion","x","y","z","w","Math","atan2","asin","getQuatertionFromEuler","c1","cos","s1","sin","c2","s2","c3","s3","c1c2","s1s2","convertWorldPositionToObject","position","object","identity","makeRotationFromQuaternion","quaternion","getInverse","copy","sub","applyMatrix4","addObjectChildren","parent","i","children","length","child","physics","component","use","data","updateMatrix","updateMatrixWorld","setFromMatrixPosition","matrixWorld","setFromRotationMatrix","position_offset","rotation","push","Eventable","_eventListeners","event_name","callback","hasOwnProperty","index","indexOf","splice","parameters","Array","prototype","call","arguments","apply","obj","addEventListener","removeEventListener","dispatchEvent","ConeTwistConstraint","obja","objb","objecta","objectb","undefined","console","error","type","appliedImpulse","worldModule","id","positiona","clone","positionb","axisa","axisb","execute","constraint","max_impulse","target","setFromEuler","Euler","HingeConstraint","axis","low","high","bias_factor","relaxation_factor","velocity","acceleration","PointConstraint","SliderConstraint","lin_lower","lin_upper","ang_lower","ang_upper","linear","angular","scene","DOFConstraint","limit","which","low_angle","high_angle","max_force","Vehicle","mesh","tuning","VehicleTuning","wheels","_physijs","getObjectId","rigidBody","suspension_stiffness","suspension_compression","suspension_damping","max_suspension_travel","friction_slip","max_suspension_force","wheel_geometry","wheel_material","connection_point","wheel_direction","wheel_axle","suspension_rest_length","wheel_radius","is_front_wheel","wheel","Mesh","castShadow","receiveShadow","multiplyScalar","add","world","amount","steering","brake","force","WorldModuleBase","options","bridge","onAdd","self","defer","onAddCallback","bind","onRemove","onRemoveCallback","Object","assign","defaults","objects","vehicles","constraints","isSimulating","receive","_temp","event","ArrayBuffer","byteLength","Float32Array","updateScene","updateSoftbodies","updateCollisions","updateVehicles","updateConstraints","cmd","params","window","test","debug","dir","info","offset","__dirtyPosition","set","__dirtyRotation","linearVelocity","angularVelocity","SUPPORT_TRANSFERABLE","send","buffer","size","attributes","geometry","volumePositions","array","offsetVert","isSoftBodyReset","volumeNormals","normal","offs","x1","y1","z1","nx1","ny1","nz1","x2","y2","z2","nx2","ny2","nz2","x3","y3","z3","nx3","ny3","nz3","i9","needsUpdate","nx","ny","nz","vehicle","extractRotation","matrix","addVectors","collisions","normal_offsets","object2","id1","j","touches","id2","component2","data2","vel","getLinearVelocity","vel2","subVectors","temp1","temp2","normal_offset","emit","show_marker","getDefinition","marker","SphereGeometry","MeshNormalMaterial","BoxGeometry","native","manager","width","scale","height","depth","remove","pop","func","args","Promise","resolve","isLoaded","loader","then","define","worker","setFixedTimeStep","fixedTimeStep","setGravity","gravity","addConstraint","simulate","timeStep","maxSubSteps","_stats","begin","object_id","update","pos","isSoftbody","quat","end","simulateLoop","Loop","clock","getDelta","start","log","rateLimit","ammo","softbody","TARGET","Symbol","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","Worker","shimWorker","filename","fn","ShimWorker","forceFallback","o","source","toString","replace","slice","objURL","createSourceObject","revokeObjectURL","selfShim","postMessage","m","onmessage","setTimeout","isThisThread","testWorker","testArray","Uint8Array","navigator","userAgent","Error","e","terminate","str","createObjectURL","Blob","blob","append","getBlob","document","Events","events","empty","on","ctx","off","list","insideWorker","webkitPostMessage","ab","_object","_vector","_transform","_transform_pos","_softbody_enabled","last_simulation_duration","_num_objects","_num_rigidbody_objects","_num_softbody_objects","_num_wheels","_num_constraints","_softbody_report_size","_vec3_1","_vec3_2","_vec3_3","_quat","public_functions","_objects","_vehicles","_constraints","_objects_ammo","_object_shapes","_motion_states","_noncached_shapes","_compound_shapes","REPORT_CHUNKSIZE","worldreport","softreport","collisionreport","vehiclereport","constraintreport","WORLDREPORT_ITEMSIZE","getShapeFromCache","cache_key","setShapeCache","shape","createShape","description","setIdentity","Ammo","btCompoundShape","setX","setY","setZ","btStaticPlaneShape","btBoxShape","radius","btSphereShape","btCylinderShape","btCapsuleShape","btConeShape","triangle_mesh","btTriangleMesh","addTriangle","btBvhTriangleMeshShape","btConvexHullShape","addPoint","xpts","ypts","points","ptr","_malloc","p","p2","HEAPF32","btHeightfieldTerrainShape","absMaxHeight","createSoftBody","body","softBodyHelpers","btSoftBodyHelpers","aVertices","CreateFromTriMesh","getWorldInfo","aIndices","cr","corners","CreatePatch","btVector3","segments","CreateRope","init","noWorker","makeWorld","wasmBuffer","importScripts","loadAmmoFromBinary","btTransform","btQuaternion","reportsize","collisionConfiguration","btSoftBodyRigidBodyCollisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","solver","btSequentialImpulseConstraintSolver","broadphase","aabbmin","aabbmax","btAxisSweep3","btDbvtBroadphase","btSoftRigidDynamicsWorld","btDefaultSoftBodySolver","btDiscreteDynamicsWorld","appendAnchor","node","obj2","collisionBetweenLinkedBodies","influence","linkNodes","self_body","other_body","self_node","get_m_nodes","at","n1","other_node","n2","self_vec","get_m_x","other_vec","force_x","force_y","force_z","cached_distance","linked","_loop","setInterval","distance","sqrt","setVelocity","modifer2","max","modifier","addVelocity","appendLink","addForce","appendLinearJoint","specs","Specs","_pos","set_position","erp","set_erp","cfm","set_cfm","split","set_split","addObject","motionState","sbConfig","get_m_cfg","viterations","set_viterations","piterations","set_piterations","diterations","set_diterations","citerations","set_citerations","set_collisions","set_kDF","friction","set_kDP","damping","pressure","set_kPR","drag","set_kDG","lift","set_kLF","anchorHardness","set_kAHR","rigidHardness","set_kCHR","klst","get_m_materials","set_m_kLST","kast","set_m_kAST","kvst","set_m_kVST","castObject","btCollisionObject","getCollisionShape","setMargin","margin","setActivationState","state","rope","cloth","setW","rotate","translate","setTotalMass","mass","addSoftBody","get_m_faces","compound_shape","addChildShape","_child","trans","setOrigin","setRotation","destroy","setLocalScaling","calculateLocalInertia","btDefaultMotionState","rbInfo","btRigidBodyConstructionInfo","set_m_friction","set_m_restitution","restitution","set_m_linearDamping","set_m_angularDamping","btRigidBody","collision_flags","setCollisionFlags","group","mask","addRigidBody","activate","a","addVehicle","vehicle_tuning","btVehicleTuning","set_m_suspensionStiffness","set_m_suspensionCompression","set_m_suspensionDamping","set_m_maxSuspensionTravelCm","set_m_maxSuspensionForce","btRaycastVehicle","btDefaultVehicleRaycaster","setCoordinateSystem","removeVehicle","addWheel","setSteering","details","setSteeringValue","setBrake","applyEngineForce","removeObject","removeSoftBody","removeRigidBody","updateTransform","getMotionState","getWorldTransform","setWorldTransform","transform","updateMass","setMassProps","applyCentralImpulse","applyImpulse","impulse_x","impulse_y","impulse_z","applyTorque","torque_x","torque_y","torque_z","applyCentralForce","applyForce","onSimulationResume","last_simulation_time","setAngularVelocity","setLinearVelocity","setAngularFactor","setLinearFactor","setDamping","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","btPoint2PointConstraint","btHingeConstraint","transformb","transforma","getRotation","setEuler","btSliderConstraint","ta","tb","setEulerZYX","btConeTwistConstraint","setLimit","PI","btGeneric6DofConstraint","b","enableFeedback","removeConstraint","constraint_setBreakingImpulseThreshold","setBreakingImpulseThreshold","ceil","stepSimulation","reportVehicles","reportCollisions","reportConstraints","reportWorld","reportWorld_softbodies","hinge_setLimits","hinge_enableAngularMotor","enableAngularMotor","hinge_disableMotor","enableMotor","slider_setLimits","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","slider_setRestitution","setSoftnessLimLin","setSoftnessLimAng","slider_enableLinearMotor","setTargetLinMotorVelocity","setMaxLinMotorForce","setPoweredLinMotor","slider_disableLinearMotor","slider_enableAngularMotor","setTargetAngMotorVelocity","setMaxAngMotorForce","setPoweredAngMotor","slider_disableAngularMotor","conetwist_setLimit","conetwist_enableMotor","conetwist_setMaxMotorImpulse","setMaxMotorImpulse","conetwist_setMotorTarget","setMotorTarget","conetwist_disableMotor","dof_setLinearLowerLimit","setLinearLowerLimit","dof_setLinearUpperLimit","setLinearUpperLimit","dof_setAngularLowerLimit","setAngularLowerLimit","dof_setAngularUpperLimit","setAngularUpperLimit","dof_enableAngularMotor","motor","getRotationalLimitMotor","set_m_enableMotor","dof_configureAngularMotor","set_m_loLimit","set_m_hiLimit","set_m_targetVelocity","set_m_maxMotorForce","dof_disableAngularMotor","getCenterOfMassTransform","origin","getOrigin","getAngularVelocity","nodes","vert","get_m_n","faces","face","node1","node2","node3","vert1","vert2","vert3","normal1","normal2","normal3","dp","getDispatcher","num","getNumManifolds","manifold","getManifoldByIndexInternal","num_contacts","getNumContacts","pt","getContactPoint","getBody0","getBody1","get_m_normalWorldOnB","getNumWheels","getWheelInfo","get_m_worldTransform","lenght","offset_body","getBreakingImpulseThreshold","WorldModule","PhysicsWorker","transferableMessage","reject","setup","properties","get","_native","vector3","scope","defineProperties","_x","_y","_z","__c_rot","onChange","euler","rot","wrapPhysicsPrototype","key","defineProperty","configurable","enumerable","onCopy","sourcePhysics","modules","onWrap","API","factor","has","module","result","constructor","rigidbody","BoxModule","PhysicsModule","updateData","boundingBox","computeBoundingBox","min","CompoundModule","CapsuleModule","ConcaveModule","geometryProcessor","isBufferGeometry","vertices","vA","vB","vC","c","ConeModule","ConvexModule","_bufferGeometry","BufferGeometry","fromGeometry","CylinderModule","HeightfieldModule","Vector2","autoAlign","xdiv","ydiv","verts","xsize","ysize","abs","vNum","round","multiply","PlaneModule","SphereModule","boundingSphere","computeBoundingSphere","SoftbodyModule","idxGeometry","mergeVertices","bufferGeometry","addAttribute","BufferAttribute","copyVector3sArray","setIndex","Uint32Array","Uint16Array","copyIndicesArray","o1","o2","arrayMax","Infinity","l","ClothModule","geomParams","geom","facesLength","uvs","faceVertexUvs","normalsArray","uvsArray","faceArray","i3","widthSegments","heightSegments","idx00","idx01","idx10","idx11","RopeModule","buff","fromArray","n","v1","v2","PI_2","FirstPersonControlsSolver","camera","velocityFactor","runVelocity","player","pitchObject","Object3D","yawObject","ypos","canJump","moveForward","moveBackward","moveLeft","moveRight","otherObject","v","r","contactNormal","onMouseMove","enabled","movementX","mozMovementX","getMovementX","movementY","mozMovementY","getMovementY","onKeyDown","keyCode","onKeyUp","getObject","getDirection","targetVec","multiplyVector3","inputVelocity","delta","speed","order","applyQuaternion","FirstPersonModule","block","getElementById","controls","element","pointerlockchange","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","style","display","pointerlockerror","warn","querySelector","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","requestFullscreen","mozRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","fullscreenchange","fullscreenElement","mozFullscreenElement","mozFullScreenElement","updateProcessor","updateLoop"],"mappings":"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"}